/**
 * React v0.9.0
 *
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
!function(e){if("object"==typeof exports)module.exports=e();else if("function"==typeof define&&define.amd)define(e);else{var t;"undefined"!=typeof window?t=window:"undefined"!=typeof global?t=global:"undefined"!=typeof self&&(t=self),t.React=e()}}(function(){return function e(t,n,o){function r(a,s){if(!n[a]){if(!t[a]){var u="function"==typeof require&&require;if(!s&&u)return u(a,!0);if(i)return i(a,!0);throw new Error("Cannot find module '"+a+"'")}var c=n[a]={exports:{}};t[a][0].call(c.exports,function(e){var n=t[a][1][e];return r(n?n:e)},c,c.exports,e,t,n,o)}return n[a].exports}for(var i="function"==typeof require&&require,a=0;a<o.length;a++)r(o[a]);return r}({1:[function(e,t){"use strict";var n={componentDidMount:function(){this.props.autoFocus&&this.getDOMNode().focus()}};t.exports=n},{}],2:[function(e,t){"use strict";function n(e,t){return e+t.charAt(0).toUpperCase()+t.substring(1)}var o={columnCount:!0,fillOpacity:!0,flex:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},r=["Webkit","ms","Moz","O"];Object.keys(o).forEach(function(e){r.forEach(function(t){o[n(t,e)]=o[e]})});var i={background:{backgroundImage:!0,backgroundPosition:!0,backgroundRepeat:!0,backgroundColor:!0},border:{borderWidth:!0,borderStyle:!0,borderColor:!0},borderBottom:{borderBottomWidth:!0,borderBottomStyle:!0,borderBottomColor:!0},borderLeft:{borderLeftWidth:!0,borderLeftStyle:!0,borderLeftColor:!0},borderRight:{borderRightWidth:!0,borderRightStyle:!0,borderRightColor:!0},borderTop:{borderTopWidth:!0,borderTopStyle:!0,borderTopColor:!0},font:{fontStyle:!0,fontVariant:!0,fontWeight:!0,fontSize:!0,lineHeight:!0,fontFamily:!0}},a={isUnitlessNumber:o,shorthandPropertyExpansions:i};t.exports=a},{}],3:[function(e,t){"use strict";var n=e("./CSSProperty"),o=e("./dangerousStyleValue"),r=e("./escapeTextForBrowser"),i=e("./hyphenate"),a=e("./memoizeStringOnly"),s=a(function(e){return r(i(e))}),u={createMarkupForStyles:function(e){var t="";for(var n in e)if(e.hasOwnProperty(n)){var r=e[n];null!=r&&(t+=s(n)+":",t+=o(n,r)+";")}return t||null},setValueForStyles:function(e,t){var r=e.style;for(var i in t)if(t.hasOwnProperty(i)){var a=o(i,t[i]);if(a)r[i]=a;else{var s=n.shorthandPropertyExpansions[i];if(s)for(var u in s)r[u]="";else r[i]=""}}}};t.exports=u},{"./CSSProperty":2,"./dangerousStyleValue":92,"./escapeTextForBrowser":94,"./hyphenate":105,"./memoizeStringOnly":114}],4:[function(e,t){"use strict";function n(e){return"SELECT"===e.nodeName||"INPUT"===e.nodeName&&"file"===e.type}function o(e){var t=R.getPooled(I.change,T,e);C.accumulateTwoPhaseDispatches(t),M.batchedUpdates(r,t)}function r(e){y.enqueueEvents(e),y.processEventQueue()}function i(e,t){O=e,T=t,O.attachEvent("onchange",o)}function a(){O&&(O.detachEvent("onchange",o),O=null,T=null)}function s(e,t,n){return e===P.topChange?n:void 0}function u(e,t,n){e===P.topFocus?(a(),i(t,n)):e===P.topBlur&&a()}function c(e,t){O=e,T=t,N=e.value,S=Object.getOwnPropertyDescriptor(e.constructor.prototype,"value"),Object.defineProperty(O,"value",A),O.attachEvent("onpropertychange",p)}function l(){O&&(delete O.value,O.detachEvent("onpropertychange",p),O=null,T=null,N=null,S=null)}function p(e){if("value"===e.propertyName){var t=e.srcElement.value;t!==N&&(N=t,o(e))}}function d(e,t,n){return e===P.topInput?n:void 0}function f(e,t,n){e===P.topFocus?(l(),c(t,n)):e===P.topBlur&&l()}function h(e){return e!==P.topSelectionChange&&e!==P.topKeyUp&&e!==P.topKeyDown||!O||O.value===N?void 0:(N=O.value,T)}function m(e){return"INPUT"===e.nodeName&&("checkbox"===e.type||"radio"===e.type)}function v(e,t,n){return e===P.topClick?n:void 0}var g=e("./EventConstants"),y=e("./EventPluginHub"),C=e("./EventPropagators"),E=e("./ExecutionEnvironment"),M=e("./ReactUpdates"),R=e("./SyntheticEvent"),D=e("./isEventSupported"),x=e("./isTextInputElement"),b=e("./keyOf"),P=g.topLevelTypes,I={change:{phasedRegistrationNames:{bubbled:b({onChange:null}),captured:b({onChangeCapture:null})},dependencies:[P.topBlur,P.topChange,P.topClick,P.topFocus,P.topInput,P.topKeyDown,P.topKeyUp,P.topSelectionChange]}},O=null,T=null,N=null,S=null,_=!1;E.canUseDOM&&(_=D("change")&&(!("documentMode"in document)||document.documentMode>8));var w=!1;E.canUseDOM&&(w=D("input")&&(!("documentMode"in document)||document.documentMode>9));var A={get:function(){return S.get.call(this)},set:function(e){N=""+e,S.set.call(this,e)}},k={eventTypes:I,extractEvents:function(e,t,o,r){var i,a;if(n(t)?_?i=s:a=u:x(t)?w?i=d:(i=h,a=f):m(t)&&(i=v),i){var c=i(e,t,o);if(c){var l=R.getPooled(I.change,c,r);return C.accumulateTwoPhaseDispatches(l),l}}a&&a(e,t,o)}};t.exports=k},{"./EventConstants":14,"./EventPluginHub":16,"./EventPropagators":19,"./ExecutionEnvironment":20,"./ReactUpdates":68,"./SyntheticEvent":75,"./isEventSupported":107,"./isTextInputElement":109,"./keyOf":113}],5:[function(e,t){"use strict";var n=0,o={createReactRootIndex:function(){return n++}};t.exports=o},{}],6:[function(e,t){"use strict";function n(e){switch(e){case g.topCompositionStart:return C.compositionStart;case g.topCompositionEnd:return C.compositionEnd;case g.topCompositionUpdate:return C.compositionUpdate}}function o(e,t){return e===g.topKeyDown&&t.keyCode===h}function r(e,t){switch(e){case g.topKeyUp:return-1!==f.indexOf(t.keyCode);case g.topKeyDown:return t.keyCode!==h;case g.topKeyPress:case g.topMouseDown:case g.topBlur:return!0;default:return!1}}function i(e){this.root=e,this.startSelection=c.getSelection(e),this.startValue=this.getText()}var a=e("./EventConstants"),s=e("./EventPropagators"),u=e("./ExecutionEnvironment"),c=e("./ReactInputSelection"),l=e("./SyntheticCompositionEvent"),p=e("./getTextContentAccessor"),d=e("./keyOf"),f=[9,13,27,32],h=229,m=u.canUseDOM&&"CompositionEvent"in window,v=!m||"documentMode"in document&&document.documentMode>8,g=a.topLevelTypes,y=null,C={compositionEnd:{phasedRegistrationNames:{bubbled:d({onCompositionEnd:null}),captured:d({onCompositionEndCapture:null})},dependencies:[g.topBlur,g.topCompositionEnd,g.topKeyDown,g.topKeyPress,g.topKeyUp,g.topMouseDown]},compositionStart:{phasedRegistrationNames:{bubbled:d({onCompositionStart:null}),captured:d({onCompositionStartCapture:null})},dependencies:[g.topBlur,g.topCompositionStart,g.topKeyDown,g.topKeyPress,g.topKeyUp,g.topMouseDown]},compositionUpdate:{phasedRegistrationNames:{bubbled:d({onCompositionUpdate:null}),captured:d({onCompositionUpdateCapture:null})},dependencies:[g.topBlur,g.topCompositionUpdate,g.topKeyDown,g.topKeyPress,g.topKeyUp,g.topMouseDown]}};i.prototype.getText=function(){return this.root.value||this.root[p()]},i.prototype.getData=function(){var e=this.getText(),t=this.startSelection.start,n=this.startValue.length-this.startSelection.end;return e.substr(t,e.length-n-t)};var E={eventTypes:C,extractEvents:function(e,t,a,u){var c,p;if(m?c=n(e):y?r(e,u)&&(c=C.compositionEnd):o(e,u)&&(c=C.compositionStart),v&&(y||c!==C.compositionStart?c===C.compositionEnd&&y&&(p=y.getData(),y=null):y=new i(t)),c){var d=l.getPooled(c,a,u);return p&&(d.data=p),s.accumulateTwoPhaseDispatches(d),d}}};t.exports=E},{"./EventConstants":14,"./EventPropagators":19,"./ExecutionEnvironment":20,"./ReactInputSelection":50,"./SyntheticCompositionEvent":73,"./getTextContentAccessor":103,"./keyOf":113}],7:[function(e,t){"use strict";function n(e,t,n){var o=e.childNodes;o[n]!==t&&(t.parentNode===e&&e.removeChild(t),n>=o.length?e.appendChild(t):e.insertBefore(t,o[n]))}var o,r=e("./Danger"),i=e("./ReactMultiChildUpdateTypes"),a=e("./getTextContentAccessor"),s=a();o="textContent"===s?function(e,t){e.textContent=t}:function(e,t){for(;e.firstChild;)e.removeChild(e.firstChild);if(t){var n=e.ownerDocument||document;e.appendChild(n.createTextNode(t))}};var u={dangerouslyReplaceNodeWithMarkup:r.dangerouslyReplaceNodeWithMarkup,updateTextContent:o,processUpdates:function(e,t){for(var a,s=null,u=null,c=0;a=e[c];c++)if(a.type===i.MOVE_EXISTING||a.type===i.REMOVE_NODE){var l=a.fromIndex,p=a.parentNode.childNodes[l],d=a.parentID;s=s||{},s[d]=s[d]||[],s[d][l]=p,u=u||[],u.push(p)}var f=r.dangerouslyRenderMarkup(t);if(u)for(var h=0;h<u.length;h++)u[h].parentNode.removeChild(u[h]);for(var m=0;a=e[m];m++)switch(a.type){case i.INSERT_MARKUP:n(a.parentNode,f[a.markupIndex],a.toIndex);break;case i.MOVE_EXISTING:n(a.parentNode,s[a.parentID][a.fromIndex],a.toIndex);break;case i.TEXT_CONTENT:o(a.parentNode,a.textContent);break;case i.REMOVE_NODE:}}};t.exports=u},{"./Danger":10,"./ReactMultiChildUpdateTypes":56,"./getTextContentAccessor":103}],8:[function(e,t){"use strict";var n=e("./invariant"),o={MUST_USE_ATTRIBUTE:1,MUST_USE_PROPERTY:2,HAS_SIDE_EFFECTS:4,HAS_BOOLEAN_VALUE:8,HAS_POSITIVE_NUMERIC_VALUE:16,injectDOMPropertyConfig:function(e){var t=e.Properties||{},r=e.DOMAttributeNames||{},a=e.DOMPropertyNames||{},s=e.DOMMutationMethods||{};e.isCustomAttribute&&i._isCustomAttributeFunctions.push(e.isCustomAttribute);for(var u in t){n(!i.isStandardName[u]),i.isStandardName[u]=!0;var c=u.toLowerCase();i.getPossibleStandardName[c]=u;var l=r[u];l&&(i.getPossibleStandardName[l]=u),i.getAttributeName[u]=l||c,i.getPropertyName[u]=a[u]||u;var p=s[u];p&&(i.getMutationMethod[u]=p);var d=t[u];i.mustUseAttribute[u]=d&o.MUST_USE_ATTRIBUTE,i.mustUseProperty[u]=d&o.MUST_USE_PROPERTY,i.hasSideEffects[u]=d&o.HAS_SIDE_EFFECTS,i.hasBooleanValue[u]=d&o.HAS_BOOLEAN_VALUE,i.hasPositiveNumericValue[u]=d&o.HAS_POSITIVE_NUMERIC_VALUE,n(!i.mustUseAttribute[u]||!i.mustUseProperty[u]),n(i.mustUseProperty[u]||!i.hasSideEffects[u]),n(!i.hasBooleanValue[u]||!i.hasPositiveNumericValue[u])}}},r={},i={ID_ATTRIBUTE_NAME:"data-reactid",isStandardName:{},getPossibleStandardName:{},getAttributeName:{},getPropertyName:{},getMutationMethod:{},mustUseAttribute:{},mustUseProperty:{},hasSideEffects:{},hasBooleanValue:{},hasPositiveNumericValue:{},_isCustomAttributeFunctions:[],isCustomAttribute:function(e){return i._isCustomAttributeFunctions.some(function(t){return t.call(null,e)})},getDefaultValueForProperty:function(e,t){var n,o=r[e];return o||(r[e]=o={}),t in o||(n=document.createElement(e),o[t]=n[t]),o[t]},injection:o};t.exports=i},{"./invariant":106}],9:[function(e,t){"use strict";function n(e,t){return null==t||o.hasBooleanValue[e]&&!t||o.hasPositiveNumericValue[e]&&(isNaN(t)||1>t)}var o=e("./DOMProperty"),r=e("./escapeTextForBrowser"),i=e("./memoizeStringOnly"),a=i(function(e){return r(e)+'="'}),s={createMarkupForID:function(e){return a(o.ID_ATTRIBUTE_NAME)+r(e)+'"'},createMarkupForProperty:function(e,t){if(o.isStandardName[e]){if(n(e,t))return"";var i=o.getAttributeName[e];return o.hasBooleanValue[e]?r(i):a(i)+r(t)+'"'}return o.isCustomAttribute(e)?null==t?"":a(e)+r(t)+'"':null},setValueForProperty:function(e,t,r){if(o.isStandardName[t]){var i=o.getMutationMethod[t];if(i)i(e,r);else if(n(t,r))this.deleteValueForProperty(e,t);else if(o.mustUseAttribute[t])e.setAttribute(o.getAttributeName[t],""+r);else{var a=o.getPropertyName[t];o.hasSideEffects[t]&&e[a]===r||(e[a]=r)}}else o.isCustomAttribute(t)&&(null==r?e.removeAttribute(o.getAttributeName[t]):e.setAttribute(t,""+r))},deleteValueForProperty:function(e,t){if(o.isStandardName[t]){var n=o.getMutationMethod[t];if(n)n(e,void 0);else if(o.mustUseAttribute[t])e.removeAttribute(o.getAttributeName[t]);else{var r=o.getPropertyName[t],i=o.getDefaultValueForProperty(e.nodeName,t);o.hasSideEffects[t]&&e[r]===i||(e[r]=i)}}else o.isCustomAttribute(t)&&e.removeAttribute(t)}};t.exports=s},{"./DOMProperty":8,"./escapeTextForBrowser":94,"./memoizeStringOnly":114}],10:[function(e,t){"use strict";function n(e){return e.substring(1,e.indexOf(" "))}var o=e("./ExecutionEnvironment"),r=e("./createNodesFromMarkup"),i=e("./emptyFunction"),a=e("./getMarkupWrap"),s=e("./invariant"),u=/^(<[^ \/>]+)/,c="data-danger-index",l={dangerouslyRenderMarkup:function(e){s(o.canUseDOM);for(var t,l={},p=0;p<e.length;p++)s(e[p]),t=n(e[p]),t=a(t)?t:"*",l[t]=l[t]||[],l[t][p]=e[p];var d=[],f=0;for(t in l)if(l.hasOwnProperty(t)){var h=l[t];for(var m in h)if(h.hasOwnProperty(m)){var v=h[m];h[m]=v.replace(u,"$1 "+c+'="'+m+'" ')}var g=r(h.join(""),i);for(p=0;p<g.length;++p){var y=g[p];y.hasAttribute&&y.hasAttribute(c)&&(m=+y.getAttribute(c),y.removeAttribute(c),s(!d.hasOwnProperty(m)),d[m]=y,f+=1)}}return s(f===d.length),s(d.length===e.length),d},dangerouslyReplaceNodeWithMarkup:function(e,t){s(o.canUseDOM),s(t),s("html"!==e.tagName.toLowerCase());var n=r(t,i)[0];e.parentNode.replaceChild(n,e)}};t.exports=l},{"./ExecutionEnvironment":20,"./createNodesFromMarkup":90,"./emptyFunction":93,"./getMarkupWrap":100,"./invariant":106}],11:[function(e,t){"use strict";var n=e("./DOMProperty"),o=n.injection.MUST_USE_ATTRIBUTE,r=n.injection.MUST_USE_PROPERTY,i=n.injection.HAS_BOOLEAN_VALUE,a=n.injection.HAS_SIDE_EFFECTS,s=n.injection.HAS_POSITIVE_NUMERIC_VALUE,u={isCustomAttribute:RegExp.prototype.test.bind(/^(data|aria)-[a-z_][a-z\d_.\-]*$/),Properties:{accept:null,accessKey:null,action:null,allowFullScreen:o|i,allowTransparency:o,alt:null,async:i,autoComplete:null,autoPlay:i,cellPadding:null,cellSpacing:null,charSet:o,checked:r|i,className:r,cols:o|s,colSpan:null,content:null,contentEditable:null,contextMenu:o,controls:r|i,crossOrigin:null,data:null,dateTime:o,defer:i,dir:null,disabled:o|i,download:null,draggable:null,encType:null,form:o,formNoValidate:i,frameBorder:o,height:o,hidden:o|i,href:null,hrefLang:null,htmlFor:null,httpEquiv:null,icon:null,id:r,label:null,lang:null,list:null,loop:r|i,max:null,maxLength:o,mediaGroup:null,method:null,min:null,multiple:r|i,muted:r|i,name:null,noValidate:i,pattern:null,placeholder:null,poster:null,preload:null,radioGroup:null,readOnly:r|i,rel:null,required:i,role:o,rows:o|s,rowSpan:null,sandbox:null,scope:null,scrollLeft:r,scrollTop:r,seamless:o|i,selected:r|i,size:o|s,span:s,spellCheck:null,src:null,srcDoc:r,step:null,style:null,tabIndex:null,target:null,title:null,type:null,value:r|a,width:o,wmode:o,autoCapitalize:null,autoCorrect:null,property:null,cx:o,cy:o,d:o,fill:o,fx:o,fy:o,gradientTransform:o,gradientUnits:o,offset:o,points:o,r:o,rx:o,ry:o,spreadMethod:o,stopColor:o,stopOpacity:o,stroke:o,strokeLinecap:o,strokeWidth:o,transform:o,version:o,viewBox:o,x1:o,x2:o,x:o,y1:o,y2:o,y:o},DOMAttributeNames:{className:"class",gradientTransform:"gradientTransform",gradientUnits:"gradientUnits",htmlFor:"for",spreadMethod:"spreadMethod",stopColor:"stop-color",stopOpacity:"stop-opacity",strokeLinecap:"stroke-linecap",strokeWidth:"stroke-width",viewBox:"viewBox"},DOMPropertyNames:{autoCapitalize:"autocapitalize",autoComplete:"autocomplete",autoCorrect:"autocorrect",autoFocus:"autofocus",autoPlay:"autoplay",encType:"enctype",hrefLang:"hreflang",radioGroup:"radiogroup",spellCheck:"spellcheck",srcDoc:"srcdoc"},DOMMutationMethods:{className:function(e,t){e.className=t||""}}};t.exports=u},{"./DOMProperty":8}],12:[function(e,t){"use strict";var n=e("./keyOf"),o=[n({ResponderEventPlugin:null}),n({SimpleEventPlugin:null}),n({TapEventPlugin:null}),n({EnterLeaveEventPlugin:null}),n({ChangeEventPlugin:null}),n({SelectEventPlugin:null}),n({CompositionEventPlugin:null}),n({AnalyticsEventPlugin:null}),n({MobileSafariClickEventPlugin:null})];t.exports=o},{"./keyOf":113}],13:[function(e,t){"use strict";var n=e("./EventConstants"),o=e("./EventPropagators"),r=e("./SyntheticMouseEvent"),i=e("./ReactMount"),a=e("./keyOf"),s=n.topLevelTypes,u=i.getFirstReactDOM,c={mouseEnter:{registrationName:a({onMouseEnter:null}),dependencies:[s.topMouseOut,s.topMouseOver]},mouseLeave:{registrationName:a({onMouseLeave:null}),dependencies:[s.topMouseOut,s.topMouseOver]}},l=[null,null],p={eventTypes:c,extractEvents:function(e,t,n,a){if(e===s.topMouseOver&&(a.relatedTarget||a.fromElement))return null;if(e!==s.topMouseOut&&e!==s.topMouseOver)return null;var p;if(t.window===t)p=t;else{var d=t.ownerDocument;p=d?d.defaultView||d.parentWindow:window}var f,h;if(e===s.topMouseOut?(f=t,h=u(a.relatedTarget||a.toElement)||p):(f=p,h=t),f===h)return null;var m=f?i.getID(f):"",v=h?i.getID(h):"",g=r.getPooled(c.mouseLeave,m,a);g.type="mouseleave",g.target=f,g.relatedTarget=h;var y=r.getPooled(c.mouseEnter,v,a);return y.type="mouseenter",y.target=h,y.relatedTarget=f,o.accumulateEnterLeaveDispatches(g,y,m,v),l[0]=g,l[1]=y,l}};t.exports=p},{"./EventConstants":14,"./EventPropagators":19,"./ReactMount":53,"./SyntheticMouseEvent":78,"./keyOf":113}],14:[function(e,t){"use strict";var n=e("./keyMirror"),o=n({bubbled:null,captured:null}),r=n({topBlur:null,topChange:null,topClick:null,topCompositionEnd:null,topCompositionStart:null,topCompositionUpdate:null,topContextMenu:null,topCopy:null,topCut:null,topDoubleClick:null,topDrag:null,topDragEnd:null,topDragEnter:null,topDragExit:null,topDragLeave:null,topDragOver:null,topDragStart:null,topDrop:null,topError:null,topFocus:null,topInput:null,topKeyDown:null,topKeyPress:null,topKeyUp:null,topLoad:null,topMouseDown:null,topMouseMove:null,topMouseOut:null,topMouseOver:null,topMouseUp:null,topPaste:null,topReset:null,topScroll:null,topSelectionChange:null,topSubmit:null,topTouchCancel:null,topTouchEnd:null,topTouchMove:null,topTouchStart:null,topWheel:null}),i={topLevelTypes:r,PropagationPhases:o};t.exports=i},{"./keyMirror":112}],15:[function(e,t){var n=e("./emptyFunction"),o={listen:function(e,t,n){return e.addEventListener?(e.addEventListener(t,n,!1),{remove:function(){e.removeEventListener(t,n,!1)}}):e.attachEvent?(e.attachEvent("on"+t,n),{remove:function(){e.detachEvent(t,n)}}):void 0},capture:function(e,t,o){return e.addEventListener?(e.addEventListener(t,o,!0),{remove:function(){e.removeEventListener(t,o,!0)}}):{remove:n}}};t.exports=o},{"./emptyFunction":93}],16:[function(e,t){"use strict";var n=e("./EventPluginRegistry"),o=e("./EventPluginUtils"),r=e("./ExecutionEnvironment"),i=e("./accumulate"),a=e("./forEachAccumulated"),s=e("./invariant"),u=(e("./isEventSupported"),{}),c=null,l=function(e){if(e){var t=o.executeDispatch,r=n.getPluginModuleForEvent(e);r&&r.executeDispatch&&(t=r.executeDispatch),o.executeDispatchesInOrder(e,t),e.isPersistent()||e.constructor.release(e)}},p=null,d={injection:{injectMount:o.injection.injectMount,injectInstanceHandle:function(e){p=e},getInstanceHandle:function(){return p},injectEventPluginOrder:n.injectEventPluginOrder,injectEventPluginsByName:n.injectEventPluginsByName},eventNameDispatchConfigs:n.eventNameDispatchConfigs,registrationNameModules:n.registrationNameModules,putListener:function(e,t,n){s(r.canUseDOM),s(!n||"function"==typeof n);var o=u[t]||(u[t]={});o[e]=n},getListener:function(e,t){var n=u[t];return n&&n[e]},deleteListener:function(e,t){var n=u[t];n&&delete n[e]},deleteAllListeners:function(e){for(var t in u)delete u[t][e]},extractEvents:function(e,t,o,r){for(var a,s=n.plugins,u=0,c=s.length;c>u;u++){var l=s[u];if(l){var p=l.extractEvents(e,t,o,r);p&&(a=i(a,p))}}return a},enqueueEvents:function(e){e&&(c=i(c,e))},processEventQueue:function(){var e=c;c=null,a(e,l),s(!c)},__purge:function(){u={}},__getListenerBank:function(){return u}};t.exports=d},{"./EventPluginRegistry":17,"./EventPluginUtils":18,"./ExecutionEnvironment":20,"./accumulate":84,"./forEachAccumulated":96,"./invariant":106,"./isEventSupported":107}],17:[function(e,t){"use strict";function n(){if(a)for(var e in s){var t=s[e],n=a.indexOf(e);if(i(n>-1),!u.plugins[n]){i(t.extractEvents),u.plugins[n]=t;var r=t.eventTypes;for(var c in r)i(o(r[c],t,c))}}}function o(e,t,n){i(!u.eventNameDispatchConfigs[n]),u.eventNameDispatchConfigs[n]=e;var o=e.phasedRegistrationNames;if(o){for(var a in o)if(o.hasOwnProperty(a)){var s=o[a];r(s,t,n)}return!0}return e.registrationName?(r(e.registrationName,t,n),!0):!1}function r(e,t,n){i(!u.registrationNameModules[e]),u.registrationNameModules[e]=t,u.registrationNameDependencies[e]=t.eventTypes[n].dependencies}var i=e("./invariant"),a=null,s={},u={plugins:[],eventNameDispatchConfigs:{},registrationNameModules:{},registrationNameDependencies:{},injectEventPluginOrder:function(e){i(!a),a=Array.prototype.slice.call(e),n()},injectEventPluginsByName:function(e){var t=!1;for(var o in e)if(e.hasOwnProperty(o)){var r=e[o];s[o]!==r&&(i(!s[o]),s[o]=r,t=!0)}t&&n()},getPluginModuleForEvent:function(e){var t=e.dispatchConfig;if(t.registrationName)return u.registrationNameModules[t.registrationName]||null;for(var n in t.phasedRegistrationNames)if(t.phasedRegistrationNames.hasOwnProperty(n)){var o=u.registrationNameModules[t.phasedRegistrationNames[n]];if(o)return o}return null},_resetEventPlugins:function(){a=null;for(var e in s)s.hasOwnProperty(e)&&delete s[e];u.plugins.length=0;var t=u.eventNameDispatchConfigs;for(var n in t)t.hasOwnProperty(n)&&delete t[n];var o=u.registrationNameModules;for(var r in o)o.hasOwnProperty(r)&&delete o[r]}};t.exports=u},{"./invariant":106}],18:[function(e,t){"use strict";function n(e){return e===h.topMouseUp||e===h.topTouchEnd||e===h.topTouchCancel}function o(e){return e===h.topMouseMove||e===h.topTouchMove}function r(e){return e===h.topMouseDown||e===h.topTouchStart}function i(e,t){var n=e._dispatchListeners,o=e._dispatchIDs;if(Array.isArray(n))for(var r=0;r<n.length&&!e.isPropagationStopped();r++)t(e,n[r],o[r]);else n&&t(e,n,o)}function a(e,t,n){e.currentTarget=f.Mount.getNode(n);var o=t(e,n);return e.currentTarget=null,o}function s(e,t){i(e,t),e._dispatchListeners=null,e._dispatchIDs=null}function u(e){var t=e._dispatchListeners,n=e._dispatchIDs;if(Array.isArray(t)){for(var o=0;o<t.length&&!e.isPropagationStopped();o++)if(t[o](e,n[o]))return n[o]}else if(t&&t(e,n))return n;return null}function c(e){var t=e._dispatchListeners,n=e._dispatchIDs;d(!Array.isArray(t));var o=t?t(e,n):null;return e._dispatchListeners=null,e._dispatchIDs=null,o}function l(e){return!!e._dispatchListeners}var p=e("./EventConstants"),d=e("./invariant"),f={Mount:null,injectMount:function(e){f.Mount=e}},h=p.topLevelTypes,m={isEndish:n,isMoveish:o,isStartish:r,executeDirectDispatch:c,executeDispatch:a,executeDispatchesInOrder:s,executeDispatchesInOrderStopAtTrue:u,hasDispatches:l,injection:f,useTouchEvents:!1};t.exports=m},{"./EventConstants":14,"./invariant":106}],19:[function(e,t){"use strict";function n(e,t,n){var o=t.dispatchConfig.phasedRegistrationNames[n];return m(e,o)}function o(e,t,o){var r=t?h.bubbled:h.captured,i=n(e,o,r);i&&(o._dispatchListeners=d(o._dispatchListeners,i),o._dispatchIDs=d(o._dispatchIDs,e))}function r(e){e&&e.dispatchConfig.phasedRegistrationNames&&p.injection.getInstanceHandle().traverseTwoPhase(e.dispatchMarker,o,e)}function i(e,t,n){if(n&&n.dispatchConfig.registrationName){var o=n.dispatchConfig.registrationName,r=m(e,o);r&&(n._dispatchListeners=d(n._dispatchListeners,r),n._dispatchIDs=d(n._dispatchIDs,e))}}function a(e){e&&e.dispatchConfig.registrationName&&i(e.dispatchMarker,null,e)}function s(e){f(e,r)}function u(e,t,n,o){p.injection.getInstanceHandle().traverseEnterLeave(n,o,i,e,t)}function c(e){f(e,a)}var l=e("./EventConstants"),p=e("./EventPluginHub"),d=e("./accumulate"),f=e("./forEachAccumulated"),h=l.PropagationPhases,m=p.getListener,v={accumulateTwoPhaseDispatches:s,accumulateDirectDispatches:c,accumulateEnterLeaveDispatches:u};t.exports=v},{"./EventConstants":14,"./EventPluginHub":16,"./accumulate":84,"./forEachAccumulated":96}],20:[function(e,t){"use strict";var n="undefined"!=typeof window,o={canUseDOM:n,canUseWorkers:"undefined"!=typeof Worker,canUseEventListeners:n&&(window.addEventListener||window.attachEvent),isInWorker:!n};t.exports=o},{}],21:[function(e,t){"use strict";function n(e){u(null==e.props.checkedLink||null==e.props.valueLink)}function o(e){n(e),u(null==e.props.value&&null==e.props.onChange)}function r(e){n(e),u(null==e.props.checked&&null==e.props.onChange)}function i(e){this.props.valueLink.requestChange(e.target.value)}function a(e){this.props.checkedLink.requestChange(e.target.checked)}var s=e("./ReactPropTypes"),u=e("./invariant"),c={Mixin:{propTypes:{value:function(){},checked:function(){},onChange:s.func}},getValue:function(e){return e.props.valueLink?(o(e),e.props.valueLink.value):e.props.value},getChecked:function(e){return e.props.checkedLink?(r(e),e.props.checkedLink.value):e.props.checked},getOnChange:function(e){return e.props.valueLink?(o(e),i):e.props.checkedLink?(r(e),a):e.props.onChange}};t.exports=c},{"./ReactPropTypes":62,"./invariant":106}],22:[function(e,t){"use strict";var n=e("./EventConstants"),o=e("./emptyFunction"),r=n.topLevelTypes,i={eventTypes:null,extractEvents:function(e,t,n,i){if(e===r.topTouchStart){var a=i.target;a&&!a.onclick&&(a.onclick=o)}}};t.exports=i},{"./EventConstants":14,"./emptyFunction":93}],23:[function(e,t){"use strict";var n=e("./invariant"),o=function(e){var t=this;if(t.instancePool.length){var n=t.instancePool.pop();return t.call(n,e),n}return new t(e)},r=function(e,t){var n=this;if(n.instancePool.length){var o=n.instancePool.pop();return n.call(o,e,t),o}return new n(e,t)},i=function(e,t,n){var o=this;if(o.instancePool.length){var r=o.instancePool.pop();return o.call(r,e,t,n),r}return new o(e,t,n)},a=function(e,t,n,o,r){var i=this;if(i.instancePool.length){var a=i.instancePool.pop();return i.call(a,e,t,n,o,r),a}return new i(e,t,n,o,r)},s=function(e){var t=this;n(e instanceof t),e.destructor&&e.destructor(),t.instancePool.length<t.poolSize&&t.instancePool.push(e)},u=10,c=o,l=function(e,t){var n=e;return n.instancePool=[],n.getPooled=t||c,n.poolSize||(n.poolSize=u),n.release=s,n},p={addPoolingTo:l,oneArgumentPooler:o,twoArgumentPooler:r,threeArgumentPooler:i,fiveArgumentPooler:a};t.exports=p},{"./invariant":106}],24:[function(e,t){"use strict";var n=e("./DOMPropertyOperations"),o=e("./EventPluginUtils"),r=e("./ReactChildren"),i=e("./ReactComponent"),a=e("./ReactCompositeComponent"),s=e("./ReactContext"),u=e("./ReactCurrentOwner"),c=e("./ReactDOM"),l=e("./ReactDOMComponent"),p=e("./ReactDefaultInjection"),d=e("./ReactInstanceHandles"),f=e("./ReactMount"),h=e("./ReactMultiChild"),m=e("./ReactPerf"),v=e("./ReactPropTypes"),g=e("./ReactServerRendering"),y=e("./ReactTextComponent"),C=e("./onlyChild");p.inject();var E={Children:{map:r.map,forEach:r.forEach,only:C},DOM:c,PropTypes:v,initializeTouchEvents:function(e){o.useTouchEvents=e},createClass:a.createClass,constructAndRenderComponent:f.constructAndRenderComponent,constructAndRenderComponentByID:f.constructAndRenderComponentByID,renderComponent:m.measure("React","renderComponent",f.renderComponent),renderComponentToString:g.renderComponentToString,unmountComponentAtNode:f.unmountComponentAtNode,isValidClass:a.isValidClass,isValidComponent:i.isValidComponent,withContext:s.withContext,__internals:{Component:i,CurrentOwner:u,DOMComponent:l,DOMPropertyOperations:n,InstanceHandles:d,Mount:f,MultiChild:h,TextComponent:y}};E.version="0.9.0",t.exports=E},{"./DOMPropertyOperations":9,"./EventPluginUtils":18,"./ReactChildren":25,"./ReactComponent":26,"./ReactCompositeComponent":29,"./ReactContext":30,"./ReactCurrentOwner":31,"./ReactDOM":32,"./ReactDOMComponent":34,"./ReactDefaultInjection":44,"./ReactInstanceHandles":51,"./ReactMount":53,"./ReactMultiChild":55,"./ReactPerf":58,"./ReactPropTypes":62,"./ReactServerRendering":66,"./ReactTextComponent":67,"./onlyChild":121}],25:[function(e,t){"use strict";function n(e,t){this.forEachFunction=e,this.forEachContext=t}function o(e,t,n,o){var r=e;r.forEachFunction.call(r.forEachContext,t,o)}function r(e,t,r){if(null==e)return e;var i=n.getPooled(t,r);l(e,o,i),n.release(i)}function i(e,t,n){this.mapResult=e,this.mapFunction=t,this.mapContext=n}function a(e,t,n,o){var r=e,i=r.mapResult,a=r.mapFunction.call(r.mapContext,t,o);c(!i.hasOwnProperty(n)),i[n]=a}function s(e,t,n){if(null==e)return e;var o={},r=i.getPooled(o,t,n);return l(e,a,r),i.release(r),o}var u=e("./PooledClass"),c=e("./invariant"),l=e("./traverseAllChildren"),p=u.twoArgumentPooler,d=u.threeArgumentPooler;u.addPoolingTo(n,p),u.addPoolingTo(i,d);var f={forEach:r,map:s};t.exports=f},{"./PooledClass":23,"./invariant":106,"./traverseAllChildren":125}],26:[function(e,t){"use strict";var n=e("./ReactComponentEnvironment"),o=e("./ReactCurrentOwner"),r=e("./ReactOwner"),i=e("./ReactUpdates"),a=e("./invariant"),s=e("./keyMirror"),u=e("./merge"),c=s({MOUNTED:null,UNMOUNTED:null}),l={isValidComponent:function(e){if(!e||!e.type||!e.type.prototype)return!1;var t=e.type.prototype;return"function"==typeof t.mountComponentIntoNode&&"function"==typeof t.receiveComponent},LifeCycle:c,BackendIDOperations:n.BackendIDOperations,unmountIDFromEnvironment:n.unmountIDFromEnvironment,mountImageIntoNode:n.mountImageIntoNode,ReactReconcileTransaction:n.ReactReconcileTransaction,Mixin:u(n.Mixin,{isMounted:function(){return this._lifeCycleState===c.MOUNTED},setProps:function(e,t){this.replaceProps(u(this._pendingProps||this.props,e),t)},replaceProps:function(e,t){a(this.isMounted()),a(0===this._mountDepth),this._pendingProps=e,i.enqueueUpdate(this,t)},construct:function(e,t){this.props=e||{},this._owner=o.current,this._lifeCycleState=c.UNMOUNTED,this._pendingProps=null,this._pendingCallbacks=null,this._pendingOwner=this._owner;var n=arguments.length-1;if(1===n)this.props.children=t;else if(n>1){for(var r=Array(n),i=0;n>i;i++)r[i]=arguments[i+1];this.props.children=r}},mountComponent:function(e,t,n){a(!this.isMounted());var o=this.props;null!=o.ref&&r.addComponentAsRefTo(this,o.ref,this._owner),this._rootNodeID=e,this._lifeCycleState=c.MOUNTED,this._mountDepth=n},unmountComponent:function(){a(this.isMounted());var e=this.props;null!=e.ref&&r.removeComponentAsRefFrom(this,e.ref,this._owner),l.unmountIDFromEnvironment(this._rootNodeID),this._rootNodeID=null,this._lifeCycleState=c.UNMOUNTED},receiveComponent:function(e,t){a(this.isMounted()),this._pendingOwner=e._owner,this._pendingProps=e.props,this._performUpdateIfNecessary(t)},performUpdateIfNecessary:function(){var e=l.ReactReconcileTransaction.getPooled();e.perform(this._performUpdateIfNecessary,this,e),l.ReactReconcileTransaction.release(e)},_performUpdateIfNecessary:function(e){if(null!=this._pendingProps){var t=this.props,n=this._owner;this.props=this._pendingProps,this._owner=this._pendingOwner,this._pendingProps=null,this.updateComponent(e,t,n)}},updateComponent:function(e,t,n){var o=this.props;(this._owner!==n||o.ref!==t.ref)&&(null!=t.ref&&r.removeComponentAsRefFrom(this,t.ref,n),null!=o.ref&&r.addComponentAsRefTo(this,o.ref,this._owner))},mountComponentIntoNode:function(e,t,n){var o=l.ReactReconcileTransaction.getPooled();o.perform(this._mountComponentIntoNode,this,e,t,o,n),l.ReactReconcileTransaction.release(o)},_mountComponentIntoNode:function(e,t,n,o){var r=this.mountComponent(e,n,0);l.mountImageIntoNode(r,t,o)},isOwnedBy:function(e){return this._owner===e},getSiblingByRef:function(e){var t=this._owner;return t&&t.refs?t.refs[e]:null}})};t.exports=l},{"./ReactComponentEnvironment":28,"./ReactCurrentOwner":31,"./ReactOwner":57,"./ReactUpdates":68,"./invariant":106,"./keyMirror":112,"./merge":115}],27:[function(e,t){"use strict";var n=e("./ReactDOMIDOperations"),o=e("./ReactMarkupChecksum"),r=e("./ReactMount"),i=e("./ReactPerf"),a=e("./ReactReconcileTransaction"),s=e("./getReactRootElementInContainer"),u=e("./invariant"),c=1,l=9,p={Mixin:{getDOMNode:function(){return u(this.isMounted()),r.getNode(this._rootNodeID)}},ReactReconcileTransaction:a,BackendIDOperations:n,unmountIDFromEnvironment:function(e){r.purgeID(e)},mountImageIntoNode:i.measure("ReactComponentBrowserEnvironment","mountImageIntoNode",function(e,t,n){if(u(t&&(t.nodeType===c||t.nodeType===l)),n){if(o.canReuseMarkup(e,s(t)))return;u(t.nodeType!==l)}u(t.nodeType!==l);var r=t.parentNode;if(r){var i=t.nextSibling;r.removeChild(t),t.innerHTML=e,i?r.insertBefore(t,i):r.appendChild(t)}else t.innerHTML=e})};t.exports=p},{"./ReactDOMIDOperations":36,"./ReactMarkupChecksum":52,"./ReactMount":53,"./ReactPerf":58,"./ReactReconcileTransaction":64,"./getReactRootElementInContainer":102,"./invariant":106}],28:[function(e,t){"use strict";var n=e("./ReactComponentBrowserEnvironment"),o=n;t.exports=o},{"./ReactComponentBrowserEnvironment":27}],29:[function(e,t){"use strict";function n(e,t){for(var n in t)t.hasOwnProperty(n)&&E("function"==typeof t[n])
}function o(e,t){var n=I[t];N.hasOwnProperty(t)&&E(n===P.OVERRIDE_BASE),e.hasOwnProperty(t)&&E(n===P.DEFINE_MANY||n===P.DEFINE_MANY_MERGED)}function r(e){var t=e._compositeLifeCycleState;E(e.isMounted()||t===T.MOUNTING),E(t!==T.RECEIVING_STATE),E(t!==T.UNMOUNTING)}function i(e,t){E(!l(t)),E(!p.isValidComponent(t));var n=e.componentConstructor,r=n.prototype;for(var i in t){var a=t[i];if(t.hasOwnProperty(i))if(o(r,i),O.hasOwnProperty(i))O[i](e,a);else{var s=i in I,d=i in r,f=a&&a.__reactDontBind,h="function"==typeof a,m=h&&!s&&!d&&!f;m?(r.__reactAutoBindMap||(r.__reactAutoBindMap={}),r.__reactAutoBindMap[i]=a,r[i]=a):r[i]=d?I[i]===P.DEFINE_MANY_MERGED?u(r[i],a):c(r[i],a):a}}}function a(e,t){if(t)for(var n in t){var o=t[n];if(!t.hasOwnProperty(n)||!o)return;var r=n in e,i=o;if(r){var a=e[n],s=typeof a,u=typeof o;E("function"===s&&"function"===u),i=c(a,o)}e[n]=i,e.componentConstructor[n]=i}}function s(e,t){return E(e&&t&&"object"==typeof e&&"object"==typeof t),x(t,function(t,n){E(void 0===e[n]),e[n]=t}),e}function u(e,t){return function(){var n=e.apply(this,arguments),o=t.apply(this,arguments);return null==n?o:null==o?n:s(n,o)}}function c(e,t){return function(){e.apply(this,arguments),t.apply(this,arguments)}}function l(e){return e instanceof Function&&"componentConstructor"in e&&e.componentConstructor instanceof Function}var p=e("./ReactComponent"),d=e("./ReactContext"),f=e("./ReactCurrentOwner"),h=e("./ReactErrorUtils"),m=e("./ReactOwner"),v=e("./ReactPerf"),g=e("./ReactPropTransferer"),y=e("./ReactPropTypeLocations"),C=(e("./ReactPropTypeLocationNames"),e("./ReactUpdates")),E=e("./invariant"),M=e("./keyMirror"),R=e("./merge"),D=e("./mixInto"),x=e("./objMap"),b=e("./shouldUpdateReactComponent"),P=M({DEFINE_ONCE:null,DEFINE_MANY:null,OVERRIDE_BASE:null,DEFINE_MANY_MERGED:null}),I={mixins:P.DEFINE_MANY,statics:P.DEFINE_MANY,propTypes:P.DEFINE_MANY,contextTypes:P.DEFINE_MANY,childContextTypes:P.DEFINE_MANY,getDefaultProps:P.DEFINE_MANY_MERGED,getInitialState:P.DEFINE_MANY_MERGED,getChildContext:P.DEFINE_MANY_MERGED,render:P.DEFINE_ONCE,componentWillMount:P.DEFINE_MANY,componentDidMount:P.DEFINE_MANY,componentWillReceiveProps:P.DEFINE_MANY,shouldComponentUpdate:P.DEFINE_ONCE,componentWillUpdate:P.DEFINE_MANY,componentDidUpdate:P.DEFINE_MANY,componentWillUnmount:P.DEFINE_MANY,updateComponent:P.OVERRIDE_BASE},O={displayName:function(e,t){e.componentConstructor.displayName=t},mixins:function(e,t){if(t)for(var n=0;n<t.length;n++)i(e,t[n])},childContextTypes:function(e,t){var o=e.componentConstructor;n(o,t,y.childContext),o.childContextTypes=R(o.childContextTypes,t)},contextTypes:function(e,t){var o=e.componentConstructor;n(o,t,y.context),o.contextTypes=R(o.contextTypes,t)},propTypes:function(e,t){var o=e.componentConstructor;n(o,t,y.prop),o.propTypes=R(o.propTypes,t)},statics:function(e,t){a(e,t)}},T=M({MOUNTING:null,UNMOUNTING:null,RECEIVING_PROPS:null,RECEIVING_STATE:null}),N={construct:function(){p.Mixin.construct.apply(this,arguments),this.state=null,this._pendingState=null,this.context=this._processContext(d.current),this._currentContext=d.current,this._pendingContext=null,this._compositeLifeCycleState=null},isMounted:function(){return p.Mixin.isMounted.call(this)&&this._compositeLifeCycleState!==T.MOUNTING},mountComponent:v.measure("ReactCompositeComponent","mountComponent",function(e,t,n){p.Mixin.mountComponent.call(this,e,t,n),this._compositeLifeCycleState=T.MOUNTING,this._defaultProps=this.getDefaultProps?this.getDefaultProps():null,this.props=this._processProps(this.props),this.__reactAutoBindMap&&this._bindAutoBindMethods(),this.state=this.getInitialState?this.getInitialState():null,E("object"==typeof this.state&&!Array.isArray(this.state)),this._pendingState=null,this._pendingForceUpdate=!1,this.componentWillMount&&(this.componentWillMount(),this._pendingState&&(this.state=this._pendingState,this._pendingState=null)),this._renderedComponent=this._renderValidatedComponent(),this._compositeLifeCycleState=null;var o=this._renderedComponent.mountComponent(e,t,n+1);return this.componentDidMount&&t.getReactMountReady().enqueue(this,this.componentDidMount),o}),unmountComponent:function(){this._compositeLifeCycleState=T.UNMOUNTING,this.componentWillUnmount&&this.componentWillUnmount(),this._compositeLifeCycleState=null,this._defaultProps=null,this._renderedComponent.unmountComponent(),this._renderedComponent=null,p.Mixin.unmountComponent.call(this),this.refs&&(this.refs=null)},setState:function(e,t){E("object"==typeof e||null==e),this.replaceState(R(this._pendingState||this.state,e),t)},replaceState:function(e,t){r(this),this._pendingState=e,C.enqueueUpdate(this,t)},_processContext:function(e){var t=null,n=this.constructor.contextTypes;if(n){t={};for(var o in n)t[o]=e[o]}return t},_processChildContext:function(e){var t=this.getChildContext&&this.getChildContext();if(this.constructor.displayName||"ReactCompositeComponent",t){E("object"==typeof this.constructor.childContextTypes);for(var n in t)E(n in this.constructor.childContextTypes);return R(e,t)}return e},_processProps:function(e){var t=R(e),n=this._defaultProps;for(var o in n)"undefined"==typeof t[o]&&(t[o]=n[o]);return t},_checkPropTypes:function(e,t,n){var o=this.constructor.displayName;for(var r in e)e.hasOwnProperty(r)&&e[r](t,r,o,n)},performUpdateIfNecessary:function(){var e=this._compositeLifeCycleState;e!==T.MOUNTING&&e!==T.RECEIVING_PROPS&&p.Mixin.performUpdateIfNecessary.call(this)},_performUpdateIfNecessary:function(e){if(null!=this._pendingProps||null!=this._pendingState||null!=this._pendingContext||this._pendingForceUpdate){var t=this._pendingContext||this._currentContext,n=this._processContext(t);this._pendingContext=null;var o=this.props;null!=this._pendingProps&&(o=this._processProps(this._pendingProps),this._pendingProps=null,this._compositeLifeCycleState=T.RECEIVING_PROPS,this.componentWillReceiveProps&&this.componentWillReceiveProps(o,n)),this._compositeLifeCycleState=T.RECEIVING_STATE;var r=this._pendingOwner,i=this._pendingState||this.state;this._pendingState=null;try{this._pendingForceUpdate||!this.shouldComponentUpdate||this.shouldComponentUpdate(o,i,n)?(this._pendingForceUpdate=!1,this._performComponentUpdate(o,r,i,t,n,e)):(this.props=o,this._owner=r,this.state=i,this._currentContext=t,this.context=n)}finally{this._compositeLifeCycleState=null}}},_performComponentUpdate:function(e,t,n,o,r,i){var a=this.props,s=this._owner,u=this.state,c=this.context;this.componentWillUpdate&&this.componentWillUpdate(e,n,r),this.props=e,this._owner=t,this.state=n,this._currentContext=o,this.context=r,this.updateComponent(i,a,s,u,c),this.componentDidUpdate&&i.getReactMountReady().enqueue(this,this.componentDidUpdate.bind(this,a,u,c))},receiveComponent:function(e,t){e!==this&&(this._pendingContext=e._currentContext,p.Mixin.receiveComponent.call(this,e,t))},updateComponent:v.measure("ReactCompositeComponent","updateComponent",function(e,t,n){p.Mixin.updateComponent.call(this,e,t,n);var o=this._renderedComponent,r=this._renderValidatedComponent();if(b(o,r))o.receiveComponent(r,e);else{var i=this._rootNodeID,a=o._rootNodeID;o.unmountComponent(),this._renderedComponent=r;var s=r.mountComponent(i,e,this._mountDepth+1);p.BackendIDOperations.dangerouslyReplaceNodeWithMarkupByID(a,s)}}),forceUpdate:function(e){var t=this._compositeLifeCycleState;E(this.isMounted()||t===T.MOUNTING),E(t!==T.RECEIVING_STATE&&t!==T.UNMOUNTING),this._pendingForceUpdate=!0,C.enqueueUpdate(this,e)},_renderValidatedComponent:v.measure("ReactCompositeComponent","_renderValidatedComponent",function(){var e,t=d.current;d.current=this._processChildContext(this._currentContext),f.current=this;try{e=this.render()}finally{d.current=t,f.current=null}return E(p.isValidComponent(e)),e}),_bindAutoBindMethods:function(){for(var e in this.__reactAutoBindMap)if(this.__reactAutoBindMap.hasOwnProperty(e)){var t=this.__reactAutoBindMap[e];this[e]=this._bindAutoBindMethod(h.guard(t,this.constructor.displayName+"."+e))}},_bindAutoBindMethod:function(e){var t=this,n=function(){return e.apply(t,arguments)};return n}},S=function(){};D(S,p.Mixin),D(S,m.Mixin),D(S,g.Mixin),D(S,N);var _={LifeCycle:T,Base:S,createClass:function(e){var t=function(){};t.prototype=new S,t.prototype.constructor=t;var n=function(){var e=new t;return e.construct.apply(e,arguments),e};n.componentConstructor=t,t.ConvenienceConstructor=n,n.originalSpec=e,i(n,e),E(t.prototype.render),n.type=t,t.prototype.type=t;for(var o in I)t.prototype[o]||(t.prototype[o]=null);return n},isValidClass:l};t.exports=_},{"./ReactComponent":26,"./ReactContext":30,"./ReactCurrentOwner":31,"./ReactErrorUtils":45,"./ReactOwner":57,"./ReactPerf":58,"./ReactPropTransferer":59,"./ReactPropTypeLocationNames":60,"./ReactPropTypeLocations":61,"./ReactUpdates":68,"./invariant":106,"./keyMirror":112,"./merge":115,"./mixInto":118,"./objMap":119,"./shouldUpdateReactComponent":123}],30:[function(e,t){"use strict";var n=e("./merge"),o={current:{},withContext:function(e,t){var r,i=o.current;o.current=n(i,e);try{r=t()}finally{o.current=i}return r}};t.exports=o},{"./merge":115}],31:[function(e,t){"use strict";var n={current:null};t.exports=n},{}],32:[function(e,t){"use strict";function n(e,t){var n=function(){};n.prototype=new o(e,t),n.prototype.constructor=n,n.displayName=e;var r=function(){var e=new n;return e.construct.apply(e,arguments),e};return r.type=n,n.prototype.type=n,n.ConvenienceConstructor=r,r.componentConstructor=n,r}var o=e("./ReactDOMComponent"),r=e("./mergeInto"),i=e("./objMapKeyVal"),a=i({a:!1,abbr:!1,address:!1,area:!1,article:!1,aside:!1,audio:!1,b:!1,base:!1,bdi:!1,bdo:!1,big:!1,blockquote:!1,body:!1,br:!0,button:!1,canvas:!1,caption:!1,cite:!1,code:!1,col:!0,colgroup:!1,data:!1,datalist:!1,dd:!1,del:!1,details:!1,dfn:!1,div:!1,dl:!1,dt:!1,em:!1,embed:!0,fieldset:!1,figcaption:!1,figure:!1,footer:!1,form:!1,h1:!1,h2:!1,h3:!1,h4:!1,h5:!1,h6:!1,head:!1,header:!1,hr:!0,html:!1,i:!1,iframe:!1,img:!0,input:!0,ins:!1,kbd:!1,keygen:!0,label:!1,legend:!1,li:!1,link:!1,main:!1,map:!1,mark:!1,menu:!1,menuitem:!1,meta:!0,meter:!1,nav:!1,noscript:!1,object:!1,ol:!1,optgroup:!1,option:!1,output:!1,p:!1,param:!0,pre:!1,progress:!1,q:!1,rp:!1,rt:!1,ruby:!1,s:!1,samp:!1,script:!1,section:!1,select:!1,small:!1,source:!1,span:!1,strong:!1,style:!1,sub:!1,summary:!1,sup:!1,table:!1,tbody:!1,td:!1,textarea:!1,tfoot:!1,th:!1,thead:!1,time:!1,title:!1,tr:!1,track:!0,u:!1,ul:!1,"var":!1,video:!1,wbr:!1,circle:!1,defs:!1,g:!1,line:!1,linearGradient:!1,path:!1,polygon:!1,polyline:!1,radialGradient:!1,rect:!1,stop:!1,svg:!1,text:!1},n),s={injectComponentClasses:function(e){r(a,e)}};a.injection=s,t.exports=a},{"./ReactDOMComponent":34,"./mergeInto":117,"./objMapKeyVal":120}],33:[function(e,t){"use strict";var n=e("./AutoFocusMixin"),o=e("./ReactCompositeComponent"),r=e("./ReactDOM"),i=e("./keyMirror"),a=r.button,s=i({onClick:!0,onDoubleClick:!0,onMouseDown:!0,onMouseMove:!0,onMouseUp:!0,onClickCapture:!0,onDoubleClickCapture:!0,onMouseDownCapture:!0,onMouseMoveCapture:!0,onMouseUpCapture:!0}),u=o.createClass({displayName:"ReactDOMButton",mixins:[n],render:function(){var e={};for(var t in this.props)!this.props.hasOwnProperty(t)||this.props.disabled&&s[t]||(e[t]=this.props[t]);return a(e,this.props.children)}});t.exports=u},{"./AutoFocusMixin":1,"./ReactCompositeComponent":29,"./ReactDOM":32,"./keyMirror":112}],34:[function(e,t){"use strict";function n(e){e&&(h(null==e.children||null==e.dangerouslySetInnerHTML),h(null==e.style||"object"==typeof e.style))}function o(e,t,n,o){var r=l.findReactContainerForID(e);if(r){var i=r.nodeType===D?r.ownerDocument:r;C(t,i)}o.getPutListenerQueue().enqueuePutListener(e,t,n)}function r(e,t){this._tagOpen="<"+e,this._tagClose=t?"":"</"+e+">",this.tagName=e.toUpperCase()}var i=e("./CSSPropertyOperations"),a=e("./DOMProperty"),s=e("./DOMPropertyOperations"),u=e("./ReactComponent"),c=e("./ReactEventEmitter"),l=e("./ReactMount"),p=e("./ReactMultiChild"),d=e("./ReactPerf"),f=e("./escapeTextForBrowser"),h=e("./invariant"),m=e("./keyOf"),v=e("./merge"),g=e("./mixInto"),y=c.deleteListener,C=c.listenTo,E=c.registrationNameModules,M={string:!0,number:!0},R=m({style:null}),D=1;r.Mixin={mountComponent:d.measure("ReactDOMComponent","mountComponent",function(e,t,o){return u.Mixin.mountComponent.call(this,e,t,o),n(this.props),this._createOpenTagMarkupAndPutListeners(t)+this._createContentMarkup(t)+this._tagClose}),_createOpenTagMarkupAndPutListeners:function(e){var t=this.props,n=this._tagOpen;for(var r in t)if(t.hasOwnProperty(r)){var a=t[r];if(null!=a)if(E[r])o(this._rootNodeID,r,a,e);else{r===R&&(a&&(a=t.style=v(t.style)),a=i.createMarkupForStyles(a));var u=s.createMarkupForProperty(r,a);u&&(n+=" "+u)}}var c=s.createMarkupForID(this._rootNodeID);return n+" "+c+">"},_createContentMarkup:function(e){var t=this.props.dangerouslySetInnerHTML;if(null!=t){if(null!=t.__html)return t.__html}else{var n=M[typeof this.props.children]?this.props.children:null,o=null!=n?null:this.props.children;if(null!=n)return f(n);if(null!=o){var r=this.mountChildren(o,e);return r.join("")}}return""},receiveComponent:function(e,t){n(e.props),u.Mixin.receiveComponent.call(this,e,t)},updateComponent:d.measure("ReactDOMComponent","updateComponent",function(e,t,n){u.Mixin.updateComponent.call(this,e,t,n),this._updateDOMProperties(t,e),this._updateDOMChildren(t,e)}),_updateDOMProperties:function(e,t){var n,r,i,s=this.props;for(n in e)if(!s.hasOwnProperty(n)&&e.hasOwnProperty(n))if(n===R){var c=e[n];for(r in c)c.hasOwnProperty(r)&&(i=i||{},i[r]="")}else E[n]?y(this._rootNodeID,n):(a.isStandardName[n]||a.isCustomAttribute(n))&&u.BackendIDOperations.deletePropertyByID(this._rootNodeID,n);for(n in s){var l=s[n],p=e[n];if(s.hasOwnProperty(n)&&l!==p)if(n===R)if(l&&(l=s.style=v(l)),p){for(r in p)p.hasOwnProperty(r)&&!l.hasOwnProperty(r)&&(i=i||{},i[r]="");for(r in l)l.hasOwnProperty(r)&&p[r]!==l[r]&&(i=i||{},i[r]=l[r])}else i=l;else E[n]?o(this._rootNodeID,n,l,t):(a.isStandardName[n]||a.isCustomAttribute(n))&&u.BackendIDOperations.updatePropertyByID(this._rootNodeID,n,l)}i&&u.BackendIDOperations.updateStylesByID(this._rootNodeID,i)},_updateDOMChildren:function(e,t){var n=this.props,o=M[typeof e.children]?e.children:null,r=M[typeof n.children]?n.children:null,i=e.dangerouslySetInnerHTML&&e.dangerouslySetInnerHTML.__html,a=n.dangerouslySetInnerHTML&&n.dangerouslySetInnerHTML.__html,s=null!=o?null:e.children,c=null!=r?null:n.children,l=null!=o||null!=i,p=null!=r||null!=a;null!=s&&null==c?this.updateChildren(null,t):l&&!p&&this.updateTextContent(""),null!=r?o!==r&&this.updateTextContent(""+r):null!=a?i!==a&&u.BackendIDOperations.updateInnerHTMLByID(this._rootNodeID,a):null!=c&&this.updateChildren(c,t)},unmountComponent:function(){this.unmountChildren(),c.deleteAllListeners(this._rootNodeID),u.Mixin.unmountComponent.call(this)}},g(r,u.Mixin),g(r,r.Mixin),g(r,p.Mixin),t.exports=r},{"./CSSPropertyOperations":3,"./DOMProperty":8,"./DOMPropertyOperations":9,"./ReactComponent":26,"./ReactEventEmitter":46,"./ReactMount":53,"./ReactMultiChild":55,"./ReactPerf":58,"./escapeTextForBrowser":94,"./invariant":106,"./keyOf":113,"./merge":115,"./mixInto":118}],35:[function(e,t){"use strict";var n=e("./ReactCompositeComponent"),o=e("./ReactDOM"),r=e("./ReactEventEmitter"),i=e("./EventConstants"),a=o.form,s=n.createClass({displayName:"ReactDOMForm",render:function(){return this.transferPropsTo(a(null,this.props.children))},componentDidMount:function(){r.trapBubbledEvent(i.topLevelTypes.topReset,"reset",this.getDOMNode()),r.trapBubbledEvent(i.topLevelTypes.topSubmit,"submit",this.getDOMNode())}});t.exports=s},{"./EventConstants":14,"./ReactCompositeComponent":29,"./ReactDOM":32,"./ReactEventEmitter":46}],36:[function(e,t){"use strict";var n,o=e("./CSSPropertyOperations"),r=e("./DOMChildrenOperations"),i=e("./DOMPropertyOperations"),a=e("./ReactMount"),s=e("./ReactPerf"),u=e("./invariant"),c={dangerouslySetInnerHTML:"`dangerouslySetInnerHTML` must be set using `updateInnerHTMLByID()`.",style:"`style` must be set using `updateStylesByID()`."},l={updatePropertyByID:s.measure("ReactDOMIDOperations","updatePropertyByID",function(e,t,n){var o=a.getNode(e);u(!c.hasOwnProperty(t)),null!=n?i.setValueForProperty(o,t,n):i.deleteValueForProperty(o,t)}),deletePropertyByID:s.measure("ReactDOMIDOperations","deletePropertyByID",function(e,t,n){var o=a.getNode(e);u(!c.hasOwnProperty(t)),i.deleteValueForProperty(o,t,n)}),updateStylesByID:s.measure("ReactDOMIDOperations","updateStylesByID",function(e,t){var n=a.getNode(e);o.setValueForStyles(n,t)}),updateInnerHTMLByID:s.measure("ReactDOMIDOperations","updateInnerHTMLByID",function(e,t){var o=a.getNode(e);if(void 0===n){var r=document.createElement("div");r.innerHTML=" ",n=""===r.innerHTML}n&&o.parentNode.replaceChild(o,o),n&&t.match(/^[ \r\n\t\f]/)?(o.innerHTML=""+t,o.firstChild.deleteData(0,1)):o.innerHTML=t}),updateTextContentByID:s.measure("ReactDOMIDOperations","updateTextContentByID",function(e,t){var n=a.getNode(e);r.updateTextContent(n,t)}),dangerouslyReplaceNodeWithMarkupByID:s.measure("ReactDOMIDOperations","dangerouslyReplaceNodeWithMarkupByID",function(e,t){var n=a.getNode(e);r.dangerouslyReplaceNodeWithMarkup(n,t)}),dangerouslyProcessChildrenUpdates:s.measure("ReactDOMIDOperations","dangerouslyProcessChildrenUpdates",function(e,t){for(var n=0;n<e.length;n++)e[n].parentNode=a.getNode(e[n].parentID);r.processUpdates(e,t)})};t.exports=l},{"./CSSPropertyOperations":3,"./DOMChildrenOperations":7,"./DOMPropertyOperations":9,"./ReactMount":53,"./ReactPerf":58,"./invariant":106}],37:[function(e,t){"use strict";var n=e("./ReactCompositeComponent"),o=e("./ReactDOM"),r=e("./ReactEventEmitter"),i=e("./EventConstants"),a=o.img,s=n.createClass({displayName:"ReactDOMImg",tagName:"IMG",render:function(){return a(this.props)},componentDidMount:function(){var e=this.getDOMNode();r.trapBubbledEvent(i.topLevelTypes.topLoad,"load",e),r.trapBubbledEvent(i.topLevelTypes.topError,"error",e)}});t.exports=s},{"./EventConstants":14,"./ReactCompositeComponent":29,"./ReactDOM":32,"./ReactEventEmitter":46}],38:[function(e,t){"use strict";var n=e("./AutoFocusMixin"),o=e("./DOMPropertyOperations"),r=e("./LinkedValueUtils"),i=e("./ReactCompositeComponent"),a=e("./ReactDOM"),s=e("./ReactMount"),u=e("./invariant"),c=e("./merge"),l=a.input,p={},d=i.createClass({displayName:"ReactDOMInput",mixins:[n,r.Mixin],getInitialState:function(){var e=this.props.defaultValue;return{checked:this.props.defaultChecked||!1,value:null!=e?e:null}},shouldComponentUpdate:function(){return!this._isChanging},render:function(){var e=c(this.props);e.defaultChecked=null,e.defaultValue=null;var t=r.getValue(this);e.value=null!=t?t:this.state.value;var n=r.getChecked(this);return e.checked=null!=n?n:this.state.checked,e.onChange=this._handleChange,l(e,this.props.children)},componentDidMount:function(){var e=s.getID(this.getDOMNode());p[e]=this},componentWillUnmount:function(){var e=this.getDOMNode(),t=s.getID(e);delete p[t]},componentDidUpdate:function(){var e=this.getDOMNode();null!=this.props.checked&&o.setValueForProperty(e,"checked",this.props.checked||!1);var t=r.getValue(this);null!=t&&o.setValueForProperty(e,"value",""+t)},_handleChange:function(e){var t,n=r.getOnChange(this);n&&(this._isChanging=!0,t=n.call(this,e),this._isChanging=!1),this.setState({checked:e.target.checked,value:e.target.value});var o=this.props.name;if("radio"===this.props.type&&null!=o){for(var i=this.getDOMNode(),a=i;a.parentNode;)a=a.parentNode;for(var c=a.querySelectorAll("input[name="+JSON.stringify(""+o)+'][type="radio"]'),l=0,d=c.length;d>l;l++){var f=c[l];if(f!==i&&f.form===i.form){var h=s.getID(f);u(h);var m=p[h];u(m),m.setState({checked:!1})}}}return t}});t.exports=d},{"./AutoFocusMixin":1,"./DOMPropertyOperations":9,"./LinkedValueUtils":21,"./ReactCompositeComponent":29,"./ReactDOM":32,"./ReactMount":53,"./invariant":106,"./merge":115}],39:[function(e,t){"use strict";var n=e("./ReactCompositeComponent"),o=e("./ReactDOM"),r=o.option,i=n.createClass({displayName:"ReactDOMOption",componentWillMount:function(){null!=this.props.selected},render:function(){return r(this.props,this.props.children)}});t.exports=i},{"./ReactCompositeComponent":29,"./ReactDOM":32}],40:[function(e,t){"use strict";function n(e,t){null!=e[t]&&u(e.multiple?Array.isArray(e[t]):!Array.isArray(e[t]))}function o(e,t){var n,o,r,i=e.props.multiple,a=null!=t?t:e.state.value,s=e.getDOMNode().options;if(i)for(n={},o=0,r=a.length;r>o;++o)n[""+a[o]]=!0;else n=""+a;for(o=0,r=s.length;r>o;o++){var u=i?n.hasOwnProperty(s[o].value):s[o].value===n;u!==s[o].selected&&(s[o].selected=u)}}var r=e("./AutoFocusMixin"),i=e("./LinkedValueUtils"),a=e("./ReactCompositeComponent"),s=e("./ReactDOM"),u=e("./invariant"),c=e("./merge"),l=s.select,p=a.createClass({displayName:"ReactDOMSelect",mixins:[r,i.Mixin],propTypes:{defaultValue:n,value:n},getInitialState:function(){return{value:this.props.defaultValue||(this.props.multiple?[]:"")}},componentWillReceiveProps:function(e){!this.props.multiple&&e.multiple?this.setState({value:[this.state.value]}):this.props.multiple&&!e.multiple&&this.setState({value:this.state.value[0]})},shouldComponentUpdate:function(){return!this._isChanging},render:function(){var e=c(this.props);return e.onChange=this._handleChange,e.value=null,l(e,this.props.children)},componentDidMount:function(){o(this,i.getValue(this))},componentDidUpdate:function(){var e=i.getValue(this);null!=e&&o(this,e)},_handleChange:function(e){var t,n=i.getOnChange(this);n&&(this._isChanging=!0,t=n.call(this,e),this._isChanging=!1);var o;if(this.props.multiple){o=[];for(var r=e.target.options,a=0,s=r.length;s>a;a++)r[a].selected&&o.push(r[a].value)}else o=e.target.value;return this.setState({value:o}),t}});t.exports=p},{"./AutoFocusMixin":1,"./LinkedValueUtils":21,"./ReactCompositeComponent":29,"./ReactDOM":32,"./invariant":106,"./merge":115}],41:[function(e,t){"use strict";function n(e){var t=document.selection,n=t.createRange(),o=n.text.length,r=n.duplicate();r.moveToElementText(e),r.setEndPoint("EndToStart",n);var i=r.text.length,a=i+o;return{start:i,end:a}}function o(e){var t=window.getSelection();if(0===t.rangeCount)return null;var n=t.anchorNode,o=t.anchorOffset,r=t.focusNode,i=t.focusOffset,a=t.getRangeAt(0),s=a.toString().length,u=a.cloneRange();u.selectNodeContents(e),u.setEnd(a.startContainer,a.startOffset);var c=u.toString().length,l=c+s,p=document.createRange();p.setStart(n,o),p.setEnd(r,i);var d=p.collapsed;return p.detach(),{start:d?l:c,end:d?c:l}}function r(e,t){var n,o,r=document.selection.createRange().duplicate();"undefined"==typeof t.end?(n=t.start,o=n):t.start>t.end?(n=t.end,o=t.start):(n=t.start,o=t.end),r.moveToElementText(e),r.moveStart("character",n),r.setEndPoint("EndToStart",r),r.moveEnd("character",o-n),r.select()}function i(e,t){var n=window.getSelection(),o=e[s()].length,r=Math.min(t.start,o),i="undefined"==typeof t.end?r:Math.min(t.end,o);if(!n.extend&&r>i){var u=i;i=r,r=u}var c=a(e,r),l=a(e,i);if(c&&l){var p=document.createRange();p.setStart(c.node,c.offset),n.removeAllRanges(),r>i?(n.addRange(p),n.extend(l.node,l.offset)):(p.setEnd(l.node,l.offset),n.addRange(p)),p.detach()}}var a=e("./getNodeForCharacterOffset"),s=e("./getTextContentAccessor"),u={getOffsets:function(e){var t=document.selection?n:o;return t(e)},setOffsets:function(e,t){var n=document.selection?r:i;n(e,t)}};t.exports=u},{"./getNodeForCharacterOffset":101,"./getTextContentAccessor":103}],42:[function(e,t){"use strict";var n=e("./AutoFocusMixin"),o=e("./DOMPropertyOperations"),r=e("./LinkedValueUtils"),i=e("./ReactCompositeComponent"),a=e("./ReactDOM"),s=e("./invariant"),u=e("./merge"),c=a.textarea,l=i.createClass({displayName:"ReactDOMTextarea",mixins:[n,r.Mixin],getInitialState:function(){var e=this.props.defaultValue,t=this.props.children;null!=t&&(s(null==e),Array.isArray(t)&&(s(t.length<=1),t=t[0]),e=""+t),null==e&&(e="");var n=r.getValue(this);return{initialValue:""+(null!=n?n:e),value:e}},shouldComponentUpdate:function(){return!this._isChanging},render:function(){var e=u(this.props),t=r.getValue(this);return s(null==e.dangerouslySetInnerHTML),e.defaultValue=null,e.value=null!=t?t:this.state.value,e.onChange=this._handleChange,c(e,this.state.initialValue)},componentDidUpdate:function(){var e=r.getValue(this);if(null!=e){var t=this.getDOMNode();o.setValueForProperty(t,"value",""+e)}},_handleChange:function(e){var t,n=r.getOnChange(this);return n&&(this._isChanging=!0,t=n.call(this,e),this._isChanging=!1),this.setState({value:e.target.value}),t}});t.exports=l},{"./AutoFocusMixin":1,"./DOMPropertyOperations":9,"./LinkedValueUtils":21,"./ReactCompositeComponent":29,"./ReactDOM":32,"./invariant":106,"./merge":115}],43:[function(e,t){"use strict";function n(){this.reinitializeTransaction()}var o=e("./ReactUpdates"),r=e("./Transaction"),i=e("./emptyFunction"),a=e("./mixInto"),s={initialize:i,close:function(){p.isBatchingUpdates=!1}},u={initialize:i,close:o.flushBatchedUpdates.bind(o)},c=[u,s];a(n,r.Mixin),a(n,{getTransactionWrappers:function(){return c}});var l=new n,p={isBatchingUpdates:!1,batchedUpdates:function(e,t){var n=p.isBatchingUpdates;p.isBatchingUpdates=!0,n?e(t):l.perform(e,null,t)}};t.exports=p},{"./ReactUpdates":68,"./Transaction":82,"./emptyFunction":93,"./mixInto":118}],44:[function(e,t){"use strict";function n(){o.EventEmitter.injectTopLevelCallbackCreator(d),o.EventPluginHub.injectEventPluginOrder(c),o.EventPluginHub.injectInstanceHandle(M),o.EventPluginHub.injectMount(R),o.EventPluginHub.injectEventPluginsByName({SimpleEventPlugin:b,EnterLeaveEventPlugin:l,ChangeEventPlugin:a,CompositionEventPlugin:u,MobileSafariClickEventPlugin:p,SelectEventPlugin:D}),o.DOM.injectComponentClasses({button:h,form:m,img:v,input:g,option:y,select:C,textarea:E,html:I(f.html),head:I(f.head),title:I(f.title),body:I(f.body)}),o.DOMProperty.injectDOMPropertyConfig(i),o.Updates.injectBatchingStrategy(P),o.RootIndex.injectCreateReactRootIndex(r.canUseDOM?s.createReactRootIndex:x.createReactRootIndex)}var o=e("./ReactInjection"),r=e("./ExecutionEnvironment"),i=e("./DefaultDOMPropertyConfig"),a=e("./ChangeEventPlugin"),s=e("./ClientReactRootIndex"),u=e("./CompositionEventPlugin"),c=e("./DefaultEventPluginOrder"),l=e("./EnterLeaveEventPlugin"),p=e("./MobileSafariClickEventPlugin"),d=e("./ReactEventTopLevelCallback"),f=e("./ReactDOM"),h=e("./ReactDOMButton"),m=e("./ReactDOMForm"),v=e("./ReactDOMImg"),g=e("./ReactDOMInput"),y=e("./ReactDOMOption"),C=e("./ReactDOMSelect"),E=e("./ReactDOMTextarea"),M=e("./ReactInstanceHandles"),R=e("./ReactMount"),D=e("./SelectEventPlugin"),x=e("./ServerReactRootIndex"),b=e("./SimpleEventPlugin"),P=e("./ReactDefaultBatchingStrategy"),I=e("./createFullPageComponent");t.exports={inject:n}},{"./ChangeEventPlugin":4,"./ClientReactRootIndex":5,"./CompositionEventPlugin":6,"./DefaultDOMPropertyConfig":11,"./DefaultEventPluginOrder":12,"./EnterLeaveEventPlugin":13,"./ExecutionEnvironment":20,"./MobileSafariClickEventPlugin":22,"./ReactDOM":32,"./ReactDOMButton":33,"./ReactDOMForm":35,"./ReactDOMImg":37,"./ReactDOMInput":38,"./ReactDOMOption":39,"./ReactDOMSelect":40,"./ReactDOMTextarea":42,"./ReactDefaultBatchingStrategy":43,"./ReactEventTopLevelCallback":48,"./ReactInjection":49,"./ReactInstanceHandles":51,"./ReactMount":53,"./SelectEventPlugin":69,"./ServerReactRootIndex":70,"./SimpleEventPlugin":71,"./createFullPageComponent":89}],45:[function(e,t){"use strict";var n={guard:function(e){return e}};t.exports=n},{}],46:[function(e,t){"use strict";function n(e){return null==e[C]&&(e[C]=g++,m[e[C]]={}),m[e[C]]}function o(e,t,n){a.listen(n,t,E.TopLevelCallbackCreator.createTopLevelCallback(e))}function r(e,t,n){a.capture(n,t,E.TopLevelCallbackCreator.createTopLevelCallback(e))}var i=e("./EventConstants"),a=e("./EventListener"),s=e("./EventPluginHub"),u=e("./EventPluginRegistry"),c=e("./ExecutionEnvironment"),l=e("./ReactEventEmitterMixin"),p=e("./ViewportMetrics"),d=e("./invariant"),f=e("./isEventSupported"),h=e("./merge"),m={},v=!1,g=0,y={topBlur:"blur",topChange:"change",topClick:"click",topCompositionEnd:"compositionend",topCompositionStart:"compositionstart",topCompositionUpdate:"compositionupdate",topContextMenu:"contextmenu",topCopy:"copy",topCut:"cut",topDoubleClick:"dblclick",topDrag:"drag",topDragEnd:"dragend",topDragEnter:"dragenter",topDragExit:"dragexit",topDragLeave:"dragleave",topDragOver:"dragover",topDragStart:"dragstart",topDrop:"drop",topFocus:"focus",topInput:"input",topKeyDown:"keydown",topKeyPress:"keypress",topKeyUp:"keyup",topMouseDown:"mousedown",topMouseMove:"mousemove",topMouseOut:"mouseout",topMouseOver:"mouseover",topMouseUp:"mouseup",topPaste:"paste",topScroll:"scroll",topSelectionChange:"selectionchange",topTouchCancel:"touchcancel",topTouchEnd:"touchend",topTouchMove:"touchmove",topTouchStart:"touchstart",topWheel:"wheel"},C="_reactListenersID"+String(Math.random()).slice(2),E=h(l,{TopLevelCallbackCreator:null,injection:{injectTopLevelCallbackCreator:function(e){E.TopLevelCallbackCreator=e}},setEnabled:function(e){d(c.canUseDOM),E.TopLevelCallbackCreator&&E.TopLevelCallbackCreator.setEnabled(e)},isEnabled:function(){return!(!E.TopLevelCallbackCreator||!E.TopLevelCallbackCreator.isEnabled())},listenTo:function(e,t){for(var a=t,s=n(a),c=u.registrationNameDependencies[e],l=i.topLevelTypes,p=0,d=c.length;d>p;p++){var h=c[p];if(!s[h]){var m=l[h];m===l.topWheel?f("wheel")?o(l.topWheel,"wheel",a):f("mousewheel")?o(l.topWheel,"mousewheel",a):o(l.topWheel,"DOMMouseScroll",a):m===l.topScroll?f("scroll",!0)?r(l.topScroll,"scroll",a):o(l.topScroll,"scroll",window):m===l.topFocus||m===l.topBlur?(f("focus",!0)?(r(l.topFocus,"focus",a),r(l.topBlur,"blur",a)):f("focusin")&&(o(l.topFocus,"focusin",a),o(l.topBlur,"focusout",a)),s[l.topBlur]=!0,s[l.topFocus]=!0):y[h]&&o(m,y[h],a),s[h]=!0}}},ensureScrollValueMonitoring:function(){if(!v){var e=p.refreshScrollValues;a.listen(window,"scroll",e),a.listen(window,"resize",e),v=!0}},eventNameDispatchConfigs:s.eventNameDispatchConfigs,registrationNameModules:s.registrationNameModules,putListener:s.putListener,getListener:s.getListener,deleteListener:s.deleteListener,deleteAllListeners:s.deleteAllListeners,trapBubbledEvent:o,trapCapturedEvent:r});t.exports=E},{"./EventConstants":14,"./EventListener":15,"./EventPluginHub":16,"./EventPluginRegistry":17,"./ExecutionEnvironment":20,"./ReactEventEmitterMixin":47,"./ViewportMetrics":83,"./invariant":106,"./isEventSupported":107,"./merge":115}],47:[function(e,t){"use strict";function n(e){o.enqueueEvents(e),o.processEventQueue()}var o=e("./EventPluginHub"),r=e("./ReactUpdates"),i={handleTopLevel:function(e,t,i,a){var s=o.extractEvents(e,t,i,a);r.batchedUpdates(n,s)}};t.exports=i},{"./EventPluginHub":16,"./ReactUpdates":68}],48:[function(e,t){"use strict";function n(e){var t=u.getID(e),n=s.getReactRootIDFromNodeID(t),o=u.findReactContainerForID(n),r=u.getFirstReactDOM(o);return r}function o(e,t,o){for(var r=u.getFirstReactDOM(c(t))||window,i=r;i;)o.ancestors.push(i),i=n(i);for(var s=0,l=o.ancestors.length;l>s;s++){r=o.ancestors[s];var p=u.getID(r)||"";a.handleTopLevel(e,r,p,t)}}function r(){this.ancestors=[]}var i=e("./PooledClass"),a=e("./ReactEventEmitter"),s=e("./ReactInstanceHandles"),u=e("./ReactMount"),c=e("./getEventTarget"),l=e("./mixInto"),p=!0;l(r,{destructor:function(){this.ancestors.length=0}}),i.addPoolingTo(r);var d={setEnabled:function(e){p=!!e},isEnabled:function(){return p},createTopLevelCallback:function(e){return function(t){if(p){var n=r.getPooled();try{o(e,t,n)}finally{r.release(n)}}}}};t.exports=d},{"./PooledClass":23,"./ReactEventEmitter":46,"./ReactInstanceHandles":51,"./ReactMount":53,"./getEventTarget":99,"./mixInto":118}],49:[function(e,t){"use strict";var n=e("./DOMProperty"),o=e("./EventPluginHub"),r=e("./ReactDOM"),i=e("./ReactEventEmitter"),a=e("./ReactPerf"),s=e("./ReactRootIndex"),u=e("./ReactUpdates"),c={DOMProperty:n.injection,EventPluginHub:o.injection,DOM:r.injection,EventEmitter:i.injection,Perf:a.injection,RootIndex:s.injection,Updates:u.injection};t.exports=c
},{"./DOMProperty":8,"./EventPluginHub":16,"./ReactDOM":32,"./ReactEventEmitter":46,"./ReactPerf":58,"./ReactRootIndex":65,"./ReactUpdates":68}],50:[function(e,t){"use strict";function n(e){return r(document.documentElement,e)}var o=e("./ReactDOMSelection"),r=e("./containsNode"),i=e("./getActiveElement"),a={hasSelectionCapabilities:function(e){return e&&("INPUT"===e.nodeName&&"text"===e.type||"TEXTAREA"===e.nodeName||"true"===e.contentEditable)},getSelectionInformation:function(){var e=i();return{focusedElem:e,selectionRange:a.hasSelectionCapabilities(e)?a.getSelection(e):null}},restoreSelection:function(e){var t=i(),o=e.focusedElem,r=e.selectionRange;t!==o&&n(o)&&(a.hasSelectionCapabilities(o)&&a.setSelection(o,r),o.focus())},getSelection:function(e){var t;if("selectionStart"in e)t={start:e.selectionStart,end:e.selectionEnd};else if(document.selection&&"INPUT"===e.nodeName){var n=document.selection.createRange();n.parentElement()===e&&(t={start:-n.moveStart("character",-e.value.length),end:-n.moveEnd("character",-e.value.length)})}else t=o.getOffsets(e);return t||{start:0,end:0}},setSelection:function(e,t){var n=t.start,r=t.end;if("undefined"==typeof r&&(r=n),"selectionStart"in e)e.selectionStart=n,e.selectionEnd=Math.min(r,e.value.length);else if(document.selection&&"INPUT"===e.nodeName){var i=e.createTextRange();i.collapse(!0),i.moveStart("character",n),i.moveEnd("character",r-n),i.select()}else o.setOffsets(e,t)}};t.exports=a},{"./ReactDOMSelection":41,"./containsNode":86,"./getActiveElement":97}],51:[function(e,t){"use strict";function n(e){return d+e.toString(36)}function o(e,t){return e.charAt(t)===d||t===e.length}function r(e){return""===e||e.charAt(0)===d&&e.charAt(e.length-1)!==d}function i(e,t){return 0===t.indexOf(e)&&o(t,e.length)}function a(e){return e?e.substr(0,e.lastIndexOf(d)):""}function s(e,t){if(p(r(e)&&r(t)),p(i(e,t)),e===t)return e;for(var n=e.length+f,a=n;a<t.length&&!o(t,a);a++);return t.substr(0,a)}function u(e,t){var n=Math.min(e.length,t.length);if(0===n)return"";for(var i=0,a=0;n>=a;a++)if(o(e,a)&&o(t,a))i=a;else if(e.charAt(a)!==t.charAt(a))break;var s=e.substr(0,i);return p(r(s)),s}function c(e,t,n,o,r,u){e=e||"",t=t||"",p(e!==t);var c=i(t,e);p(c||i(e,t));for(var l=0,d=c?a:s,f=e;;f=d(f,t)){var m;if(r&&f===e||u&&f===t||(m=n(f,c,o)),m===!1||f===t)break;p(l++<h)}}var l=e("./ReactRootIndex"),p=e("./invariant"),d=".",f=d.length,h=100,m={createReactRootID:function(){return n(l.createReactRootIndex())},createReactID:function(e,t){return e+t},getReactRootIDFromNodeID:function(e){if(e&&e.charAt(0)===d&&e.length>1){var t=e.indexOf(d,1);return t>-1?e.substr(0,t):e}return null},traverseEnterLeave:function(e,t,n,o,r){var i=u(e,t);i!==e&&c(e,i,n,o,!1,!0),i!==t&&c(i,t,n,r,!0,!1)},traverseTwoPhase:function(e,t,n){e&&(c("",e,t,n,!0,!1),c(e,"",t,n,!1,!0))},traverseAncestors:function(e,t,n){c("",e,t,n,!0,!1)},_getFirstCommonAncestorID:u,_getNextDescendantID:s,isAncestorIDOf:i,SEPARATOR:d};t.exports=m},{"./ReactRootIndex":65,"./invariant":106}],52:[function(e,t){"use strict";var n=e("./adler32"),o={CHECKSUM_ATTR_NAME:"data-react-checksum",addChecksumToMarkup:function(e){var t=n(e);return e.replace(">"," "+o.CHECKSUM_ATTR_NAME+'="'+t+'">')},canReuseMarkup:function(e,t){var r=t.getAttribute(o.CHECKSUM_ATTR_NAME);r=r&&parseInt(r,10);var i=n(e);return i===r}};t.exports=o},{"./adler32":85}],53:[function(e,t){"use strict";function n(e){var t=v(e);return t&&O.getID(t)}function o(e){var t=r(e);if(t)if(M.hasOwnProperty(t)){var n=M[t];n!==e&&(g(!s(n,t)),M[t]=e)}else M[t]=e;return t}function r(e){return e&&e.getAttribute&&e.getAttribute(E)||""}function i(e,t){var n=r(e);n!==t&&delete M[n],e.setAttribute(E,t),M[t]=e}function a(e){return M.hasOwnProperty(e)&&s(M[e],e)||(M[e]=O.findReactNodeByID(e)),M[e]}function s(e,t){if(e){g(r(e)===t);var n=O.findReactContainerForID(t);if(n&&m(n,e))return!0}return!1}function u(e){delete M[e]}function c(e){var t=M[e];return t&&s(t,e)?void(I=t):!1}function l(e){I=null,f.traverseAncestors(e,c);var t=I;return I=null,t}var p=e("./DOMProperty"),d=e("./ReactEventEmitter"),f=e("./ReactInstanceHandles"),h=e("./ReactPerf"),m=e("./containsNode"),v=e("./getReactRootElementInContainer"),g=e("./invariant"),y=e("./shouldUpdateReactComponent"),C=f.SEPARATOR,E=p.ID_ATTRIBUTE_NAME,M={},R=1,D=9,x={},b={},P=[],I=null,O={totalInstantiationTime:0,totalInjectionTime:0,useTouchEvents:!1,_instancesByReactRootID:x,scrollMonitor:function(e,t){t()},_updateRootComponent:function(e,t,n,o){var r=t.props;return O.scrollMonitor(n,function(){e.replaceProps(r,o)}),e},_registerComponent:function(e,t){g(t&&(t.nodeType===R||t.nodeType===D)),d.ensureScrollValueMonitoring();var n=O.registerContainer(t);return x[n]=e,n},_renderNewRootComponent:h.measure("ReactMount","_renderNewRootComponent",function(e,t,n){var o=O._registerComponent(e,t);return e.mountComponentIntoNode(o,t,n),e}),renderComponent:function(e,t,o){var r=x[n(t)];if(r){if(y(r,e))return O._updateRootComponent(r,e,t,o);O.unmountComponentAtNode(t)}var i=v(t),a=i&&O.isRenderedByReact(i),s=a&&!r,u=O._renderNewRootComponent(e,t,s);return o&&o.call(u),u},constructAndRenderComponent:function(e,t,n){return O.renderComponent(e(t),n)},constructAndRenderComponentByID:function(e,t,n){var o=document.getElementById(n);return g(o),O.constructAndRenderComponent(e,t,o)},registerContainer:function(e){var t=n(e);return t&&(t=f.getReactRootIDFromNodeID(t)),t||(t=f.createReactRootID()),b[t]=e,t},unmountComponentAtNode:function(e){var t=n(e),o=x[t];return o?(O.unmountComponentFromNode(o,e),delete x[t],delete b[t],!0):!1},unmountComponentFromNode:function(e,t){for(e.unmountComponent(),t.nodeType===D&&(t=t.documentElement);t.lastChild;)t.removeChild(t.lastChild)},findReactContainerForID:function(e){var t=f.getReactRootIDFromNodeID(e),n=b[t];return n},findReactNodeByID:function(e){var t=O.findReactContainerForID(e);return O.findComponentRoot(t,e)},isRenderedByReact:function(e){if(1!==e.nodeType)return!1;var t=O.getID(e);return t?t.charAt(0)===C:!1},getFirstReactDOM:function(e){for(var t=e;t&&t.parentNode!==t;){if(O.isRenderedByReact(t))return t;t=t.parentNode}return null},findComponentRoot:function(e,t){var n=P,o=0,r=l(t)||e;for(n[0]=r.firstChild,n.length=1;o<n.length;){for(var i,a=n[o++];a;){var s=O.getID(a);s?t===s?i=a:f.isAncestorIDOf(s,t)&&(n.length=o=0,n.push(a.firstChild)):n.push(a.firstChild),a=a.nextSibling}if(i)return n.length=0,i}n.length=0,g(!1)},getReactRootID:n,getID:o,setID:i,getNode:a,purgeID:u};t.exports=O},{"./DOMProperty":8,"./ReactEventEmitter":46,"./ReactInstanceHandles":51,"./ReactPerf":58,"./containsNode":86,"./getReactRootElementInContainer":102,"./invariant":106,"./shouldUpdateReactComponent":123}],54:[function(e,t){"use strict";function n(e){this._queue=e||null}var o=e("./PooledClass"),r=e("./mixInto");r(n,{enqueue:function(e,t){this._queue=this._queue||[],this._queue.push({component:e,callback:t})},notifyAll:function(){var e=this._queue;if(e){this._queue=null;for(var t=0,n=e.length;n>t;t++){var o=e[t].component,r=e[t].callback;r.call(o)}e.length=0}},reset:function(){this._queue=null},destructor:function(){this.reset()}}),o.addPoolingTo(n),t.exports=n},{"./PooledClass":23,"./mixInto":118}],55:[function(e,t){"use strict";function n(e,t,n){f.push({parentID:e,parentNode:null,type:c.INSERT_MARKUP,markupIndex:h.push(t)-1,textContent:null,fromIndex:null,toIndex:n})}function o(e,t,n){f.push({parentID:e,parentNode:null,type:c.MOVE_EXISTING,markupIndex:null,textContent:null,fromIndex:t,toIndex:n})}function r(e,t){f.push({parentID:e,parentNode:null,type:c.REMOVE_NODE,markupIndex:null,textContent:null,fromIndex:t,toIndex:null})}function i(e,t){f.push({parentID:e,parentNode:null,type:c.TEXT_CONTENT,markupIndex:null,textContent:t,fromIndex:null,toIndex:null})}function a(){f.length&&(u.BackendIDOperations.dangerouslyProcessChildrenUpdates(f,h),s())}function s(){f.length=0,h.length=0}var u=e("./ReactComponent"),c=e("./ReactMultiChildUpdateTypes"),l=e("./flattenChildren"),p=e("./shouldUpdateReactComponent"),d=0,f=[],h=[],m={Mixin:{mountChildren:function(e,t){var n=l(e),o=[],r=0;this._renderedChildren=n;for(var i in n){var a=n[i];if(n.hasOwnProperty(i)){var s=this._rootNodeID+i,u=a.mountComponent(s,t,this._mountDepth+1);a._mountIndex=r,o.push(u),r++}}return o},updateTextContent:function(e){d++;var t=!0;try{var n=this._renderedChildren;for(var o in n)n.hasOwnProperty(o)&&this._unmountChildByName(n[o],o);this.setTextContent(e),t=!1}finally{d--,d||(t?s():a())}},updateChildren:function(e,t){d++;var n=!0;try{this._updateChildren(e,t),n=!1}finally{d--,d||(n?s():a())}},_updateChildren:function(e,t){var n=l(e),o=this._renderedChildren;if(n||o){var r,i=0,a=0;for(r in n)if(n.hasOwnProperty(r)){var s=o&&o[r],u=n[r];p(s,u)?(this.moveChild(s,a,i),i=Math.max(s._mountIndex,i),s.receiveComponent(u,t),s._mountIndex=a):(s&&(i=Math.max(s._mountIndex,i),this._unmountChildByName(s,r)),this._mountChildByNameAtIndex(u,r,a,t)),a++}for(r in o)!o.hasOwnProperty(r)||n&&n[r]||this._unmountChildByName(o[r],r)}},unmountChildren:function(){var e=this._renderedChildren;for(var t in e){var n=e[t];n.unmountComponent&&n.unmountComponent()}this._renderedChildren=null},moveChild:function(e,t,n){e._mountIndex<n&&o(this._rootNodeID,e._mountIndex,t)},createChild:function(e,t){n(this._rootNodeID,t,e._mountIndex)},removeChild:function(e){r(this._rootNodeID,e._mountIndex)},setTextContent:function(e){i(this._rootNodeID,e)},_mountChildByNameAtIndex:function(e,t,n,o){var r=this._rootNodeID+t,i=e.mountComponent(r,o,this._mountDepth+1);e._mountIndex=n,this.createChild(e,i),this._renderedChildren=this._renderedChildren||{},this._renderedChildren[t]=e},_unmountChildByName:function(e,t){u.isValidComponent(e)&&(this.removeChild(e),e._mountIndex=null,e.unmountComponent(),delete this._renderedChildren[t])}}};t.exports=m},{"./ReactComponent":26,"./ReactMultiChildUpdateTypes":56,"./flattenChildren":95,"./shouldUpdateReactComponent":123}],56:[function(e,t){"use strict";var n=e("./keyMirror"),o=n({INSERT_MARKUP:null,MOVE_EXISTING:null,REMOVE_NODE:null,TEXT_CONTENT:null});t.exports=o},{"./keyMirror":112}],57:[function(e,t){"use strict";var n=e("./invariant"),o={isValidOwner:function(e){return!(!e||"function"!=typeof e.attachRef||"function"!=typeof e.detachRef)},addComponentAsRefTo:function(e,t,r){n(o.isValidOwner(r)),r.attachRef(t,e)},removeComponentAsRefFrom:function(e,t,r){n(o.isValidOwner(r)),r.refs[t]===e&&r.detachRef(t)},Mixin:{attachRef:function(e,t){n(t.isOwnedBy(this));var o=this.refs||(this.refs={});o[e]=t},detachRef:function(e){delete this.refs[e]}}};t.exports=o},{"./invariant":106}],58:[function(e,t){"use strict";function n(e,t,n){return n}var o={enableMeasure:!1,storedMeasure:n,measure:function(e,t,n){return n},injection:{injectMeasure:function(e){o.storedMeasure=e}}};t.exports=o},{}],59:[function(e,t){"use strict";function n(e){return function(t,n,o){t[n]=t.hasOwnProperty(n)?e(t[n],o):o}}var o=e("./emptyFunction"),r=e("./invariant"),i=e("./joinClasses"),a=e("./merge"),s={children:o,className:n(i),key:o,ref:o,style:n(a)},u={TransferStrategies:s,mergeProps:function(e,t){var n=a(e);for(var o in t)if(t.hasOwnProperty(o)){var r=s[o];r?r(n,o,t[o]):n.hasOwnProperty(o)||(n[o]=t[o])}return n},Mixin:{transferPropsTo:function(e){return r(e._owner===this),e.props=u.mergeProps(e.props,this.props),e}}};t.exports=u},{"./emptyFunction":93,"./invariant":106,"./joinClasses":111,"./merge":115}],60:[function(e,t){"use strict";var n={};t.exports=n},{}],61:[function(e,t){"use strict";var n=e("./keyMirror"),o=n({prop:null,context:null,childContext:null});t.exports=o},{"./keyMirror":112}],62:[function(e,t){"use strict";function n(e){switch(typeof e){case"number":case"string":return!0;case"object":if(Array.isArray(e))return e.every(n);if(h.isValidComponent(e))return!0;for(var t in e)if(!n(e[t]))return!1;return!0;default:return!1}}function o(e){var t=typeof e;return"object"===t&&Array.isArray(e)?"array":t}function r(){function e(){return!0}return f(e)}function i(e){function t(t,n){var r=o(n),i=r===e;return i}return f(t)}function a(e){function t(e,t){var o=n[t];return o}var n=m(e);return f(t)}function s(e){function t(t,n,r,i,a){var s=o(n),u="object"===s;if(u)for(var c in e){var l=e[c];if(l&&!l(n,c,i,a))return!1}return u}return f(t)}function u(e){function t(t,n){var o=n instanceof e;return o}return f(t)}function c(e){function t(t,n,o,r,i){var a=Array.isArray(n);if(a)for(var s=0;s<n.length;s++)if(!e(n,s,r,i))return!1;return a}return f(t)}function l(){function e(e,t){var o=n(t);return o}return f(e)}function p(){function e(e,t){var n=h.isValidComponent(t);return n}return f(e)}function d(e){return function(t,n,o,r){for(var i=!1,a=0;a<e.length;a++){var s=e[a];if("function"==typeof s.weak&&(s=s.weak),s(t,n,o,r)){i=!0;break}}return i}}function f(e){function t(t,n,o,r,i,a){var s=o[r];if(null!=s)return e(n,s,r,i||g,a);var u=!t;return u}var n=t.bind(null,!1,!0);return n.weak=t.bind(null,!1,!1),n.isRequired=t.bind(null,!0,!0),n.weak.isRequired=t.bind(null,!0,!1),n.isRequired.weak=n.weak.isRequired,n}var h=e("./ReactComponent"),m=(e("./ReactPropTypeLocationNames"),e("./warning"),e("./createObjectFrom")),v={array:i("array"),bool:i("boolean"),func:i("function"),number:i("number"),object:i("object"),string:i("string"),shape:s,oneOf:a,oneOfType:d,arrayOf:c,instanceOf:u,renderable:l(),component:p(),any:r()},g="<<anonymous>>";t.exports=v},{"./ReactComponent":26,"./ReactPropTypeLocationNames":60,"./createObjectFrom":91,"./warning":126}],63:[function(e,t){"use strict";function n(){this.listenersToPut=[]}var o=e("./PooledClass"),r=e("./ReactEventEmitter"),i=e("./mixInto");i(n,{enqueuePutListener:function(e,t,n){this.listenersToPut.push({rootNodeID:e,propKey:t,propValue:n})},putListeners:function(){for(var e=0;e<this.listenersToPut.length;e++){var t=this.listenersToPut[e];r.putListener(t.rootNodeID,t.propKey,t.propValue)}},reset:function(){this.listenersToPut.length=0},destructor:function(){this.reset()}}),o.addPoolingTo(n),t.exports=n},{"./PooledClass":23,"./ReactEventEmitter":46,"./mixInto":118}],64:[function(e,t){"use strict";function n(){this.reinitializeTransaction(),this.reactMountReady=s.getPooled(null),this.putListenerQueue=u.getPooled()}var o=e("./ExecutionEnvironment"),r=e("./PooledClass"),i=e("./ReactEventEmitter"),a=e("./ReactInputSelection"),s=e("./ReactMountReady"),u=e("./ReactPutListenerQueue"),c=e("./Transaction"),l=e("./mixInto"),p={initialize:a.getSelectionInformation,close:a.restoreSelection},d={initialize:function(){var e=i.isEnabled();return i.setEnabled(!1),e},close:function(e){i.setEnabled(e)}},f={initialize:function(){this.reactMountReady.reset()},close:function(){this.reactMountReady.notifyAll()}},h={initialize:function(){this.putListenerQueue.reset()},close:function(){this.putListenerQueue.putListeners()}},m=[h,p,d,f],v={getTransactionWrappers:function(){return o.canUseDOM?m:[]},getReactMountReady:function(){return this.reactMountReady},getPutListenerQueue:function(){return this.putListenerQueue},destructor:function(){s.release(this.reactMountReady),this.reactMountReady=null,u.release(this.putListenerQueue),this.putListenerQueue=null}};l(n,c.Mixin),l(n,v),r.addPoolingTo(n),t.exports=n},{"./ExecutionEnvironment":20,"./PooledClass":23,"./ReactEventEmitter":46,"./ReactInputSelection":50,"./ReactMountReady":54,"./ReactPutListenerQueue":63,"./Transaction":82,"./mixInto":118}],65:[function(e,t){"use strict";var n={injectCreateReactRootIndex:function(e){o.createReactRootIndex=e}},o={createReactRootIndex:null,injection:n};t.exports=o},{}],66:[function(e,t){"use strict";function n(e){s(o.isValidComponent(e)),s(!(2===arguments.length&&"function"==typeof arguments[1]));var t=r.createReactRootID(),n=a.getPooled();n.reinitializeTransaction();try{return n.perform(function(){var o=e.mountComponent(t,n,0);return i.addChecksumToMarkup(o)},null)}finally{a.release(n)}}var o=e("./ReactComponent"),r=e("./ReactInstanceHandles"),i=e("./ReactMarkupChecksum"),a=e("./ReactReconcileTransaction"),s=e("./invariant");t.exports={renderComponentToString:n}},{"./ReactComponent":26,"./ReactInstanceHandles":51,"./ReactMarkupChecksum":52,"./ReactReconcileTransaction":64,"./invariant":106}],67:[function(e,t){"use strict";var n=e("./DOMPropertyOperations"),o=e("./ReactComponent"),r=e("./escapeTextForBrowser"),i=e("./mixInto"),a=function(e){this.construct({text:e})};i(a,o.Mixin),i(a,{mountComponent:function(e,t,i){return o.Mixin.mountComponent.call(this,e,t,i),"<span "+n.createMarkupForID(e)+">"+r(this.props.text)+"</span>"},receiveComponent:function(e){var t=e.props;t.text!==this.props.text&&(this.props.text=t.text,o.BackendIDOperations.updateTextContentByID(this._rootNodeID,t.text))}}),a.type=a,a.prototype.type=a,t.exports=a},{"./DOMPropertyOperations":9,"./ReactComponent":26,"./escapeTextForBrowser":94,"./mixInto":118}],68:[function(e,t){"use strict";function n(){c(p)}function o(e,t){n(),p.batchedUpdates(e,t)}function r(e,t){return e._mountDepth-t._mountDepth}function i(){l.sort(r);for(var e=0;e<l.length;e++){var t=l[e];if(t.isMounted()){var n=t._pendingCallbacks;if(t._pendingCallbacks=null,t.performUpdateIfNecessary(),n)for(var o=0;o<n.length;o++)n[o].call(t)}}}function a(){l.length=0}function s(e,t){return c(!t||"function"==typeof t),n(),p.isBatchingUpdates?(l.push(e),void(t&&(e._pendingCallbacks?e._pendingCallbacks.push(t):e._pendingCallbacks=[t]))):(e.performUpdateIfNecessary(),void(t&&t.call(e)))}var u=e("./ReactPerf"),c=e("./invariant"),l=[],p=null,d=u.measure("ReactUpdates","flushBatchedUpdates",function(){try{i()}finally{a()}}),f={injectBatchingStrategy:function(e){c(e),c("function"==typeof e.batchedUpdates),c("boolean"==typeof e.isBatchingUpdates),p=e}},h={batchedUpdates:o,enqueueUpdate:s,flushBatchedUpdates:d,injection:f};t.exports=h},{"./ReactPerf":58,"./invariant":106}],69:[function(e,t){"use strict";function n(e){if("selectionStart"in e&&a.hasSelectionCapabilities(e))return{start:e.selectionStart,end:e.selectionEnd};if(document.selection){var t=document.selection.createRange();return{parentElement:t.parentElement(),text:t.text,top:t.boundingTop,left:t.boundingLeft}}var n=window.getSelection();return{anchorNode:n.anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset}}function o(e){if(!g&&null!=h&&h==u()){var t=n(h);if(!v||!p(v,t)){v=t;var o=s.getPooled(f.select,m,e);return o.type="select",o.target=h,i.accumulateTwoPhaseDispatches(o),o}}}var r=e("./EventConstants"),i=e("./EventPropagators"),a=e("./ReactInputSelection"),s=e("./SyntheticEvent"),u=e("./getActiveElement"),c=e("./isTextInputElement"),l=e("./keyOf"),p=e("./shallowEqual"),d=r.topLevelTypes,f={select:{phasedRegistrationNames:{bubbled:l({onSelect:null}),captured:l({onSelectCapture:null})},dependencies:[d.topBlur,d.topContextMenu,d.topFocus,d.topKeyDown,d.topMouseDown,d.topMouseUp,d.topSelectionChange]}},h=null,m=null,v=null,g=!1,y={eventTypes:f,extractEvents:function(e,t,n,r){switch(e){case d.topFocus:(c(t)||"true"===t.contentEditable)&&(h=t,m=n,v=null);break;case d.topBlur:h=null,m=null,v=null;break;case d.topMouseDown:g=!0;break;case d.topContextMenu:case d.topMouseUp:return g=!1,o(r);case d.topSelectionChange:case d.topKeyDown:case d.topKeyUp:return o(r)}}};t.exports=y},{"./EventConstants":14,"./EventPropagators":19,"./ReactInputSelection":50,"./SyntheticEvent":75,"./getActiveElement":97,"./isTextInputElement":109,"./keyOf":113,"./shallowEqual":122}],70:[function(e,t){"use strict";var n=Math.pow(2,53),o={createReactRootIndex:function(){return Math.ceil(Math.random()*n)}};t.exports=o},{}],71:[function(e,t){"use strict";var n=e("./EventConstants"),o=e("./EventPluginUtils"),r=e("./EventPropagators"),i=e("./SyntheticClipboardEvent"),a=e("./SyntheticEvent"),s=e("./SyntheticFocusEvent"),u=e("./SyntheticKeyboardEvent"),c=e("./SyntheticMouseEvent"),l=e("./SyntheticDragEvent"),p=e("./SyntheticTouchEvent"),d=e("./SyntheticUIEvent"),f=e("./SyntheticWheelEvent"),h=e("./invariant"),m=e("./keyOf"),v=n.topLevelTypes,g={blur:{phasedRegistrationNames:{bubbled:m({onBlur:!0}),captured:m({onBlurCapture:!0})}},click:{phasedRegistrationNames:{bubbled:m({onClick:!0}),captured:m({onClickCapture:!0})}},contextMenu:{phasedRegistrationNames:{bubbled:m({onContextMenu:!0}),captured:m({onContextMenuCapture:!0})}},copy:{phasedRegistrationNames:{bubbled:m({onCopy:!0}),captured:m({onCopyCapture:!0})}},cut:{phasedRegistrationNames:{bubbled:m({onCut:!0}),captured:m({onCutCapture:!0})}},doubleClick:{phasedRegistrationNames:{bubbled:m({onDoubleClick:!0}),captured:m({onDoubleClickCapture:!0})}},drag:{phasedRegistrationNames:{bubbled:m({onDrag:!0}),captured:m({onDragCapture:!0})}},dragEnd:{phasedRegistrationNames:{bubbled:m({onDragEnd:!0}),captured:m({onDragEndCapture:!0})}},dragEnter:{phasedRegistrationNames:{bubbled:m({onDragEnter:!0}),captured:m({onDragEnterCapture:!0})}},dragExit:{phasedRegistrationNames:{bubbled:m({onDragExit:!0}),captured:m({onDragExitCapture:!0})}},dragLeave:{phasedRegistrationNames:{bubbled:m({onDragLeave:!0}),captured:m({onDragLeaveCapture:!0})}},dragOver:{phasedRegistrationNames:{bubbled:m({onDragOver:!0}),captured:m({onDragOverCapture:!0})}},dragStart:{phasedRegistrationNames:{bubbled:m({onDragStart:!0}),captured:m({onDragStartCapture:!0})}},drop:{phasedRegistrationNames:{bubbled:m({onDrop:!0}),captured:m({onDropCapture:!0})}},focus:{phasedRegistrationNames:{bubbled:m({onFocus:!0}),captured:m({onFocusCapture:!0})}},input:{phasedRegistrationNames:{bubbled:m({onInput:!0}),captured:m({onInputCapture:!0})}},keyDown:{phasedRegistrationNames:{bubbled:m({onKeyDown:!0}),captured:m({onKeyDownCapture:!0})}},keyPress:{phasedRegistrationNames:{bubbled:m({onKeyPress:!0}),captured:m({onKeyPressCapture:!0})}},keyUp:{phasedRegistrationNames:{bubbled:m({onKeyUp:!0}),captured:m({onKeyUpCapture:!0})}},load:{phasedRegistrationNames:{bubbled:m({onLoad:!0}),captured:m({onLoadCapture:!0})}},error:{phasedRegistrationNames:{bubbled:m({onError:!0}),captured:m({onErrorCapture:!0})}},mouseDown:{phasedRegistrationNames:{bubbled:m({onMouseDown:!0}),captured:m({onMouseDownCapture:!0})}},mouseMove:{phasedRegistrationNames:{bubbled:m({onMouseMove:!0}),captured:m({onMouseMoveCapture:!0})}},mouseOut:{phasedRegistrationNames:{bubbled:m({onMouseOut:!0}),captured:m({onMouseOutCapture:!0})}},mouseOver:{phasedRegistrationNames:{bubbled:m({onMouseOver:!0}),captured:m({onMouseOverCapture:!0})}},mouseUp:{phasedRegistrationNames:{bubbled:m({onMouseUp:!0}),captured:m({onMouseUpCapture:!0})}},paste:{phasedRegistrationNames:{bubbled:m({onPaste:!0}),captured:m({onPasteCapture:!0})}},reset:{phasedRegistrationNames:{bubbled:m({onReset:!0}),captured:m({onResetCapture:!0})}},scroll:{phasedRegistrationNames:{bubbled:m({onScroll:!0}),captured:m({onScrollCapture:!0})}},submit:{phasedRegistrationNames:{bubbled:m({onSubmit:!0}),captured:m({onSubmitCapture:!0})}},touchCancel:{phasedRegistrationNames:{bubbled:m({onTouchCancel:!0}),captured:m({onTouchCancelCapture:!0})}},touchEnd:{phasedRegistrationNames:{bubbled:m({onTouchEnd:!0}),captured:m({onTouchEndCapture:!0})}},touchMove:{phasedRegistrationNames:{bubbled:m({onTouchMove:!0}),captured:m({onTouchMoveCapture:!0})}},touchStart:{phasedRegistrationNames:{bubbled:m({onTouchStart:!0}),captured:m({onTouchStartCapture:!0})}},wheel:{phasedRegistrationNames:{bubbled:m({onWheel:!0}),captured:m({onWheelCapture:!0})}}},y={topBlur:g.blur,topClick:g.click,topContextMenu:g.contextMenu,topCopy:g.copy,topCut:g.cut,topDoubleClick:g.doubleClick,topDrag:g.drag,topDragEnd:g.dragEnd,topDragEnter:g.dragEnter,topDragExit:g.dragExit,topDragLeave:g.dragLeave,topDragOver:g.dragOver,topDragStart:g.dragStart,topDrop:g.drop,topError:g.error,topFocus:g.focus,topInput:g.input,topKeyDown:g.keyDown,topKeyPress:g.keyPress,topKeyUp:g.keyUp,topLoad:g.load,topMouseDown:g.mouseDown,topMouseMove:g.mouseMove,topMouseOut:g.mouseOut,topMouseOver:g.mouseOver,topMouseUp:g.mouseUp,topPaste:g.paste,topReset:g.reset,topScroll:g.scroll,topSubmit:g.submit,topTouchCancel:g.touchCancel,topTouchEnd:g.touchEnd,topTouchMove:g.touchMove,topTouchStart:g.touchStart,topWheel:g.wheel};for(var C in y)y[C].dependencies=[C];var E={eventTypes:g,executeDispatch:function(e,t,n){var r=o.executeDispatch(e,t,n);r===!1&&(e.stopPropagation(),e.preventDefault())},extractEvents:function(e,t,n,o){var m=y[e];if(!m)return null;var g;switch(e){case v.topInput:case v.topLoad:case v.topError:case v.topReset:case v.topSubmit:g=a;break;case v.topKeyDown:case v.topKeyPress:case v.topKeyUp:g=u;break;case v.topBlur:case v.topFocus:g=s;break;case v.topClick:if(2===o.button)return null;case v.topContextMenu:case v.topDoubleClick:case v.topMouseDown:case v.topMouseMove:case v.topMouseOut:case v.topMouseOver:case v.topMouseUp:g=c;break;case v.topDrag:case v.topDragEnd:case v.topDragEnter:case v.topDragExit:case v.topDragLeave:case v.topDragOver:case v.topDragStart:case v.topDrop:g=l;break;case v.topTouchCancel:case v.topTouchEnd:case v.topTouchMove:case v.topTouchStart:g=p;break;case v.topScroll:g=d;break;case v.topWheel:g=f;break;case v.topCopy:case v.topCut:case v.topPaste:g=i}h(g);var C=g.getPooled(m,n,o);return r.accumulateTwoPhaseDispatches(C),C}};t.exports=E},{"./EventConstants":14,"./EventPluginUtils":18,"./EventPropagators":19,"./SyntheticClipboardEvent":72,"./SyntheticDragEvent":74,"./SyntheticEvent":75,"./SyntheticFocusEvent":76,"./SyntheticKeyboardEvent":77,"./SyntheticMouseEvent":78,"./SyntheticTouchEvent":79,"./SyntheticUIEvent":80,"./SyntheticWheelEvent":81,"./invariant":106,"./keyOf":113}],72:[function(e,t){"use strict";function n(e,t,n){o.call(this,e,t,n)}var o=e("./SyntheticEvent"),r={clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}};o.augmentClass(n,r),t.exports=n},{"./SyntheticEvent":75}],73:[function(e,t){"use strict";function n(e,t,n){o.call(this,e,t,n)}var o=e("./SyntheticEvent"),r={data:null};o.augmentClass(n,r),t.exports=n},{"./SyntheticEvent":75}],74:[function(e,t){"use strict";function n(e,t,n){o.call(this,e,t,n)}var o=e("./SyntheticMouseEvent"),r={dataTransfer:null};o.augmentClass(n,r),t.exports=n},{"./SyntheticMouseEvent":78}],75:[function(e,t){"use strict";function n(e,t,n){this.dispatchConfig=e,this.dispatchMarker=t,this.nativeEvent=n;var o=this.constructor.Interface;for(var i in o)if(o.hasOwnProperty(i)){var a=o[i];this[i]=a?a(n):n[i]}var s=null!=n.defaultPrevented?n.defaultPrevented:n.returnValue===!1;this.isDefaultPrevented=s?r.thatReturnsTrue:r.thatReturnsFalse,this.isPropagationStopped=r.thatReturnsFalse}var o=e("./PooledClass"),r=e("./emptyFunction"),i=e("./getEventTarget"),a=e("./merge"),s=e("./mergeInto"),u={type:null,target:i,currentTarget:r.thatReturnsNull,eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};s(n.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e.preventDefault?e.preventDefault():e.returnValue=!1,this.isDefaultPrevented=r.thatReturnsTrue},stopPropagation:function(){var e=this.nativeEvent;e.stopPropagation?e.stopPropagation():e.cancelBubble=!0,this.isPropagationStopped=r.thatReturnsTrue},persist:function(){this.isPersistent=r.thatReturnsTrue},isPersistent:r.thatReturnsFalse,destructor:function(){var e=this.constructor.Interface;for(var t in e)this[t]=null;this.dispatchConfig=null,this.dispatchMarker=null,this.nativeEvent=null}}),n.Interface=u,n.augmentClass=function(e,t){var n=this,r=Object.create(n.prototype);s(r,e.prototype),e.prototype=r,e.prototype.constructor=e,e.Interface=a(n.Interface,t),e.augmentClass=n.augmentClass,o.addPoolingTo(e,o.threeArgumentPooler)},o.addPoolingTo(n,o.threeArgumentPooler),t.exports=n},{"./PooledClass":23,"./emptyFunction":93,"./getEventTarget":99,"./merge":115,"./mergeInto":117}],76:[function(e,t){"use strict";function n(e,t,n){o.call(this,e,t,n)}var o=e("./SyntheticUIEvent"),r={relatedTarget:null};o.augmentClass(n,r),t.exports=n},{"./SyntheticUIEvent":80}],77:[function(e,t){"use strict";function n(e,t,n){o.call(this,e,t,n)}var o=e("./SyntheticUIEvent"),r=e("./getEventKey"),i={key:r,location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,"char":null,charCode:null,keyCode:null,which:null};o.augmentClass(n,i),t.exports=n},{"./SyntheticUIEvent":80,"./getEventKey":98}],78:[function(e,t){"use strict";function n(e,t,n){o.call(this,e,t,n)}var o=e("./SyntheticUIEvent"),r=e("./ViewportMetrics"),i={screenX:null,screenY:null,clientX:null,clientY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,button:function(e){var t=e.button;return"which"in e?t:2===t?2:4===t?1:0},buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},pageX:function(e){return"pageX"in e?e.pageX:e.clientX+r.currentScrollLeft},pageY:function(e){return"pageY"in e?e.pageY:e.clientY+r.currentScrollTop}};o.augmentClass(n,i),t.exports=n},{"./SyntheticUIEvent":80,"./ViewportMetrics":83}],79:[function(e,t){"use strict";function n(e,t,n){o.call(this,e,t,n)}var o=e("./SyntheticUIEvent"),r={touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null};o.augmentClass(n,r),t.exports=n},{"./SyntheticUIEvent":80}],80:[function(e,t){"use strict";function n(e,t,n){o.call(this,e,t,n)}var o=e("./SyntheticEvent"),r={view:null,detail:null};o.augmentClass(n,r),t.exports=n},{"./SyntheticEvent":75}],81:[function(e,t){"use strict";function n(e,t,n){o.call(this,e,t,n)}var o=e("./SyntheticMouseEvent"),r={deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null};o.augmentClass(n,r),t.exports=n},{"./SyntheticMouseEvent":78}],82:[function(e,t){"use strict";var n=e("./invariant"),o={reinitializeTransaction:function(){this.transactionWrappers=this.getTransactionWrappers(),this.wrapperInitData?this.wrapperInitData.length=0:this.wrapperInitData=[],this.timingMetrics||(this.timingMetrics={}),this.timingMetrics.methodInvocationTime=0,this.timingMetrics.wrapperInitTimes?this.timingMetrics.wrapperInitTimes.length=0:this.timingMetrics.wrapperInitTimes=[],this.timingMetrics.wrapperCloseTimes?this.timingMetrics.wrapperCloseTimes.length=0:this.timingMetrics.wrapperCloseTimes=[],this._isInTransaction=!1},_isInTransaction:!1,getTransactionWrappers:null,isInTransaction:function(){return!!this._isInTransaction},perform:function(e,t,o,r,i,a,s,u){n(!this.isInTransaction());var c,l,p=Date.now();try{this._isInTransaction=!0,c=!0,this.initializeAll(0),l=e.call(t,o,r,i,a,s,u),c=!1}finally{var d=Date.now();this.methodInvocationTime+=d-p;try{if(c)try{this.closeAll(0)}catch(f){}else this.closeAll(0)}finally{this._isInTransaction=!1}}return l},initializeAll:function(e){for(var t=this.transactionWrappers,n=this.timingMetrics.wrapperInitTimes,o=e;o<t.length;o++){var i=Date.now(),a=t[o];try{this.wrapperInitData[o]=r.OBSERVED_ERROR,this.wrapperInitData[o]=a.initialize?a.initialize.call(this):null}finally{var s=n[o],u=Date.now();if(n[o]=(s||0)+(u-i),this.wrapperInitData[o]===r.OBSERVED_ERROR)try{this.initializeAll(o+1)}catch(c){}}}},closeAll:function(e){n(this.isInTransaction());for(var t=this.transactionWrappers,o=this.timingMetrics.wrapperCloseTimes,i=e;i<t.length;i++){var a,s=t[i],u=Date.now(),c=this.wrapperInitData[i];try{a=!0,c!==r.OBSERVED_ERROR&&s.close&&s.close.call(this,c),a=!1}finally{var l=Date.now(),p=o[i];if(o[i]=(p||0)+(l-u),a)try{this.closeAll(i+1)}catch(d){}}}this.wrapperInitData.length=0}},r={Mixin:o,OBSERVED_ERROR:{}};t.exports=r},{"./invariant":106}],83:[function(e,t){"use strict";var n=e("./getUnboundedScrollPosition"),o={currentScrollLeft:0,currentScrollTop:0,refreshScrollValues:function(){var e=n(window);o.currentScrollLeft=e.x,o.currentScrollTop=e.y}};t.exports=o},{"./getUnboundedScrollPosition":104}],84:[function(e,t){"use strict";function n(e,t){if(o(null!=t),null==e)return t;var n=Array.isArray(e),r=Array.isArray(t);return n?e.concat(t):r?[e].concat(t):[e,t]}var o=e("./invariant");
t.exports=n},{"./invariant":106}],85:[function(e,t){"use strict";function n(e){for(var t=1,n=0,r=0;r<e.length;r++)t=(t+e.charCodeAt(r))%o,n=(n+t)%o;return t|n<<16}var o=65521;t.exports=n},{}],86:[function(e,t){function n(e,t){return e&&t?e===t?!0:o(e)?!1:o(t)?n(e,t.parentNode):e.contains?e.contains(t):e.compareDocumentPosition?!!(16&e.compareDocumentPosition(t)):!1:!1}var o=e("./isTextNode");t.exports=n},{"./isTextNode":110}],87:[function(e,t){function n(e,t,n,o,r,i){e=e||{};for(var a,s=[t,n,o,r,i],u=0;s[u];){a=s[u++];for(var c in a)e[c]=a[c];a.hasOwnProperty&&a.hasOwnProperty("toString")&&"undefined"!=typeof a.toString&&e.toString!==a.toString&&(e.toString=a.toString)}return e}t.exports=n},{}],88:[function(e,t){function n(e){return!!e&&("object"==typeof e||"function"==typeof e)&&"length"in e&&!("setInterval"in e)&&"number"!=typeof e.nodeType&&(Array.isArray(e)||"callee"in e||"item"in e)}function o(e){return n(e)?Array.isArray(e)?e.slice():r(e):[e]}var r=e("./toArray");t.exports=o},{"./toArray":124}],89:[function(e,t){"use strict";function n(e){var t=o.createClass({displayName:"ReactFullPageComponent"+(e.componentConstructor.displayName||""),componentWillUnmount:function(){r(!1)},render:function(){return this.transferPropsTo(e(null,this.props.children))}});return t}var o=e("./ReactCompositeComponent"),r=e("./invariant");t.exports=n},{"./ReactCompositeComponent":29,"./invariant":106}],90:[function(e,t){function n(e){var t=e.match(c);return t&&t[1].toLowerCase()}function o(e,t){var o=u;s(!!u);var r=n(e),c=r&&a(r);if(c){o.innerHTML=c[1]+e+c[2];for(var l=c[0];l--;)o=o.lastChild}else o.innerHTML=e;var p=o.getElementsByTagName("script");p.length&&(s(t),i(p).forEach(t));for(var d=i(o.childNodes);o.lastChild;)o.removeChild(o.lastChild);return d}var r=e("./ExecutionEnvironment"),i=e("./createArrayFrom"),a=e("./getMarkupWrap"),s=e("./invariant"),u=r.canUseDOM?document.createElement("div"):null,c=/^\s*<(\w+)/;t.exports=o},{"./ExecutionEnvironment":20,"./createArrayFrom":88,"./getMarkupWrap":100,"./invariant":106}],91:[function(e,t){function n(e,t){var n={},o=Array.isArray(t);"undefined"==typeof t&&(t=!0);for(var r=e.length;r--;)n[e[r]]=o?t[r]:t;return n}t.exports=n},{}],92:[function(e,t){"use strict";function n(e,t){var n=null==t||"boolean"==typeof t||""===t;if(n)return"";var r=isNaN(t);return r||0===t||o.isUnitlessNumber[e]?""+t:t+"px"}var o=e("./CSSProperty");t.exports=n},{"./CSSProperty":2}],93:[function(e,t){function n(e){return function(){return e}}function o(){}var r=e("./copyProperties");r(o,{thatReturns:n,thatReturnsFalse:n(!1),thatReturnsTrue:n(!0),thatReturnsNull:n(null),thatReturnsThis:function(){return this},thatReturnsArgument:function(e){return e}}),t.exports=o},{"./copyProperties":87}],94:[function(e,t){"use strict";function n(e){return r[e]}function o(e){return(""+e).replace(i,n)}var r={"&":"&amp;",">":"&gt;","<":"&lt;",'"':"&quot;","'":"&#x27;","/":"&#x2f;"},i=/[&><"'\/]/g;t.exports=o},{}],95:[function(e,t){"use strict";function n(e,t,n){var o=e;r(!o.hasOwnProperty(n)),null!=t&&(o[n]=t)}function o(e){if(null==e)return e;var t={};return i(e,n,t),t}var r=e("./invariant"),i=e("./traverseAllChildren");t.exports=o},{"./invariant":106,"./traverseAllChildren":125}],96:[function(e,t){"use strict";var n=function(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)};t.exports=n},{}],97:[function(e,t){function n(){try{return document.activeElement||document.body}catch(e){return document.body}}t.exports=n},{}],98:[function(e,t){"use strict";function n(e){return"key"in e?o[e.key]||e.key:r[e.which||e.keyCode]||"Unidentified"}var o={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},r={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"};t.exports=n},{}],99:[function(e,t){"use strict";function n(e){var t=e.target||e.srcElement||window;return 3===t.nodeType?t.parentNode:t}t.exports=n},{}],100:[function(e,t){function n(e){return r(!!i),p.hasOwnProperty(e)||(e="*"),a.hasOwnProperty(e)||(i.innerHTML="*"===e?"<link />":"<"+e+"></"+e+">",a[e]=!i.firstChild),a[e]?p[e]:null}var o=e("./ExecutionEnvironment"),r=e("./invariant"),i=o.canUseDOM?document.createElement("div"):null,a={circle:!0,defs:!0,g:!0,line:!0,linearGradient:!0,path:!0,polygon:!0,polyline:!0,radialGradient:!0,rect:!0,stop:!0,text:!0},s=[1,'<select multiple="true">',"</select>"],u=[1,"<table>","</table>"],c=[3,"<table><tbody><tr>","</tr></tbody></table>"],l=[1,"<svg>","</svg>"],p={"*":[1,"?<div>","</div>"],area:[1,"<map>","</map>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],legend:[1,"<fieldset>","</fieldset>"],param:[1,"<object>","</object>"],tr:[2,"<table><tbody>","</tbody></table>"],optgroup:s,option:s,caption:u,colgroup:u,tbody:u,tfoot:u,thead:u,td:c,th:c,circle:l,defs:l,g:l,line:l,linearGradient:l,path:l,polygon:l,polyline:l,radialGradient:l,rect:l,stop:l,text:l};t.exports=n},{"./ExecutionEnvironment":20,"./invariant":106}],101:[function(e,t){"use strict";function n(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function o(e){for(;e;){if(e.nextSibling)return e.nextSibling;e=e.parentNode}}function r(e,t){for(var r=n(e),i=0,a=0;r;){if(3==r.nodeType){if(a=i+r.textContent.length,t>=i&&a>=t)return{node:r,offset:t-i};i=a}r=n(o(r))}}t.exports=r},{}],102:[function(e,t){"use strict";function n(e){return e?e.nodeType===o?e.documentElement:e.firstChild:null}var o=9;t.exports=n},{}],103:[function(e,t){"use strict";function n(){return!r&&o.canUseDOM&&(r="textContent"in document.createElement("div")?"textContent":"innerText"),r}var o=e("./ExecutionEnvironment"),r=null;t.exports=n},{"./ExecutionEnvironment":20}],104:[function(e,t){"use strict";function n(e){return e===window?{x:window.pageXOffset||document.documentElement.scrollLeft,y:window.pageYOffset||document.documentElement.scrollTop}:{x:e.scrollLeft,y:e.scrollTop}}t.exports=n},{}],105:[function(e,t){function n(e){return e.replace(o,"-$1").toLowerCase()}var o=/([A-Z])/g;t.exports=n},{}],106:[function(e,t){"use strict";var n=function(e){if(!e){var t=new Error("Minified exception occured; use the non-minified dev environment for the full error message and additional helpful warnings.");throw t.framesToPop=1,t}};t.exports=n},{}],107:[function(e,t){"use strict";function n(e,t){if(!r.canUseDOM||t&&!("addEventListener"in document))return!1;var n="on"+e,i=n in document;if(!i){var a=document.createElement("div");a.setAttribute(n,"return;"),i="function"==typeof a[n]}return!i&&o&&"wheel"===e&&(i=document.implementation.hasFeature("Events.wheel","3.0")),i}var o,r=e("./ExecutionEnvironment");r.canUseDOM&&(o=document.implementation&&document.implementation.hasFeature&&document.implementation.hasFeature("","")!==!0),t.exports=n},{"./ExecutionEnvironment":20}],108:[function(e,t){function n(e){return!(!e||!("undefined"!=typeof Node?e instanceof Node:"object"==typeof e&&"number"==typeof e.nodeType&&"string"==typeof e.nodeName))}t.exports=n},{}],109:[function(e,t){"use strict";function n(e){return e&&("INPUT"===e.nodeName&&o[e.type]||"TEXTAREA"===e.nodeName)}var o={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};t.exports=n},{}],110:[function(e,t){function n(e){return o(e)&&3==e.nodeType}var o=e("./isNode");t.exports=n},{"./isNode":108}],111:[function(e,t){"use strict";function n(e){e||(e="");var t,n=arguments.length;if(n>1)for(var o=1;n>o;o++)t=arguments[o],t&&(e+=" "+t);return e}t.exports=n},{}],112:[function(e,t){"use strict";var n=e("./invariant"),o=function(e){var t,o={};n(e instanceof Object&&!Array.isArray(e));for(t in e)e.hasOwnProperty(t)&&(o[t]=t);return o};t.exports=o},{"./invariant":106}],113:[function(e,t){var n=function(e){var t;for(t in e)if(e.hasOwnProperty(t))return t;return null};t.exports=n},{}],114:[function(e,t){"use strict";function n(e){var t={};return function(n){return t.hasOwnProperty(n)?t[n]:t[n]=e.call(this,n)}}t.exports=n},{}],115:[function(e,t){"use strict";var n=e("./mergeInto"),o=function(e,t){var o={};return n(o,e),n(o,t),o};t.exports=o},{"./mergeInto":117}],116:[function(e,t){"use strict";var n=e("./invariant"),o=e("./keyMirror"),r=36,i=function(e){return"object"!=typeof e||null===e},a={MAX_MERGE_DEPTH:r,isTerminal:i,normalizeMergeArg:function(e){return void 0===e||null===e?{}:e},checkMergeArrayArgs:function(e,t){n(Array.isArray(e)&&Array.isArray(t))},checkMergeObjectArgs:function(e,t){a.checkMergeObjectArg(e),a.checkMergeObjectArg(t)},checkMergeObjectArg:function(e){n(!i(e)&&!Array.isArray(e))},checkMergeLevel:function(e){n(r>e)},checkArrayStrategy:function(e){n(void 0===e||e in a.ArrayStrategies)},ArrayStrategies:o({Clobber:!0,IndexByIndex:!0})};t.exports=a},{"./invariant":106,"./keyMirror":112}],117:[function(e,t){"use strict";function n(e,t){if(r(e),null!=t){r(t);for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])}}var o=e("./mergeHelpers"),r=o.checkMergeObjectArg;t.exports=n},{"./mergeHelpers":116}],118:[function(e,t){"use strict";var n=function(e,t){var n;for(n in t)t.hasOwnProperty(n)&&(e.prototype[n]=t[n])};t.exports=n},{}],119:[function(e,t){"use strict";function n(e,t,n){if(!e)return null;var o=0,r={};for(var i in e)e.hasOwnProperty(i)&&(r[i]=t.call(n,e[i],i,o++));return r}t.exports=n},{}],120:[function(e,t){"use strict";function n(e,t,n){if(!e)return null;var o=0,r={};for(var i in e)e.hasOwnProperty(i)&&(r[i]=t.call(n,i,e[i],o++));return r}t.exports=n},{}],121:[function(e,t){"use strict";function n(e){return r(o.isValidComponent(e)),e}var o=e("./ReactComponent"),r=e("./invariant");t.exports=n},{"./ReactComponent":26,"./invariant":106}],122:[function(e,t){"use strict";function n(e,t){if(e===t)return!0;var n;for(n in e)if(e.hasOwnProperty(n)&&(!t.hasOwnProperty(n)||e[n]!==t[n]))return!1;for(n in t)if(t.hasOwnProperty(n)&&!e.hasOwnProperty(n))return!1;return!0}t.exports=n},{}],123:[function(e,t){"use strict";function n(e,t){return e&&t&&e.constructor===t.constructor&&(e.props&&e.props.key)===(t.props&&t.props.key)&&e._owner===t._owner?!0:!1}t.exports=n},{}],124:[function(e,t){function n(e){var t=e.length;if(o(!Array.isArray(e)&&("object"==typeof e||"function"==typeof e)),o("number"==typeof t),o(0===t||t-1 in e),e.hasOwnProperty)try{return Array.prototype.slice.call(e)}catch(n){}for(var r=Array(t),i=0;t>i;i++)r[i]=e[i];return r}var o=e("./invariant");t.exports=n},{"./invariant":106}],125:[function(e,t){"use strict";function n(e){return d[e]}function o(e,t){return e&&e.props&&null!=e.props.key?i(e.props.key):t.toString(36)}function r(e){return(""+e).replace(f,n)}function i(e){return"$"+r(e)}function a(e,t,n){null!==e&&void 0!==e&&h(e,"",0,t,n)}var s=e("./ReactInstanceHandles"),u=e("./ReactTextComponent"),c=e("./invariant"),l=s.SEPARATOR,p=":",d={"=":"=0",".":"=1",":":"=2"},f=/[=.:]/g,h=function(e,t,n,r,a){var s=0;if(Array.isArray(e))for(var d=0;d<e.length;d++){var f=e[d],m=t+(t?p:l)+o(f,d),v=n+s;s+=h(f,m,v,r,a)}else{var g=typeof e,y=""===t,C=y?l+o(e,0):t;if(null==e||"boolean"===g)r(a,null,C,n),s=1;else if(e.mountComponentIntoNode)r(a,e,C,n),s=1;else if("object"===g){c(!e||1!==e.nodeType);for(var E in e)e.hasOwnProperty(E)&&(s+=h(e[E],t+(t?p:l)+i(E)+p+o(e[E],0),n+s,r,a))}else if("string"===g){var M=new u(e);r(a,M,C,n),s+=1}else if("number"===g){var R=new u(""+e);r(a,R,C,n),s+=1}}return s};t.exports=a},{"./ReactInstanceHandles":51,"./ReactTextComponent":67,"./invariant":106}],126:[function(e,t){"use strict";var n=e("./emptyFunction"),o=n;t.exports=o},{"./emptyFunction":93}]},{},[24])(24)});
var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.DEBUG = true;
goog.LOCALE = "en";
goog.TRUSTED_SITE = true;
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name);
};
goog.setTestOnly = function(opt_message) {
  if (COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && !!goog.getObjectByName(name);
  };
  goog.implicitNamespaces_ = {};
}
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if (!COMPILED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if (!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {};
      }
      deps.pathToNames[path][provide] = true;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.ENABLE_DEBUG_LOADER = true;
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return;
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if (goog.global.console) {
      goog.global.console["error"](errorMessage);
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
if (!COMPILED && goog.ENABLE_DEBUG_LOADER) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.writeScriptTag_ = function(src) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true;
    } else {
      return false;
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      if (scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i]);
      } else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && (typeof value.splice != "undefined" && (typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")))) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && (typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call"))) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isDef = function(val) {
  return val !== undefined;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.unshift.apply(newArgs, args);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if (typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for (var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value);
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1));
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.subs = function(str, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var replacement = String(arguments[i]).replace(/\$/g, "$$$$");
    str = str.replace(/\%s/, replacement);
  }
  return str;
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str);
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str));
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && (ch >= " " && ch <= "~") || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return-1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return-1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "\x26amp;").replace(goog.string.ltRe_, "\x26lt;").replace(goog.string.gtRe_, "\x26gt;").replace(goog.string.quotRe_, "\x26quot;");
  } else {
    if (!goog.string.allRe_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.amperRe_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.ltRe_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.gtRe_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "\x26quot;");
    }
    return str;
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /\"/g;
goog.string.allRe_ = /[&<>\"]/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if ("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div = document.createElement("div");
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return'"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.toMap = function(s) {
  var rv = {};
  for (var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true;
  }
  return rv;
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1;
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && (index < s.length && stringLength > 0)) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || (goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]));
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return-1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmpty(str)) {
    return NaN;
  }
  return num;
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    this.stack = (new Error).stack || "";
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.string");
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return(value);
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.NATIVE_ARRAY_PROTOTYPES = goog.TRUSTED_SITE;
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.indexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.lastIndexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.forEach ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.filter ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.map ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = function(arr, f, val, opt_obj) {
  if (arr.reduce) {
    if (opt_obj) {
      return arr.reduce(goog.bind(f, opt_obj), val);
    } else {
      return arr.reduce(f, val);
    }
  }
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = function(arr, f, val, opt_obj) {
  if (arr.reduceRight) {
    if (opt_obj) {
      return arr.reduceRight(goog.bind(f, opt_obj), val);
    } else {
      return arr.reduceRight(f, val);
    }
  }
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.some ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.every ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return[];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if (goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2);
    } else {
      if (isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for (var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j];
        }
      } else {
        arr1.push(arr2);
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv) {
  var returnArray = opt_rv || arr;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.sort.call(arr, opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key]);
  });
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || (!goog.isArrayLike(arr2) || arr1.length != arr2.length)) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare = function(arr1, arr2, opt_equalsFn) {
  return goog.array.equals(arr1, arr2, opt_equalsFn);
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter(value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return[];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element));
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return[];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("cljs.core");
goog.require("goog.array");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.object");
goog.require("goog.string.StringBuffer");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
goog.require("goog.string");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2173";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
cljs.core.pr_opts = function pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", 4338025857), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 4441712502), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1017252215), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 1014004081), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  3960797560), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__20965__delegate = function(args) {
      return console.log.apply(console, cljs.core.into_array.call(null, args));
    };
    var G__20965 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__20965__delegate.call(this, args);
    };
    G__20965.cljs$lang$maxFixedArity = 0;
    G__20965.cljs$lang$applyTo = function(arglist__20966) {
      var args = cljs.core.seq(arglist__20966);
      return G__20965__delegate(args);
    };
    G__20965.cljs$core$IFn$_invoke$arity$variadic = G__20965__delegate;
    return G__20965;
  }();
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array;
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function not(x) {
  if (cljs.core.truth_(x)) {
    return false;
  } else {
    return true;
  }
};
cljs.core.object_QMARK_ = function object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  return goog.isString(x);
};
cljs.core.native_satisfies_QMARK_ = function native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[goog.typeOf(x__$1)]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return false;
      } else {
        return null;
      }
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type.call(null, obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__10317__auto__ = ty;
    if (cljs.core.truth_(and__10317__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__10317__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function type__GT_str(ty) {
  var temp__4090__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4090__auto__)) {
    var s = temp__4090__auto__;
    return s;
  } else {
    return[cljs.core.str(ty)].join("");
  }
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size);
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size);
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array;
}();
cljs.core.aclone = function aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__11177__auto___20967 = len;
  var i_20968 = 0;
  while (true) {
    if (i_20968 < n__11177__auto___20967) {
      new_arr[i_20968] = arr[i_20968];
      var G__20969 = i_20968 + 1;
      i_20968 = G__20969;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments);
};
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i];
  };
  var aget__3 = function() {
    var G__20970__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs);
    };
    var G__20970 = function(array, i, var_args) {
      var idxs = null;
      if (arguments.length > 2) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__20970__delegate.call(this, array, i, idxs);
    };
    G__20970.cljs$lang$maxFixedArity = 2;
    G__20970.cljs$lang$applyTo = function(arglist__20971) {
      var array = cljs.core.first(arglist__20971);
      arglist__20971 = cljs.core.next(arglist__20971);
      var i = cljs.core.first(arglist__20971);
      var idxs = cljs.core.rest(arglist__20971);
      return G__20970__delegate(array, i, idxs);
    };
    G__20970.cljs$core$IFn$_invoke$arity$variadic = G__20970__delegate;
    return G__20970;
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget;
}();
cljs.core.aset = function() {
  var aset = null;
  var aset__3 = function(array, i, val) {
    return array[i] = val;
  };
  var aset__4 = function() {
    var G__20972__delegate = function(array, idx, idx2, idxv) {
      return cljs.core.apply.call(null, aset, array[idx], idx2, idxv);
    };
    var G__20972 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if (arguments.length > 3) {
        idxv = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__20972__delegate.call(this, array, idx, idx2, idxv);
    };
    G__20972.cljs$lang$maxFixedArity = 3;
    G__20972.cljs$lang$applyTo = function(arglist__20973) {
      var array = cljs.core.first(arglist__20973);
      arglist__20973 = cljs.core.next(arglist__20973);
      var idx = cljs.core.first(arglist__20973);
      arglist__20973 = cljs.core.next(arglist__20973);
      var idx2 = cljs.core.first(arglist__20973);
      var idxv = cljs.core.rest(arglist__20973);
      return G__20972__delegate(array, idx, idx2, idxv);
    };
    G__20972.cljs$core$IFn$_invoke$arity$variadic = G__20972__delegate;
    return G__20972;
  }();
  aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return aset__3.call(this, array, idx, idx2);
      default:
        return aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset.cljs$lang$maxFixedArity = 3;
  aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
  aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
  aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return aset;
}();
cljs.core.alength = function alength(array) {
  return array.length;
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq);
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a;
    }, [], aseq);
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array;
}();
cljs.core.Fn = function() {
  var obj20975 = {};
  return obj20975;
}();
cljs.core.IFn = function() {
  var obj20977 = {};
  return obj20977;
}();
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if (function() {
      var and__10317__auto__ = this$;
      if (and__10317__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1;
      } else {
        return and__10317__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$);
    } else {
      var x__10956__auto__ = this$ == null ? null : this$;
      return function() {
        var or__10329__auto__ = cljs.core._invoke[goog.typeOf(x__10956__auto__)];
        if (or__10329__auto__) {
          return or__10329__auto__;
        } else {
          var or__10329__auto____$1 = cljs.core._invoke["_"];
          if (or__10329__auto____$1) {
            return or__10329__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _invoke__2 = function(this$, a) {
    if (function() {
      var and__10317__auto__ = this$;
      if (and__10317__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2;
      } else {
        return and__10317__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
    } else {
      var x__10956__auto__ = this$ == null ? null : this$;
      return function() {
        var or__10329__auto__ = cljs.core._invoke[goog.typeOf(x__10956__auto__)];
        if (or__10329__auto__) {
          return or__10329__auto__;
        } else {
          var or__10329__auto____$1 = cljs.core._invoke["_"];
          if (or__10329__auto____$1) {
            return or__10329__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a);
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if (function() {
      var and__10317__auto__ = this$;
      if (and__10317__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3;
      } else {
        return and__10317__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
    } else {
      var x__10956__auto__ = this$ == null ? null : this$;
      return function() {
        var or__10329__auto__ = cljs.core._invoke[goog.typeOf(x__10956__auto__)];
        if (or__10329__auto__) {
          return or__10329__auto__;
        } else {
          var or__10329__auto____$1 = cljs.core._invoke["_"];
          if (or__10329__auto____$1) {
            return or__10329__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b);
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if (function() {
      var and__10317__auto__ = this$;
      if (and__10317__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4;
      } else {
        return and__10317__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
    } else {
      var x__10956__auto__ = this$ == null ? null : this$;
      return function() {
        var or__10329__auto__ = cljs.core._invoke[goog.typeOf(x__10956__auto__)];
        if (or__10329__auto__) {
          return or__10329__auto__;
        } else {
          var or__10329__auto____$1 = cljs.core._invoke["_"];
          if (or__10329__auto____$1) {
            return or__10329__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c);
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if (function() {
      var and__10317__auto__ = this$;
      if (and__10317__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5;
      } else {
        return and__10317__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
    } else {
      var x__10956__auto__ = this$ == null ? null : this$;
      return function() {
        var or__10329__auto__ = cljs.core._invoke[goog.typeOf(x__10956__auto__)];
        if (or__10329__auto__) {
          return or__10329__auto__;
        } else {
          var or__10329__auto____$1 = cljs.core._invoke["_"];
          if (or__10329__auto____$1) {
            return or__10329__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d);
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if (function() {
      var and__10317__auto__ = this$;
      if (and__10317__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6;
      } else {
        return and__10317__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
    } else {
      var x__10956__auto__ = this$ == null ? null : this$;
      return function() {
        var or__10329__auto__ = cljs.core._invoke[goog.typeOf(x__10956__auto__)];
        if (or__10329__auto__) {
          return or__10329__auto__;
        } else {
          var or__10329__auto____$1 = cljs.core._invoke["_"];
          if (or__10329__auto____$1) {
            return or__10329__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e);
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if (function() {
      var and__10317__auto__ = this$;
      if (and__10317__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7;
      } else {
        return and__10317__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
    } else {
      var x__10956__auto__ = this$ == null ? null : this$;
      return function() {
        var or__10329__auto__ = cljs.core._invoke[goog.typeOf(x__10956__auto__)];
        if (or__10329__auto__) {
          return or__10329__auto__;
        } else {
          var or__10329__auto____$1 = cljs.core._invoke["_"];
          if (or__10329__auto____$1) {
            return or__10329__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f);
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if (function() {
      var and__10317__auto__ = this$;
      if (and__10317__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8;
      } else {
        return and__10317__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
    } else {
      var x__10956__auto__ = this$ == null ? null : this$;
      return function() {
        var or__10329__auto__ = cljs.core._invoke[goog.typeOf(x__10956__auto__)];
        if (or__10329__auto__) {
          return or__10329__auto__;
        } else {
          var or__10329__auto____$1 = cljs.core._invoke["_"];
          if (or__10329__auto____$1) {
            return or__10329__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g);
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if (function() {
      var and__10317__auto__ = this$;
      if (and__10317__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9;
      } else {
        return and__10317__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
    } else {
      var x__10956__auto__ = this$ == null ? null : this$;
      return function() {
        var or__10329__auto__ = cljs.core._invoke[goog.typeOf(x__10956__auto__)];
        if (or__10329__auto__) {
          return or__10329__auto__;
        } else {
          var or__10329__auto____$1 = cljs.core._invoke["_"];
          if (or__10329__auto____$1) {
            return or__10329__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h);
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if (function() {
      var and__10317__auto__ = this$;
      if (and__10317__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10;
      } else {
        return and__10317__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
    } else {
      var x__10956__auto__ = this$ == null ? null : this$;
      return function() {
        var or__10329__auto__ = cljs.core._invoke[goog.typeOf(x__10956__auto__)];
        if (or__10329__auto__) {
          return or__10329__auto__;
        } else {
          var or__10329__auto____$1 = cljs.core._invoke["_"];
          if (or__10329__auto____$1) {
            return or__10329__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i);
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if (function() {
      var and__10317__auto__ = this$;
      if (and__10317__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11;
      } else {
        return and__10317__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var x__10956__auto__ = this$ == null ? null : this$;
      return function() {
        var or__10329__auto__ = cljs.core._invoke[goog.typeOf(x__10956__auto__)];
        if (or__10329__auto__) {
          return or__10329__auto__;
        } else {
          var or__10329__auto____$1 = cljs.core._invoke["_"];
          if (or__10329__auto____$1) {
            return or__10329__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j);
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if (function() {
      var and__10317__auto__ = this$;
      if (and__10317__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12;
      } else {
        return and__10317__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var x__10956__auto__ = this$ == null ? null : this$;
      return function() {
        var or__10329__auto__ = cljs.core._invoke[goog.typeOf(x__10956__auto__)];
        if (or__10329__auto__) {
          return or__10329__auto__;
        } else {
          var or__10329__auto____$1 = cljs.core._invoke["_"];
          if (or__10329__auto____$1) {
            return or__10329__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if (function() {
      var and__10317__auto__ = this$;
      if (and__10317__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13;
      } else {
        return and__10317__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var x__10956__auto__ = this$ == null ? null : this$;
      return function() {
        var or__10329__auto__ = cljs.core._invoke[goog.typeOf(x__10956__auto__)];
        if (or__10329__auto__) {
          return or__10329__auto__;
        } else {
          var or__10329__auto____$1 = cljs.core._invoke["_"];
          if (or__10329__auto____$1) {
            return or__10329__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if (function() {
      var and__10317__auto__ = this$;
      if (and__10317__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14;
      } else {
        return and__10317__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var x__10956__auto__ = this$ == null ? null : this$;
      return function() {
        var or__10329__auto__ = cljs.core._invoke[goog.typeOf(x__10956__auto__)];
        if (or__10329__auto__) {
          return or__10329__auto__;
        } else {
          var or__10329__auto____$1 = cljs.core._invoke["_"];
          if (or__10329__auto____$1) {
            return or__10329__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if (function() {
      var and__10317__auto__ = this$;
      if (and__10317__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15;
      } else {
        return and__10317__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var x__10956__auto__ = this$ == null ? null : this$;
      return function() {
        var or__10329__auto__ = cljs.core._invoke[goog.typeOf(x__10956__auto__)];
        if (or__10329__auto__) {
          return or__10329__auto__;
        } else {
          var or__10329__auto____$1 = cljs.core._invoke["_"];
          if (or__10329__auto____$1) {
            return or__10329__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if (function() {
      var and__10317__auto__ = this$;
      if (and__10317__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16;
      } else {
        return and__10317__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var x__10956__auto__ = this$ == null ? null : this$;
      return function() {
        var or__10329__auto__ = cljs.core._invoke[goog.typeOf(x__10956__auto__)];
        if (or__10329__auto__) {
          return or__10329__auto__;
        } else {
          var or__10329__auto____$1 = cljs.core._invoke["_"];
          if (or__10329__auto____$1) {
            return or__10329__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if (function() {
      var and__10317__auto__ = this$;
      if (and__10317__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17;
      } else {
        return and__10317__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var x__10956__auto__ = this$ == null ? null : this$;
      return function() {
        var or__10329__auto__ = cljs.core._invoke[goog.typeOf(x__10956__auto__)];
        if (or__10329__auto__) {
          return or__10329__auto__;
        } else {
          var or__10329__auto____$1 = cljs.core._invoke["_"];
          if (or__10329__auto____$1) {
            return or__10329__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if (function() {
      var and__10317__auto__ = this$;
      if (and__10317__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18;
      } else {
        return and__10317__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var x__10956__auto__ = this$ == null ? null : this$;
      return function() {
        var or__10329__auto__ = cljs.core._invoke[goog.typeOf(x__10956__auto__)];
        if (or__10329__auto__) {
          return or__10329__auto__;
        } else {
          var or__10329__auto____$1 = cljs.core._invoke["_"];
          if (or__10329__auto____$1) {
            return or__10329__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if (function() {
      var and__10317__auto__ = this$;
      if (and__10317__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19;
      } else {
        return and__10317__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
    } else {
      var x__10956__auto__ = this$ == null ? null : this$;
      return function() {
        var or__10329__auto__ = cljs.core._invoke[goog.typeOf(x__10956__auto__)];
        if (or__10329__auto__) {
          return or__10329__auto__;
        } else {
          var or__10329__auto____$1 = cljs.core._invoke["_"];
          if (or__10329__auto____$1) {
            return or__10329__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if (function() {
      var and__10317__auto__ = this$;
      if (and__10317__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20;
      } else {
        return and__10317__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
    } else {
      var x__10956__auto__ = this$ == null ? null : this$;
      return function() {
        var or__10329__auto__ = cljs.core._invoke[goog.typeOf(x__10956__auto__)];
        if (or__10329__auto__) {
          return or__10329__auto__;
        } else {
          var or__10329__auto____$1 = cljs.core._invoke["_"];
          if (or__10329__auto____$1) {
            return or__10329__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if (function() {
      var and__10317__auto__ = this$;
      if (and__10317__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21;
      } else {
        return and__10317__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    } else {
      var x__10956__auto__ = this$ == null ? null : this$;
      return function() {
        var or__10329__auto__ = cljs.core._invoke[goog.typeOf(x__10956__auto__)];
        if (or__10329__auto__) {
          return or__10329__auto__;
        } else {
          var or__10329__auto____$1 = cljs.core._invoke["_"];
          if (or__10329__auto____$1) {
            return or__10329__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  return _invoke;
}();
cljs.core.ICloneable = function() {
  var obj20979 = {};
  return obj20979;
}();
cljs.core._clone = function _clone(value) {
  if (function() {
    var and__10317__auto__ = value;
    if (and__10317__auto__) {
      return value.cljs$core$ICloneable$_clone$arity$1;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__10956__auto__ = value == null ? null : value;
    return function() {
      var or__10329__auto__ = cljs.core._clone[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._clone["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICloneable.-clone", value);
        }
      }
    }().call(null, value);
  }
};
cljs.core.ICounted = function() {
  var obj20981 = {};
  return obj20981;
}();
cljs.core._count = function _count(coll) {
  if (function() {
    var and__10317__auto__ = coll;
    if (and__10317__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__10956__auto__ = coll == null ? null : coll;
    return function() {
      var or__10329__auto__ = cljs.core._count[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._count["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IEmptyableCollection = function() {
  var obj20983 = {};
  return obj20983;
}();
cljs.core._empty = function _empty(coll) {
  if (function() {
    var and__10317__auto__ = coll;
    if (and__10317__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__10956__auto__ = coll == null ? null : coll;
    return function() {
      var or__10329__auto__ = cljs.core._empty[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._empty["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ICollection = function() {
  var obj20985 = {};
  return obj20985;
}();
cljs.core._conj = function _conj(coll, o) {
  if (function() {
    var and__10317__auto__ = coll;
    if (and__10317__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__10956__auto__ = coll == null ? null : coll;
    return function() {
      var or__10329__auto__ = cljs.core._conj[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._conj["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o);
  }
};
cljs.core.IIndexed = function() {
  var obj20987 = {};
  return obj20987;
}();
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if (function() {
      var and__10317__auto__ = coll;
      if (and__10317__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2;
      } else {
        return and__10317__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
    } else {
      var x__10956__auto__ = coll == null ? null : coll;
      return function() {
        var or__10329__auto__ = cljs.core._nth[goog.typeOf(x__10956__auto__)];
        if (or__10329__auto__) {
          return or__10329__auto__;
        } else {
          var or__10329__auto____$1 = cljs.core._nth["_"];
          if (or__10329__auto____$1) {
            return or__10329__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n);
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if (function() {
      var and__10317__auto__ = coll;
      if (and__10317__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3;
      } else {
        return and__10317__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
    } else {
      var x__10956__auto__ = coll == null ? null : coll;
      return function() {
        var or__10329__auto__ = cljs.core._nth[goog.typeOf(x__10956__auto__)];
        if (or__10329__auto__) {
          return or__10329__auto__;
        } else {
          var or__10329__auto____$1 = cljs.core._nth["_"];
          if (or__10329__auto____$1) {
            return or__10329__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found);
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth;
}();
cljs.core.ASeq = function() {
  var obj20989 = {};
  return obj20989;
}();
cljs.core.ISeq = function() {
  var obj20991 = {};
  return obj20991;
}();
cljs.core._first = function _first(coll) {
  if (function() {
    var and__10317__auto__ = coll;
    if (and__10317__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__10956__auto__ = coll == null ? null : coll;
    return function() {
      var or__10329__auto__ = cljs.core._first[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._first["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._rest = function _rest(coll) {
  if (function() {
    var and__10317__auto__ = coll;
    if (and__10317__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__10956__auto__ = coll == null ? null : coll;
    return function() {
      var or__10329__auto__ = cljs.core._rest[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._rest["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INext = function() {
  var obj20993 = {};
  return obj20993;
}();
cljs.core._next = function _next(coll) {
  if (function() {
    var and__10317__auto__ = coll;
    if (and__10317__auto__) {
      return coll.cljs$core$INext$_next$arity$1;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__10956__auto__ = coll == null ? null : coll;
    return function() {
      var or__10329__auto__ = cljs.core._next[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._next["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ILookup = function() {
  var obj20995 = {};
  return obj20995;
}();
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if (function() {
      var and__10317__auto__ = o;
      if (and__10317__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2;
      } else {
        return and__10317__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k);
    } else {
      var x__10956__auto__ = o == null ? null : o;
      return function() {
        var or__10329__auto__ = cljs.core._lookup[goog.typeOf(x__10956__auto__)];
        if (or__10329__auto__) {
          return or__10329__auto__;
        } else {
          var or__10329__auto____$1 = cljs.core._lookup["_"];
          if (or__10329__auto____$1) {
            return or__10329__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k);
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if (function() {
      var and__10317__auto__ = o;
      if (and__10317__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3;
      } else {
        return and__10317__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
    } else {
      var x__10956__auto__ = o == null ? null : o;
      return function() {
        var or__10329__auto__ = cljs.core._lookup[goog.typeOf(x__10956__auto__)];
        if (or__10329__auto__) {
          return or__10329__auto__;
        } else {
          var or__10329__auto____$1 = cljs.core._lookup["_"];
          if (or__10329__auto____$1) {
            return or__10329__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found);
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup;
}();
cljs.core.IAssociative = function() {
  var obj20997 = {};
  return obj20997;
}();
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if (function() {
    var and__10317__auto__ = coll;
    if (and__10317__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__10956__auto__ = coll == null ? null : coll;
    return function() {
      var or__10329__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if (function() {
    var and__10317__auto__ = coll;
    if (and__10317__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__10956__auto__ = coll == null ? null : coll;
    return function() {
      var or__10329__auto__ = cljs.core._assoc[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._assoc["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v);
  }
};
cljs.core.IMap = function() {
  var obj20999 = {};
  return obj20999;
}();
cljs.core._dissoc = function _dissoc(coll, k) {
  if (function() {
    var and__10317__auto__ = coll;
    if (and__10317__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__10956__auto__ = coll == null ? null : coll;
    return function() {
      var or__10329__auto__ = cljs.core._dissoc[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._dissoc["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core.IMapEntry = function() {
  var obj21001 = {};
  return obj21001;
}();
cljs.core._key = function _key(coll) {
  if (function() {
    var and__10317__auto__ = coll;
    if (and__10317__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__10956__auto__ = coll == null ? null : coll;
    return function() {
      var or__10329__auto__ = cljs.core._key[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._key["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._val = function _val(coll) {
  if (function() {
    var and__10317__auto__ = coll;
    if (and__10317__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__10956__auto__ = coll == null ? null : coll;
    return function() {
      var or__10329__auto__ = cljs.core._val[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._val["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISet = function() {
  var obj21003 = {};
  return obj21003;
}();
cljs.core._disjoin = function _disjoin(coll, v) {
  if (function() {
    var and__10317__auto__ = coll;
    if (and__10317__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__10956__auto__ = coll == null ? null : coll;
    return function() {
      var or__10329__auto__ = cljs.core._disjoin[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._disjoin["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v);
  }
};
cljs.core.IStack = function() {
  var obj21005 = {};
  return obj21005;
}();
cljs.core._peek = function _peek(coll) {
  if (function() {
    var and__10317__auto__ = coll;
    if (and__10317__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__10956__auto__ = coll == null ? null : coll;
    return function() {
      var or__10329__auto__ = cljs.core._peek[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._peek["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._pop = function _pop(coll) {
  if (function() {
    var and__10317__auto__ = coll;
    if (and__10317__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__10956__auto__ = coll == null ? null : coll;
    return function() {
      var or__10329__auto__ = cljs.core._pop[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._pop["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IVector = function() {
  var obj21007 = {};
  return obj21007;
}();
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if (function() {
    var and__10317__auto__ = coll;
    if (and__10317__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__10956__auto__ = coll == null ? null : coll;
    return function() {
      var or__10329__auto__ = cljs.core._assoc_n[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._assoc_n["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val);
  }
};
cljs.core.IDeref = function() {
  var obj21009 = {};
  return obj21009;
}();
cljs.core._deref = function _deref(o) {
  if (function() {
    var and__10317__auto__ = o;
    if (and__10317__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__10956__auto__ = o == null ? null : o;
    return function() {
      var or__10329__auto__ = cljs.core._deref[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._deref["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IDerefWithTimeout = function() {
  var obj21011 = {};
  return obj21011;
}();
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if (function() {
    var and__10317__auto__ = o;
    if (and__10317__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__10956__auto__ = o == null ? null : o;
    return function() {
      var or__10329__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._deref_with_timeout["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val);
  }
};
cljs.core.IMeta = function() {
  var obj21013 = {};
  return obj21013;
}();
cljs.core._meta = function _meta(o) {
  if (function() {
    var and__10317__auto__ = o;
    if (and__10317__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__10956__auto__ = o == null ? null : o;
    return function() {
      var or__10329__auto__ = cljs.core._meta[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._meta["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IWithMeta = function() {
  var obj21015 = {};
  return obj21015;
}();
cljs.core._with_meta = function _with_meta(o, meta) {
  if (function() {
    var and__10317__auto__ = o;
    if (and__10317__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__10956__auto__ = o == null ? null : o;
    return function() {
      var or__10329__auto__ = cljs.core._with_meta[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._with_meta["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta);
  }
};
cljs.core.IReduce = function() {
  var obj21017 = {};
  return obj21017;
}();
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if (function() {
      var and__10317__auto__ = coll;
      if (and__10317__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2;
      } else {
        return and__10317__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
    } else {
      var x__10956__auto__ = coll == null ? null : coll;
      return function() {
        var or__10329__auto__ = cljs.core._reduce[goog.typeOf(x__10956__auto__)];
        if (or__10329__auto__) {
          return or__10329__auto__;
        } else {
          var or__10329__auto____$1 = cljs.core._reduce["_"];
          if (or__10329__auto____$1) {
            return or__10329__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f);
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if (function() {
      var and__10317__auto__ = coll;
      if (and__10317__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3;
      } else {
        return and__10317__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
    } else {
      var x__10956__auto__ = coll == null ? null : coll;
      return function() {
        var or__10329__auto__ = cljs.core._reduce[goog.typeOf(x__10956__auto__)];
        if (or__10329__auto__) {
          return or__10329__auto__;
        } else {
          var or__10329__auto____$1 = cljs.core._reduce["_"];
          if (or__10329__auto____$1) {
            return or__10329__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start);
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce;
}();
cljs.core.IKVReduce = function() {
  var obj21019 = {};
  return obj21019;
}();
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if (function() {
    var and__10317__auto__ = coll;
    if (and__10317__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__10956__auto__ = coll == null ? null : coll;
    return function() {
      var or__10329__auto__ = cljs.core._kv_reduce[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._kv_reduce["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init);
  }
};
cljs.core.IEquiv = function() {
  var obj21021 = {};
  return obj21021;
}();
cljs.core._equiv = function _equiv(o, other) {
  if (function() {
    var and__10317__auto__ = o;
    if (and__10317__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__10956__auto__ = o == null ? null : o;
    return function() {
      var or__10329__auto__ = cljs.core._equiv[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._equiv["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other);
  }
};
cljs.core.IHash = function() {
  var obj21023 = {};
  return obj21023;
}();
cljs.core._hash = function _hash(o) {
  if (function() {
    var and__10317__auto__ = o;
    if (and__10317__auto__) {
      return o.cljs$core$IHash$_hash$arity$1;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__10956__auto__ = o == null ? null : o;
    return function() {
      var or__10329__auto__ = cljs.core._hash[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._hash["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISeqable = function() {
  var obj21025 = {};
  return obj21025;
}();
cljs.core._seq = function _seq(o) {
  if (function() {
    var and__10317__auto__ = o;
    if (and__10317__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__10956__auto__ = o == null ? null : o;
    return function() {
      var or__10329__auto__ = cljs.core._seq[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._seq["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISequential = function() {
  var obj21027 = {};
  return obj21027;
}();
cljs.core.IList = function() {
  var obj21029 = {};
  return obj21029;
}();
cljs.core.IRecord = function() {
  var obj21031 = {};
  return obj21031;
}();
cljs.core.IReversible = function() {
  var obj21033 = {};
  return obj21033;
}();
cljs.core._rseq = function _rseq(coll) {
  if (function() {
    var and__10317__auto__ = coll;
    if (and__10317__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__10956__auto__ = coll == null ? null : coll;
    return function() {
      var or__10329__auto__ = cljs.core._rseq[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._rseq["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISorted = function() {
  var obj21035 = {};
  return obj21035;
}();
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if (function() {
    var and__10317__auto__ = coll;
    if (and__10317__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__10956__auto__ = coll == null ? null : coll;
    return function() {
      var or__10329__auto__ = cljs.core._sorted_seq[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._sorted_seq["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_);
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if (function() {
    var and__10317__auto__ = coll;
    if (and__10317__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__10956__auto__ = coll == null ? null : coll;
    return function() {
      var or__10329__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._sorted_seq_from["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_);
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if (function() {
    var and__10317__auto__ = coll;
    if (and__10317__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__10956__auto__ = coll == null ? null : coll;
    return function() {
      var or__10329__auto__ = cljs.core._entry_key[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._entry_key["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry);
  }
};
cljs.core._comparator = function _comparator(coll) {
  if (function() {
    var and__10317__auto__ = coll;
    if (and__10317__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__10956__auto__ = coll == null ? null : coll;
    return function() {
      var or__10329__auto__ = cljs.core._comparator[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._comparator["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IWriter = function() {
  var obj21037 = {};
  return obj21037;
}();
cljs.core._write = function _write(writer, s) {
  if (function() {
    var and__10317__auto__ = writer;
    if (and__10317__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__10956__auto__ = writer == null ? null : writer;
    return function() {
      var or__10329__auto__ = cljs.core._write[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._write["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-write", writer);
        }
      }
    }().call(null, writer, s);
  }
};
cljs.core._flush = function _flush(writer) {
  if (function() {
    var and__10317__auto__ = writer;
    if (and__10317__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__10956__auto__ = writer == null ? null : writer;
    return function() {
      var or__10329__auto__ = cljs.core._flush[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._flush["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-flush", writer);
        }
      }
    }().call(null, writer);
  }
};
cljs.core.IPrintWithWriter = function() {
  var obj21039 = {};
  return obj21039;
}();
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if (function() {
    var and__10317__auto__ = o;
    if (and__10317__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__10956__auto__ = o == null ? null : o;
    return function() {
      var or__10329__auto__ = cljs.core._pr_writer[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._pr_writer["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts);
  }
};
cljs.core.IPending = function() {
  var obj21041 = {};
  return obj21041;
}();
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if (function() {
    var and__10317__auto__ = d;
    if (and__10317__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__10956__auto__ = d == null ? null : d;
    return function() {
      var or__10329__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._realized_QMARK_["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d);
  }
};
cljs.core.IWatchable = function() {
  var obj21043 = {};
  return obj21043;
}();
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if (function() {
    var and__10317__auto__ = this$;
    if (and__10317__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__10956__auto__ = this$ == null ? null : this$;
    return function() {
      var or__10329__auto__ = cljs.core._notify_watches[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._notify_watches["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval);
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if (function() {
    var and__10317__auto__ = this$;
    if (and__10317__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__10956__auto__ = this$ == null ? null : this$;
    return function() {
      var or__10329__auto__ = cljs.core._add_watch[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._add_watch["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f);
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if (function() {
    var and__10317__auto__ = this$;
    if (and__10317__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__10956__auto__ = this$ == null ? null : this$;
    return function() {
      var or__10329__auto__ = cljs.core._remove_watch[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._remove_watch["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key);
  }
};
cljs.core.IEditableCollection = function() {
  var obj21045 = {};
  return obj21045;
}();
cljs.core._as_transient = function _as_transient(coll) {
  if (function() {
    var and__10317__auto__ = coll;
    if (and__10317__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__10956__auto__ = coll == null ? null : coll;
    return function() {
      var or__10329__auto__ = cljs.core._as_transient[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._as_transient["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ITransientCollection = function() {
  var obj21047 = {};
  return obj21047;
}();
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if (function() {
    var and__10317__auto__ = tcoll;
    if (and__10317__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__10956__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__10329__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._conj_BANG_["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val);
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if (function() {
    var and__10317__auto__ = tcoll;
    if (and__10317__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__10956__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__10329__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._persistent_BANG_["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientAssociative = function() {
  var obj21049 = {};
  return obj21049;
}();
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if (function() {
    var and__10317__auto__ = tcoll;
    if (and__10317__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__10956__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__10329__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._assoc_BANG_["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val);
  }
};
cljs.core.ITransientMap = function() {
  var obj21051 = {};
  return obj21051;
}();
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if (function() {
    var and__10317__auto__ = tcoll;
    if (and__10317__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__10956__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__10329__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key);
  }
};
cljs.core.ITransientVector = function() {
  var obj21053 = {};
  return obj21053;
}();
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if (function() {
    var and__10317__auto__ = tcoll;
    if (and__10317__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__10956__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__10329__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val);
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if (function() {
    var and__10317__auto__ = tcoll;
    if (and__10317__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__10956__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__10329__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._pop_BANG_["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientSet = function() {
  var obj21055 = {};
  return obj21055;
}();
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if (function() {
    var and__10317__auto__ = tcoll;
    if (and__10317__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__10956__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__10329__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v);
  }
};
cljs.core.IComparable = function() {
  var obj21057 = {};
  return obj21057;
}();
cljs.core._compare = function _compare(x, y) {
  if (function() {
    var and__10317__auto__ = x;
    if (and__10317__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__10956__auto__ = x == null ? null : x;
    return function() {
      var or__10329__auto__ = cljs.core._compare[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._compare["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y);
  }
};
cljs.core.IChunk = function() {
  var obj21059 = {};
  return obj21059;
}();
cljs.core._drop_first = function _drop_first(coll) {
  if (function() {
    var and__10317__auto__ = coll;
    if (and__10317__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__10956__auto__ = coll == null ? null : coll;
    return function() {
      var or__10329__auto__ = cljs.core._drop_first[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._drop_first["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedSeq = function() {
  var obj21061 = {};
  return obj21061;
}();
cljs.core._chunked_first = function _chunked_first(coll) {
  if (function() {
    var and__10317__auto__ = coll;
    if (and__10317__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__10956__auto__ = coll == null ? null : coll;
    return function() {
      var or__10329__auto__ = cljs.core._chunked_first[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._chunked_first["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if (function() {
    var and__10317__auto__ = coll;
    if (and__10317__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__10956__auto__ = coll == null ? null : coll;
    return function() {
      var or__10329__auto__ = cljs.core._chunked_rest[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._chunked_rest["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedNext = function() {
  var obj21063 = {};
  return obj21063;
}();
cljs.core._chunked_next = function _chunked_next(coll) {
  if (function() {
    var and__10317__auto__ = coll;
    if (and__10317__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__10956__auto__ = coll == null ? null : coll;
    return function() {
      var or__10329__auto__ = cljs.core._chunked_next[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._chunked_next["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INamed = function() {
  var obj21065 = {};
  return obj21065;
}();
cljs.core._name = function _name(x) {
  if (function() {
    var and__10317__auto__ = x;
    if (and__10317__auto__) {
      return x.cljs$core$INamed$_name$arity$1;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__10956__auto__ = x == null ? null : x;
    return function() {
      var or__10329__auto__ = cljs.core._name[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._name["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-name", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._namespace = function _namespace(x) {
  if (function() {
    var and__10317__auto__ = x;
    if (and__10317__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__10956__auto__ = x == null ? null : x;
    return function() {
      var or__10329__auto__ = cljs.core._namespace[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._namespace["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-namespace", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__10896__auto__, writer__10897__auto__, opt__10898__auto__) {
  return cljs.core._write.call(null, writer__10897__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.__GT_StringBufferWriter = function __GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core._pr_writer.call(null, obj, writer, cljs.core.pr_opts.call(null));
  cljs.core._flush.call(null, writer);
  return[cljs.core.str(sb)].join("");
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function hash_symbol(sym) {
  return cljs.core.hash_combine.call(null, cljs.core.hash.call(null, sym.ns), cljs.core.hash.call(null, sym.name));
};
cljs.core.compare_symbols = function compare_symbols(a, b) {
  if (cljs.core.truth_(cljs.core._EQ_.call(null, a, b))) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__10317__auto__ = cljs.core.not.call(null, a.ns);
      if (and__10317__auto__) {
        return b.ns;
      } else {
        return and__10317__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not.call(null, b.ns)) {
          return 1;
        } else {
          var nsc = cljs.core.compare.call(null, a.ns, b.ns);
          if (nsc === 0) {
            return cljs.core.compare.call(null, a.name, b.name);
          } else {
            return nsc;
          }
        }
      } else {
        if (new cljs.core.Keyword(null, "default", "default", 2558708147)) {
          return cljs.core.compare.call(null, a.name, b.name);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__10896__auto__, writer__10897__auto__, opt__10898__auto__) {
  return cljs.core._write.call(null, writer__10897__auto__, "cljs.core/Symbol");
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, self__.str);
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__10740__auto__ = self__._hash;
  if (!(h__10740__auto__ == null)) {
    return h__10740__auto__;
  } else {
    var h__10740__auto____$1 = cljs.core.hash_symbol.call(null, sym__$1);
    self__._hash = h__10740__auto____$1;
    return h__10740__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.call = function() {
  var G__21067 = null;
  var G__21067__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, null);
  };
  var G__21067__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, not_found);
  };
  G__21067 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__21067__2.call(this, self__, coll);
      case 3:
        return G__21067__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__21067;
}();
cljs.core.Symbol.prototype.apply = function(self__, args21066) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args21066)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, null);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.__GT_Symbol = function __GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if (name instanceof cljs.core.Symbol) {
      return name;
    } else {
      return symbol.call(null, null, name);
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null);
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol;
}();
cljs.core.clone = function clone(value) {
  return cljs.core._clone.call(null, value);
};
cljs.core.cloneable_QMARK_ = function cloneable_QMARK_(value) {
  var G__21069 = value;
  if (G__21069) {
    var bit__10979__auto__ = G__21069.cljs$lang$protocol_mask$partition1$ & 8192;
    if (bit__10979__auto__ || G__21069.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!G__21069.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__21069);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__21069);
  }
};
cljs.core.seq = function seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__21071 = coll;
      if (G__21071) {
        var bit__10972__auto__ = G__21071.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__10972__auto__ || G__21071.cljs$core$ISeqable$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._seq.call(null, coll);
    } else {
      if (coll instanceof Array) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, coll)) {
            return cljs.core._seq.call(null, coll);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              throw new Error([cljs.core.str(coll), cljs.core.str("is not ISeqable")].join(""));
            } else {
              return null;
            }
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__21073 = coll;
      if (G__21073) {
        var bit__10972__auto__ = G__21073.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__10972__auto__ || G__21073.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._first.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first.call(null, s);
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__21075 = coll;
      if (G__21075) {
        var bit__10972__auto__ = G__21075.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__10972__auto__ || G__21075.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._rest.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s) {
        return cljs.core._rest.call(null, s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__21077 = coll;
      if (G__21077) {
        var bit__10972__auto__ = G__21077.cljs$lang$protocol_mask$partition0$ & 128;
        if (bit__10972__auto__ || G__21077.cljs$core$INext$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._next.call(null, coll);
    } else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll));
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true;
  };
  var _EQ___2 = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      return x === y || cljs.core._equiv.call(null, x, y);
    }
  };
  var _EQ___3 = function() {
    var G__21078__delegate = function(x, y, more) {
      while (true) {
        if (_EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__21079 = y;
            var G__21080 = cljs.core.first.call(null, more);
            var G__21081 = cljs.core.next.call(null, more);
            x = G__21079;
            y = G__21080;
            more = G__21081;
            continue;
          } else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__21078 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21078__delegate.call(this, x, y, more);
    };
    G__21078.cljs$lang$maxFixedArity = 2;
    G__21078.cljs$lang$applyTo = function(arglist__21082) {
      var x = cljs.core.first(arglist__21082);
      arglist__21082 = cljs.core.next(arglist__21082);
      var y = cljs.core.first(arglist__21082);
      var more = cljs.core.rest(arglist__21082);
      return G__21078__delegate(x, y, more);
    };
    G__21078.cljs$core$IFn$_invoke$arity$variadic = G__21078__delegate;
    return G__21078;
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_;
}();
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.toString() === other.toString();
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o);
};
cljs.core.inc = function inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__10896__auto__, writer__10897__auto__, opt__10898__auto__) {
  return cljs.core._write.call(null, writer__10897__auto__, "cljs.core/Reduced");
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.__GT_Reduced = function __GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count.call(null, cicoll);
    if (cnt === 0) {
      return f.call(null);
    } else {
      var val = cljs.core._nth.call(null, cicoll, 0);
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, cljs.core._nth.call(null, cicoll, n));
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__21083 = nval;
            var G__21084 = n + 1;
            val = G__21083;
            n = G__21084;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__21085 = nval;
          var G__21086 = n + 1;
          val__$1 = G__21085;
          n = G__21086;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__21087 = nval;
          var G__21088 = n + 1;
          val__$1 = G__21087;
          n = G__21088;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce;
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if (arr.length === 0) {
      return f.call(null);
    } else {
      var val = arr[0];
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, arr[n]);
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__21089 = nval;
            var G__21090 = n + 1;
            val = G__21089;
            n = G__21090;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__21091 = nval;
          var G__21092 = n + 1;
          val__$1 = G__21091;
          n = G__21092;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__21093 = nval;
          var G__21094 = n + 1;
          val__$1 = G__21093;
          n = G__21094;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce;
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__21096 = x;
  if (G__21096) {
    var bit__10979__auto__ = G__21096.cljs$lang$protocol_mask$partition0$ & 2;
    if (bit__10979__auto__ || G__21096.cljs$core$ICounted$) {
      return true;
    } else {
      if (!G__21096.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__21096);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__21096);
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__21098 = x;
  if (G__21098) {
    var bit__10979__auto__ = G__21098.cljs$lang$protocol_mask$partition0$ & 16;
    if (bit__10979__auto__ || G__21098.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!G__21098.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__21098);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__21098);
  }
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__10896__auto__, writer__10897__auto__, opt__10898__auto__) {
  return cljs.core._write.call(null, writer__10897__auto__, "cljs.core/IndexedSeq");
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count.call(null, coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr.length - self__.i;
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.__GT_IndexedSeq = function __GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0);
  };
  var prim_seq__2 = function(prim, i) {
    if (i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i);
    } else {
      return null;
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq;
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0);
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i);
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq;
}();
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__10896__auto__, writer__10897__auto__, opt__10898__auto__) {
  return cljs.core._write.call(null, writer__10897__auto__, "cljs.core/RSeq");
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_RSeq = function __GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll));
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll));
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll));
};
cljs.core.last = function last(s) {
  while (true) {
    var sn = cljs.core.next.call(null, s);
    if (!(sn == null)) {
      var G__21099 = sn;
      s = G__21099;
      continue;
    } else {
      return cljs.core.first.call(null, s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    if (!(coll == null)) {
      return cljs.core._conj.call(null, coll, x);
    } else {
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x);
    }
  };
  var conj__3 = function() {
    var G__21100__delegate = function(coll, x, xs) {
      while (true) {
        if (cljs.core.truth_(xs)) {
          var G__21101 = conj.call(null, coll, x);
          var G__21102 = cljs.core.first.call(null, xs);
          var G__21103 = cljs.core.next.call(null, xs);
          coll = G__21101;
          x = G__21102;
          xs = G__21103;
          continue;
        } else {
          return conj.call(null, coll, x);
        }
        break;
      }
    };
    var G__21100 = function(coll, x, var_args) {
      var xs = null;
      if (arguments.length > 2) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21100__delegate.call(this, coll, x, xs);
    };
    G__21100.cljs$lang$maxFixedArity = 2;
    G__21100.cljs$lang$applyTo = function(arglist__21104) {
      var coll = cljs.core.first(arglist__21104);
      arglist__21104 = cljs.core.next(arglist__21104);
      var x = cljs.core.first(arglist__21104);
      var xs = cljs.core.rest(arglist__21104);
      return G__21100__delegate(coll, x, xs);
    };
    G__21100.cljs$core$IFn$_invoke$arity$variadic = G__21100__delegate;
    return G__21100;
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj;
}();
cljs.core.empty = function empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty.call(null, coll);
  }
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq.call(null, coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_.call(null, s)) {
      return acc + cljs.core._count.call(null, s);
    } else {
      var G__21105 = cljs.core.next.call(null, s);
      var G__21106 = acc + 1;
      s = G__21105;
      acc = G__21106;
      continue;
    }
    break;
  }
};
cljs.core.count = function count(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__21108 = coll;
      if (G__21108) {
        var bit__10972__auto__ = G__21108.cljs$lang$protocol_mask$partition0$ & 2;
        if (bit__10972__auto__ || G__21108.cljs$core$ICounted$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._count.call(null, coll);
    } else {
      if (coll instanceof Array) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, coll)) {
            return cljs.core._count.call(null, coll);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.accumulating_seq_count.call(null, coll);
            } else {
              return null;
            }
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while (true) {
      if (coll == null) {
        throw new Error("Index out of bounds");
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            throw new Error("Index out of bounds");
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__21109 = cljs.core.next.call(null, coll);
              var G__21110 = n - 1;
              coll = G__21109;
              n = G__21110;
              continue;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw new Error("Index out of bounds");
              } else {
                return null;
              }
            }
          }
        }
      }
      break;
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while (true) {
      if (coll == null) {
        return not_found;
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n, not_found);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__21111 = cljs.core.next.call(null, coll);
              var G__21112 = n - 1;
              var G__21113 = not_found;
              coll = G__21111;
              n = G__21112;
              not_found = G__21113;
              continue;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return not_found;
              } else {
                return null;
              }
            }
          }
        }
      }
      break;
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth;
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if (coll == null) {
      return null;
    } else {
      if (function() {
        var G__21118 = coll;
        if (G__21118) {
          var bit__10972__auto__ = G__21118.cljs$lang$protocol_mask$partition0$ & 16;
          if (bit__10972__auto__ || G__21118.cljs$core$IIndexed$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._nth.call(null, coll, n);
      } else {
        if (coll instanceof Array) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return null;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll[n];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
              return cljs.core._nth.call(null, coll, n);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                if (function() {
                  var G__21119 = coll;
                  if (G__21119) {
                    var bit__10979__auto__ = G__21119.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__10979__auto__ || G__21119.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__21119.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__21119);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__21119);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll)))].join(""));
                }
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if (!(coll == null)) {
      if (function() {
        var G__21120 = coll;
        if (G__21120) {
          var bit__10972__auto__ = G__21120.cljs$lang$protocol_mask$partition0$ & 16;
          if (bit__10972__auto__ || G__21120.cljs$core$IIndexed$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._nth.call(null, coll, n, not_found);
      } else {
        if (coll instanceof Array) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return not_found;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll[n];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
              return cljs.core._nth.call(null, coll, n);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                if (function() {
                  var G__21121 = coll;
                  if (G__21121) {
                    var bit__10979__auto__ = G__21121.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__10979__auto__ || G__21121.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__21121.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__21121);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__21121);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n, not_found);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll)))].join(""));
                }
              } else {
                return null;
              }
            }
          }
        }
      }
    } else {
      return not_found;
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth;
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if (o == null) {
      return null;
    } else {
      if (function() {
        var G__21124 = o;
        if (G__21124) {
          var bit__10972__auto__ = G__21124.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__10972__auto__ || G__21124.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return null;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return null;
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if (!(o == null)) {
      if (function() {
        var G__21125 = o;
        if (G__21125) {
          var bit__10972__auto__ = G__21125.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__10972__auto__ || G__21125.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k, not_found);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k, not_found);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return not_found;
              } else {
                return null;
              }
            }
          }
        }
      }
    } else {
      return not_found;
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get;
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if (!(coll == null)) {
      return cljs.core._assoc.call(null, coll, k, v);
    } else {
      return cljs.core.PersistentHashMap.fromArrays.call(null, [k], [v]);
    }
  };
  var assoc__4 = function() {
    var G__21126__delegate = function(coll, k, v, kvs) {
      while (true) {
        var ret = assoc.call(null, coll, k, v);
        if (cljs.core.truth_(kvs)) {
          var G__21127 = ret;
          var G__21128 = cljs.core.first.call(null, kvs);
          var G__21129 = cljs.core.second.call(null, kvs);
          var G__21130 = cljs.core.nnext.call(null, kvs);
          coll = G__21127;
          k = G__21128;
          v = G__21129;
          kvs = G__21130;
          continue;
        } else {
          return ret;
        }
        break;
      }
    };
    var G__21126 = function(coll, k, v, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__21126__delegate.call(this, coll, k, v, kvs);
    };
    G__21126.cljs$lang$maxFixedArity = 3;
    G__21126.cljs$lang$applyTo = function(arglist__21131) {
      var coll = cljs.core.first(arglist__21131);
      arglist__21131 = cljs.core.next(arglist__21131);
      var k = cljs.core.first(arglist__21131);
      arglist__21131 = cljs.core.next(arglist__21131);
      var v = cljs.core.first(arglist__21131);
      var kvs = cljs.core.rest(arglist__21131);
      return G__21126__delegate(coll, k, v, kvs);
    };
    G__21126.cljs$core$IFn$_invoke$arity$variadic = G__21126__delegate;
    return G__21126;
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc;
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll;
  };
  var dissoc__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._dissoc.call(null, coll, k);
    }
  };
  var dissoc__3 = function() {
    var G__21132__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = dissoc.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__21133 = ret;
            var G__21134 = cljs.core.first.call(null, ks);
            var G__21135 = cljs.core.next.call(null, ks);
            coll = G__21133;
            k = G__21134;
            ks = G__21135;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__21132 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21132__delegate.call(this, coll, k, ks);
    };
    G__21132.cljs$lang$maxFixedArity = 2;
    G__21132.cljs$lang$applyTo = function(arglist__21136) {
      var coll = cljs.core.first(arglist__21136);
      arglist__21136 = cljs.core.next(arglist__21136);
      var k = cljs.core.first(arglist__21136);
      var ks = cljs.core.rest(arglist__21136);
      return G__21132__delegate(coll, k, ks);
    };
    G__21132.cljs$core$IFn$_invoke$arity$variadic = G__21132__delegate;
    return G__21132;
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc;
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__10329__auto__ = goog.isFunction(f);
  if (or__10329__auto__) {
    return or__10329__auto__;
  } else {
    var G__21140 = f;
    if (G__21140) {
      var bit__10979__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__10329__auto____$1 = bit__10979__auto__;
        if (cljs.core.truth_(or__10329__auto____$1)) {
          return or__10329__auto____$1;
        } else {
          return G__21140.cljs$core$Fn$;
        }
      }())) {
        return true;
      } else {
        if (!G__21140.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__21140);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__21140);
    }
  }
};
cljs.core.with_meta = function with_meta(o, meta) {
  if (cljs.core.fn_QMARK_.call(null, o) && !function() {
    var G__21148 = o;
    if (G__21148) {
      var bit__10979__auto__ = G__21148.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__10979__auto__ || G__21148.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__21148.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__21148);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__21148);
    }
  }()) {
    return with_meta.call(null, function() {
      if (typeof cljs.core.t21149 !== "undefined") {
      } else {
        cljs.core.t21149 = function(meta, o, with_meta, meta21150) {
          this.meta = meta;
          this.o = o;
          this.with_meta = with_meta;
          this.meta21150 = meta21150;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393217;
        };
        cljs.core.t21149.cljs$lang$type = true;
        cljs.core.t21149.cljs$lang$ctorStr = "cljs.core/t21149";
        cljs.core.t21149.cljs$lang$ctorPrWriter = function(this__10896__auto__, writer__10897__auto__, opt__10898__auto__) {
          return cljs.core._write.call(null, writer__10897__auto__, "cljs.core/t21149");
        };
        cljs.core.t21149.prototype.call = function() {
          var G__21153__delegate = function(self__, args) {
            var self____$1 = this;
            var _ = self____$1;
            return cljs.core.apply.call(null, self__.o, args);
          };
          var G__21153 = function(self__, var_args) {
            var self__ = this;
            var args = null;
            if (arguments.length > 1) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
            }
            return G__21153__delegate.call(this, self__, args);
          };
          G__21153.cljs$lang$maxFixedArity = 1;
          G__21153.cljs$lang$applyTo = function(arglist__21154) {
            var self__ = cljs.core.first(arglist__21154);
            var args = cljs.core.rest(arglist__21154);
            return G__21153__delegate(self__, args);
          };
          G__21153.cljs$core$IFn$_invoke$arity$variadic = G__21153__delegate;
          return G__21153;
        }();
        cljs.core.t21149.prototype.apply = function(self__, args21152) {
          var self__ = this;
          var self____$1 = this;
          return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args21152)));
        };
        cljs.core.t21149.prototype.cljs$core$IFn$_invoke$arity$2 = function() {
          var G__21155__delegate = function(args) {
            var _ = this;
            return cljs.core.apply.call(null, self__.o, args);
          };
          var G__21155 = function(var_args) {
            var self__ = this;
            var args = null;
            if (arguments.length > 0) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
            }
            return G__21155__delegate.call(this, args);
          };
          G__21155.cljs$lang$maxFixedArity = 0;
          G__21155.cljs$lang$applyTo = function(arglist__21156) {
            var args = cljs.core.seq(arglist__21156);
            return G__21155__delegate(args);
          };
          G__21155.cljs$core$IFn$_invoke$arity$variadic = G__21155__delegate;
          return G__21155;
        }();
        cljs.core.t21149.prototype.cljs$core$Fn$ = true;
        cljs.core.t21149.prototype.cljs$core$IMeta$_meta$arity$1 = function(_21151) {
          var self__ = this;
          var _21151__$1 = this;
          return self__.meta21150;
        };
        cljs.core.t21149.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_21151, meta21150__$1) {
          var self__ = this;
          var _21151__$1 = this;
          return new cljs.core.t21149(self__.meta, self__.o, self__.with_meta, meta21150__$1);
        };
        cljs.core.__GT_t21149 = function __GT_t21149(meta__$1, o__$1, with_meta__$1, meta21150) {
          return new cljs.core.t21149(meta__$1, o__$1, with_meta__$1, meta21150);
        };
      }
      return new cljs.core.t21149(meta, o, with_meta, null);
    }(), meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta.call(null, o, meta);
    }
  }
};
cljs.core.meta = function meta(o) {
  if (function() {
    var and__10317__auto__ = !(o == null);
    if (and__10317__auto__) {
      var G__21160 = o;
      if (G__21160) {
        var bit__10979__auto__ = G__21160.cljs$lang$protocol_mask$partition0$ & 131072;
        if (bit__10979__auto__ || G__21160.cljs$core$IMeta$) {
          return true;
        } else {
          if (!G__21160.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__21160);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__21160);
      }
    } else {
      return and__10317__auto__;
    }
  }()) {
    return cljs.core._meta.call(null, o);
  } else {
    return null;
  }
};
cljs.core.peek = function peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek.call(null, coll);
  }
};
cljs.core.pop = function pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop.call(null, coll);
  }
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll;
  };
  var disj__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._disjoin.call(null, coll, k);
    }
  };
  var disj__3 = function() {
    var G__21161__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = disj.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__21162 = ret;
            var G__21163 = cljs.core.first.call(null, ks);
            var G__21164 = cljs.core.next.call(null, ks);
            coll = G__21162;
            k = G__21163;
            ks = G__21164;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__21161 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21161__delegate.call(this, coll, k, ks);
    };
    G__21161.cljs$lang$maxFixedArity = 2;
    G__21161.cljs$lang$applyTo = function(arglist__21165) {
      var coll = cljs.core.first(arglist__21165);
      arglist__21165 = cljs.core.next(arglist__21165);
      var k = cljs.core.first(arglist__21165);
      var ks = cljs.core.rest(arglist__21165);
      return G__21161__delegate(coll, k, ks);
    };
    G__21161.cljs$core$IFn$_invoke$arity$variadic = G__21161__delegate;
    return G__21161;
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj;
}();
cljs.core.string_hash_cache = function() {
  var obj21167 = {};
  return obj21167;
}();
cljs.core.string_hash_cache_count = 0;
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = goog.string.hashCode(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.check_string_hash_cache = function check_string_hash_cache(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = function() {
      var obj21171 = {};
      return obj21171;
    }();
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache.call(null, k);
  }
};
cljs.core.hash = function hash(o) {
  if (function() {
    var G__21173 = o;
    if (G__21173) {
      var bit__10972__auto__ = G__21173.cljs$lang$protocol_mask$partition0$ & 4194304;
      if (bit__10972__auto__ || G__21173.cljs$core$IHash$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._hash.call(null, o);
  } else {
    if (typeof o === "number") {
      return Math.floor(o) % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.check_string_hash_cache.call(null, o);
          } else {
            if (o == null) {
              return 0;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return cljs.core._hash.call(null, o);
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return coll == null || cljs.core.not.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__21175 = x;
    if (G__21175) {
      var bit__10979__auto__ = G__21175.cljs$lang$protocol_mask$partition0$ & 8;
      if (bit__10979__auto__ || G__21175.cljs$core$ICollection$) {
        return true;
      } else {
        if (!G__21175.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__21175);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__21175);
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__21177 = x;
    if (G__21177) {
      var bit__10979__auto__ = G__21177.cljs$lang$protocol_mask$partition0$ & 4096;
      if (bit__10979__auto__ || G__21177.cljs$core$ISet$) {
        return true;
      } else {
        if (!G__21177.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__21177);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__21177);
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__21179 = x;
  if (G__21179) {
    var bit__10979__auto__ = G__21179.cljs$lang$protocol_mask$partition0$ & 512;
    if (bit__10979__auto__ || G__21179.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!G__21179.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__21179);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__21179);
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__21181 = x;
  if (G__21181) {
    var bit__10979__auto__ = G__21181.cljs$lang$protocol_mask$partition0$ & 16777216;
    if (bit__10979__auto__ || G__21181.cljs$core$ISequential$) {
      return true;
    } else {
      if (!G__21181.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__21181);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__21181);
  }
};
cljs.core.sorted_QMARK_ = function sorted_QMARK_(x) {
  var G__21183 = x;
  if (G__21183) {
    var bit__10979__auto__ = G__21183.cljs$lang$protocol_mask$partition0$ & 268435456;
    if (bit__10979__auto__ || G__21183.cljs$core$ISorted$) {
      return true;
    } else {
      if (!G__21183.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__21183);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__21183);
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__21185 = x;
  if (G__21185) {
    var bit__10979__auto__ = G__21185.cljs$lang$protocol_mask$partition0$ & 524288;
    if (bit__10979__auto__ || G__21185.cljs$core$IReduce$) {
      return true;
    } else {
      if (!G__21185.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__21185);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__21185);
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__21187 = x;
    if (G__21187) {
      var bit__10979__auto__ = G__21187.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__10979__auto__ || G__21187.cljs$core$IMap$) {
        return true;
      } else {
        if (!G__21187.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__21187);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__21187);
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__21189 = x;
  if (G__21189) {
    var bit__10979__auto__ = G__21189.cljs$lang$protocol_mask$partition0$ & 16384;
    if (bit__10979__auto__ || G__21189.cljs$core$IVector$) {
      return true;
    } else {
      if (!G__21189.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__21189);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__21189);
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__21191 = x;
  if (G__21191) {
    var bit__10972__auto__ = G__21191.cljs$lang$protocol_mask$partition1$ & 512;
    if (bit__10972__auto__ || G__21191.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    var obj21195 = {};
    return obj21195;
  };
  var js_obj__1 = function() {
    var G__21196__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals);
    };
    var G__21196 = function(var_args) {
      var keyvals = null;
      if (arguments.length > 0) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__21196__delegate.call(this, keyvals);
    };
    G__21196.cljs$lang$maxFixedArity = 0;
    G__21196.cljs$lang$applyTo = function(arglist__21197) {
      var keyvals = cljs.core.seq(arglist__21197);
      return G__21196__delegate(keyvals);
    };
    G__21196.cljs$core$IFn$_invoke$arity$variadic = G__21196__delegate;
    return G__21196;
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj;
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  goog.object.forEach(obj, function(val, key, obj__$1) {
    return keys.push(key);
  });
  return keys;
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__21198 = i__$1 + 1;
      var G__21199 = j__$1 + 1;
      var G__21200 = len__$1 - 1;
      i__$1 = G__21198;
      j__$1 = G__21199;
      len__$1 = G__21200;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__21201 = i__$1 - 1;
      var G__21202 = j__$1 - 1;
      var G__21203 = len__$1 - 1;
      i__$1 = G__21201;
      j__$1 = G__21202;
      len__$1 = G__21203;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = function() {
  var obj21205 = {};
  return obj21205;
}();
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    var G__21207 = s;
    if (G__21207) {
      var bit__10979__auto__ = G__21207.cljs$lang$protocol_mask$partition0$ & 64;
      if (bit__10979__auto__ || G__21207.cljs$core$ISeq$) {
        return true;
      } else {
        if (!G__21207.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__21207);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__21207);
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__21209 = s;
  if (G__21209) {
    var bit__10979__auto__ = G__21209.cljs$lang$protocol_mask$partition0$ & 8388608;
    if (bit__10979__auto__ || G__21209.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!G__21209.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__21209);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__21209);
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if (cljs.core.truth_(x)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__10329__auto__ = cljs.core.fn_QMARK_.call(null, f);
  if (or__10329__auto__) {
    return or__10329__auto__;
  } else {
    var G__21213 = f;
    if (G__21213) {
      var bit__10979__auto__ = G__21213.cljs$lang$protocol_mask$partition0$ & 1;
      if (bit__10979__auto__ || G__21213.cljs$core$IFn$) {
        return true;
      } else {
        if (!G__21213.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__21213);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__21213);
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  return typeof n === "number" && (!isNaN(n) && (!(n === Infinity) && parseFloat(n) === parseInt(n, 10)));
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if (cljs.core.get.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function find(coll, k) {
  if (!(coll == null) && (cljs.core.associative_QMARK_.call(null, coll) && cljs.core.contains_QMARK_.call(null, coll, k))) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.call(null, coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true;
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var distinct_QMARK___3 = function() {
    var G__21214__delegate = function(x, y, more) {
      if (!cljs.core._EQ_.call(null, x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([y, x], true);
        var xs = more;
        while (true) {
          var x__$1 = cljs.core.first.call(null, xs);
          var etc = cljs.core.next.call(null, xs);
          if (cljs.core.truth_(xs)) {
            if (cljs.core.contains_QMARK_.call(null, s, x__$1)) {
              return false;
            } else {
              var G__21215 = cljs.core.conj.call(null, s, x__$1);
              var G__21216 = etc;
              s = G__21215;
              xs = G__21216;
              continue;
            }
          } else {
            return true;
          }
          break;
        }
      } else {
        return false;
      }
    };
    var G__21214 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21214__delegate.call(this, x, y, more);
    };
    G__21214.cljs$lang$maxFixedArity = 2;
    G__21214.cljs$lang$applyTo = function(arglist__21217) {
      var x = cljs.core.first(arglist__21217);
      arglist__21217 = cljs.core.next(arglist__21217);
      var y = cljs.core.first(arglist__21217);
      var more = cljs.core.rest(arglist__21217);
      return G__21214__delegate(x, y, more);
    };
    G__21214.cljs$core$IFn$_invoke$arity$variadic = G__21214__delegate;
    return G__21214;
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_;
}();
cljs.core.sequence = function sequence(coll) {
  if (cljs.core.seq_QMARK_.call(null, coll)) {
    return coll;
  } else {
    var or__10329__auto__ = cljs.core.seq.call(null, coll);
    if (or__10329__auto__) {
      return or__10329__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.compare = function compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return-1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if (function() {
            var G__21219 = x;
            if (G__21219) {
              var bit__10972__auto__ = G__21219.cljs$lang$protocol_mask$partition1$ & 2048;
              if (bit__10972__auto__ || G__21219.cljs$core$IComparable$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return cljs.core._compare.call(null, x, y);
          } else {
            return goog.array.defaultCompare(x, y);
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw new Error("compare on non-nil objects of different types");
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count.call(null, xs);
    var yl = cljs.core.count.call(null, ys);
    if (xl < yl) {
      return-1;
    } else {
      if (xl > yl) {
        return 1;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return compare_indexed.call(null, xs, ys, xl, 0);
        } else {
          return null;
        }
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while (true) {
      var d = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if (d === 0 && n + 1 < len) {
        var G__21220 = xs;
        var G__21221 = ys;
        var G__21222 = len;
        var G__21223 = n + 1;
        xs = G__21220;
        ys = G__21221;
        len = G__21222;
        n = G__21223;
        continue;
      } else {
        return d;
      }
      break;
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed;
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if (cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = f.call(null, x, y);
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return-1;
        } else {
          if (cljs.core.truth_(f.call(null, y, x))) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll);
  };
  var sort__2 = function(comp, coll) {
    if (cljs.core.seq.call(null, coll)) {
      var a = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a);
    } else {
      return cljs.core.List.EMPTY;
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort;
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll);
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y));
    }, coll);
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by;
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4090__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4090__auto__) {
      var s = temp__4090__auto__;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s), cljs.core.next.call(null, s));
    } else {
      return f.call(null);
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        var nval = f.call(null, val__$1, cljs.core.first.call(null, coll__$1));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__21224 = nval;
          var G__21225 = cljs.core.next.call(null, coll__$1);
          val__$1 = G__21224;
          coll__$1 = G__21225;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce;
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.call(null, a);
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if (function() {
      var G__21228 = coll;
      if (G__21228) {
        var bit__10972__auto__ = G__21228.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__10972__auto__ || G__21228.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.seq_reduce.call(null, f, coll);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if (function() {
      var G__21229 = coll;
      if (G__21229) {
        var bit__10972__auto__ = G__21229.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__10972__auto__ || G__21229.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f, val);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f, val);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f, val);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.seq_reduce.call(null, f, val, coll);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce;
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce.call(null, coll, f, init);
  } else {
    return init;
  }
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0;
  };
  var _PLUS___1 = function(x) {
    return x;
  };
  var _PLUS___2 = function(x, y) {
    return x + y;
  };
  var _PLUS___3 = function() {
    var G__21230__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more);
    };
    var G__21230 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21230__delegate.call(this, x, y, more);
    };
    G__21230.cljs$lang$maxFixedArity = 2;
    G__21230.cljs$lang$applyTo = function(arglist__21231) {
      var x = cljs.core.first(arglist__21231);
      arglist__21231 = cljs.core.next(arglist__21231);
      var y = cljs.core.first(arglist__21231);
      var more = cljs.core.rest(arglist__21231);
      return G__21230__delegate(x, y, more);
    };
    G__21230.cljs$core$IFn$_invoke$arity$variadic = G__21230__delegate;
    return G__21230;
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_;
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x;
  };
  var ___2 = function(x, y) {
    return x - y;
  };
  var ___3 = function() {
    var G__21232__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more);
    };
    var G__21232 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21232__delegate.call(this, x, y, more);
    };
    G__21232.cljs$lang$maxFixedArity = 2;
    G__21232.cljs$lang$applyTo = function(arglist__21233) {
      var x = cljs.core.first(arglist__21233);
      arglist__21233 = cljs.core.next(arglist__21233);
      var y = cljs.core.first(arglist__21233);
      var more = cljs.core.rest(arglist__21233);
      return G__21232__delegate(x, y, more);
    };
    G__21232.cljs$core$IFn$_invoke$arity$variadic = G__21232__delegate;
    return G__21232;
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _;
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1;
  };
  var _STAR___1 = function(x) {
    return x;
  };
  var _STAR___2 = function(x, y) {
    return x * y;
  };
  var _STAR___3 = function() {
    var G__21234__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more);
    };
    var G__21234 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21234__delegate.call(this, x, y, more);
    };
    G__21234.cljs$lang$maxFixedArity = 2;
    G__21234.cljs$lang$applyTo = function(arglist__21235) {
      var x = cljs.core.first(arglist__21235);
      arglist__21235 = cljs.core.next(arglist__21235);
      var y = cljs.core.first(arglist__21235);
      var more = cljs.core.rest(arglist__21235);
      return G__21234__delegate(x, y, more);
    };
    G__21234.cljs$core$IFn$_invoke$arity$variadic = G__21234__delegate;
    return G__21234;
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_;
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x);
  };
  var _SLASH___2 = function(x, y) {
    return x / y;
  };
  var _SLASH___3 = function() {
    var G__21236__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more);
    };
    var G__21236 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21236__delegate.call(this, x, y, more);
    };
    G__21236.cljs$lang$maxFixedArity = 2;
    G__21236.cljs$lang$applyTo = function(arglist__21237) {
      var x = cljs.core.first(arglist__21237);
      arglist__21237 = cljs.core.next(arglist__21237);
      var y = cljs.core.first(arglist__21237);
      var more = cljs.core.rest(arglist__21237);
      return G__21236__delegate(x, y, more);
    };
    G__21236.cljs$core$IFn$_invoke$arity$variadic = G__21236__delegate;
    return G__21236;
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_;
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true;
  };
  var _LT___2 = function(x, y) {
    return x < y;
  };
  var _LT___3 = function() {
    var G__21238__delegate = function(x, y, more) {
      while (true) {
        if (x < y) {
          if (cljs.core.next.call(null, more)) {
            var G__21239 = y;
            var G__21240 = cljs.core.first.call(null, more);
            var G__21241 = cljs.core.next.call(null, more);
            x = G__21239;
            y = G__21240;
            more = G__21241;
            continue;
          } else {
            return y < cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__21238 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21238__delegate.call(this, x, y, more);
    };
    G__21238.cljs$lang$maxFixedArity = 2;
    G__21238.cljs$lang$applyTo = function(arglist__21242) {
      var x = cljs.core.first(arglist__21242);
      arglist__21242 = cljs.core.next(arglist__21242);
      var y = cljs.core.first(arglist__21242);
      var more = cljs.core.rest(arglist__21242);
      return G__21238__delegate(x, y, more);
    };
    G__21238.cljs$core$IFn$_invoke$arity$variadic = G__21238__delegate;
    return G__21238;
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_;
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true;
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y;
  };
  var _LT__EQ___3 = function() {
    var G__21243__delegate = function(x, y, more) {
      while (true) {
        if (x <= y) {
          if (cljs.core.next.call(null, more)) {
            var G__21244 = y;
            var G__21245 = cljs.core.first.call(null, more);
            var G__21246 = cljs.core.next.call(null, more);
            x = G__21244;
            y = G__21245;
            more = G__21246;
            continue;
          } else {
            return y <= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__21243 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21243__delegate.call(this, x, y, more);
    };
    G__21243.cljs$lang$maxFixedArity = 2;
    G__21243.cljs$lang$applyTo = function(arglist__21247) {
      var x = cljs.core.first(arglist__21247);
      arglist__21247 = cljs.core.next(arglist__21247);
      var y = cljs.core.first(arglist__21247);
      var more = cljs.core.rest(arglist__21247);
      return G__21243__delegate(x, y, more);
    };
    G__21243.cljs$core$IFn$_invoke$arity$variadic = G__21243__delegate;
    return G__21243;
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_;
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true;
  };
  var _GT___2 = function(x, y) {
    return x > y;
  };
  var _GT___3 = function() {
    var G__21248__delegate = function(x, y, more) {
      while (true) {
        if (x > y) {
          if (cljs.core.next.call(null, more)) {
            var G__21249 = y;
            var G__21250 = cljs.core.first.call(null, more);
            var G__21251 = cljs.core.next.call(null, more);
            x = G__21249;
            y = G__21250;
            more = G__21251;
            continue;
          } else {
            return y > cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__21248 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21248__delegate.call(this, x, y, more);
    };
    G__21248.cljs$lang$maxFixedArity = 2;
    G__21248.cljs$lang$applyTo = function(arglist__21252) {
      var x = cljs.core.first(arglist__21252);
      arglist__21252 = cljs.core.next(arglist__21252);
      var y = cljs.core.first(arglist__21252);
      var more = cljs.core.rest(arglist__21252);
      return G__21248__delegate(x, y, more);
    };
    G__21248.cljs$core$IFn$_invoke$arity$variadic = G__21248__delegate;
    return G__21248;
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_;
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true;
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y;
  };
  var _GT__EQ___3 = function() {
    var G__21253__delegate = function(x, y, more) {
      while (true) {
        if (x >= y) {
          if (cljs.core.next.call(null, more)) {
            var G__21254 = y;
            var G__21255 = cljs.core.first.call(null, more);
            var G__21256 = cljs.core.next.call(null, more);
            x = G__21254;
            y = G__21255;
            more = G__21256;
            continue;
          } else {
            return y >= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__21253 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21253__delegate.call(this, x, y, more);
    };
    G__21253.cljs$lang$maxFixedArity = 2;
    G__21253.cljs$lang$applyTo = function(arglist__21257) {
      var x = cljs.core.first(arglist__21257);
      arglist__21257 = cljs.core.next(arglist__21257);
      var y = cljs.core.first(arglist__21257);
      var more = cljs.core.rest(arglist__21257);
      return G__21253__delegate(x, y, more);
    };
    G__21253.cljs$core$IFn$_invoke$arity$variadic = G__21253__delegate;
    return G__21253;
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_;
}();
cljs.core.dec = function dec(x) {
  return x - 1;
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x;
  };
  var max__2 = function(x, y) {
    var x__10636__auto__ = x;
    var y__10637__auto__ = y;
    return x__10636__auto__ > y__10637__auto__ ? x__10636__auto__ : y__10637__auto__;
  };
  var max__3 = function() {
    var G__21258__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, function() {
        var x__10636__auto__ = x;
        var y__10637__auto__ = y;
        return x__10636__auto__ > y__10637__auto__ ? x__10636__auto__ : y__10637__auto__;
      }(), more);
    };
    var G__21258 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21258__delegate.call(this, x, y, more);
    };
    G__21258.cljs$lang$maxFixedArity = 2;
    G__21258.cljs$lang$applyTo = function(arglist__21259) {
      var x = cljs.core.first(arglist__21259);
      arglist__21259 = cljs.core.next(arglist__21259);
      var y = cljs.core.first(arglist__21259);
      var more = cljs.core.rest(arglist__21259);
      return G__21258__delegate(x, y, more);
    };
    G__21258.cljs$core$IFn$_invoke$arity$variadic = G__21258__delegate;
    return G__21258;
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max;
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x;
  };
  var min__2 = function(x, y) {
    var x__10643__auto__ = x;
    var y__10644__auto__ = y;
    return x__10643__auto__ < y__10644__auto__ ? x__10643__auto__ : y__10644__auto__;
  };
  var min__3 = function() {
    var G__21260__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, function() {
        var x__10643__auto__ = x;
        var y__10644__auto__ = y;
        return x__10643__auto__ < y__10644__auto__ ? x__10643__auto__ : y__10644__auto__;
      }(), more);
    };
    var G__21260 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21260__delegate.call(this, x, y, more);
    };
    G__21260.cljs$lang$maxFixedArity = 2;
    G__21260.cljs$lang$applyTo = function(arglist__21261) {
      var x = cljs.core.first(arglist__21261);
      arglist__21261 = cljs.core.next(arglist__21261);
      var y = cljs.core.first(arglist__21261);
      var more = cljs.core.rest(arglist__21261);
      return G__21260__delegate(x, y, more);
    };
    G__21260.cljs$core$IFn$_invoke$arity$variadic = G__21260__delegate;
    return G__21260;
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min;
}();
cljs.core.byte$ = function byte$(x) {
  return x;
};
cljs.core.char$ = function char$(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw new Error("Argument to char must be a character or number");
      } else {
        return null;
      }
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x;
};
cljs.core.float$ = function float$(x) {
  return x;
};
cljs.core.double$ = function double$(x) {
  return x;
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0;
  };
  var unchecked_add__1 = function(x) {
    return x;
  };
  var unchecked_add__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add__3 = function() {
    var G__21262__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add, x + y, more);
    };
    var G__21262 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21262__delegate.call(this, x, y, more);
    };
    G__21262.cljs$lang$maxFixedArity = 2;
    G__21262.cljs$lang$applyTo = function(arglist__21263) {
      var x = cljs.core.first(arglist__21263);
      arglist__21263 = cljs.core.next(arglist__21263);
      var y = cljs.core.first(arglist__21263);
      var more = cljs.core.rest(arglist__21263);
      return G__21262__delegate(x, y, more);
    };
    G__21262.cljs$core$IFn$_invoke$arity$variadic = G__21262__delegate;
    return G__21262;
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add;
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0;
  };
  var unchecked_add_int__1 = function(x) {
    return x;
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add_int__3 = function() {
    var G__21264__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add_int, x + y, more);
    };
    var G__21264 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21264__delegate.call(this, x, y, more);
    };
    G__21264.cljs$lang$maxFixedArity = 2;
    G__21264.cljs$lang$applyTo = function(arglist__21265) {
      var x = cljs.core.first(arglist__21265);
      arglist__21265 = cljs.core.next(arglist__21265);
      var y = cljs.core.first(arglist__21265);
      var more = cljs.core.rest(arglist__21265);
      return G__21264__delegate(x, y, more);
    };
    G__21264.cljs$core$IFn$_invoke$arity$variadic = G__21264__delegate;
    return G__21264;
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int;
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.call(null, 1, x);
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y;
  };
  var unchecked_divide_int__3 = function() {
    var G__21266__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_divide_int, unchecked_divide_int.call(null, x, y), more);
    };
    var G__21266 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21266__delegate.call(this, x, y, more);
    };
    G__21266.cljs$lang$maxFixedArity = 2;
    G__21266.cljs$lang$applyTo = function(arglist__21267) {
      var x = cljs.core.first(arglist__21267);
      arglist__21267 = cljs.core.next(arglist__21267);
      var y = cljs.core.first(arglist__21267);
      var more = cljs.core.rest(arglist__21267);
      return G__21266__delegate(x, y, more);
    };
    G__21266.cljs$core$IFn$_invoke$arity$variadic = G__21266__delegate;
    return G__21266;
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int;
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1;
  };
  var unchecked_multiply__1 = function(x) {
    return x;
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply__3 = function() {
    var G__21268__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply, x * y, more);
    };
    var G__21268 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21268__delegate.call(this, x, y, more);
    };
    G__21268.cljs$lang$maxFixedArity = 2;
    G__21268.cljs$lang$applyTo = function(arglist__21269) {
      var x = cljs.core.first(arglist__21269);
      arglist__21269 = cljs.core.next(arglist__21269);
      var y = cljs.core.first(arglist__21269);
      var more = cljs.core.rest(arglist__21269);
      return G__21268__delegate(x, y, more);
    };
    G__21268.cljs$core$IFn$_invoke$arity$variadic = G__21268__delegate;
    return G__21268;
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply;
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1;
  };
  var unchecked_multiply_int__1 = function(x) {
    return x;
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply_int__3 = function() {
    var G__21270__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply_int, x * y, more);
    };
    var G__21270 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21270__delegate.call(this, x, y, more);
    };
    G__21270.cljs$lang$maxFixedArity = 2;
    G__21270.cljs$lang$applyTo = function(arglist__21271) {
      var x = cljs.core.first(arglist__21271);
      arglist__21271 = cljs.core.next(arglist__21271);
      var y = cljs.core.first(arglist__21271);
      var more = cljs.core.rest(arglist__21271);
      return G__21270__delegate(x, y, more);
    };
    G__21270.cljs$core$IFn$_invoke$arity$variadic = G__21270__delegate;
    return G__21270;
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int;
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x;
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x;
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  return cljs.core.mod.call(null, x, n);
};
cljs.core.unchecked_substract = function() {
  var unchecked_substract = null;
  var unchecked_substract__1 = function(x) {
    return-x;
  };
  var unchecked_substract__2 = function(x, y) {
    return x - y;
  };
  var unchecked_substract__3 = function() {
    var G__21272__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_substract, x - y, more);
    };
    var G__21272 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21272__delegate.call(this, x, y, more);
    };
    G__21272.cljs$lang$maxFixedArity = 2;
    G__21272.cljs$lang$applyTo = function(arglist__21273) {
      var x = cljs.core.first(arglist__21273);
      arglist__21273 = cljs.core.next(arglist__21273);
      var y = cljs.core.first(arglist__21273);
      var more = cljs.core.rest(arglist__21273);
      return G__21272__delegate(x, y, more);
    };
    G__21272.cljs$core$IFn$_invoke$arity$variadic = G__21272__delegate;
    return G__21272;
  }();
  unchecked_substract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract__1.call(this, x);
      case 2:
        return unchecked_substract__2.call(this, x, y);
      default:
        return unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract.cljs$lang$maxFixedArity = 2;
  unchecked_substract.cljs$lang$applyTo = unchecked_substract__3.cljs$lang$applyTo;
  unchecked_substract.cljs$core$IFn$_invoke$arity$1 = unchecked_substract__1;
  unchecked_substract.cljs$core$IFn$_invoke$arity$2 = unchecked_substract__2;
  unchecked_substract.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract;
}();
cljs.core.unchecked_substract_int = function() {
  var unchecked_substract_int = null;
  var unchecked_substract_int__1 = function(x) {
    return-x;
  };
  var unchecked_substract_int__2 = function(x, y) {
    return x - y;
  };
  var unchecked_substract_int__3 = function() {
    var G__21274__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_substract_int, x - y, more);
    };
    var G__21274 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21274__delegate.call(this, x, y, more);
    };
    G__21274.cljs$lang$maxFixedArity = 2;
    G__21274.cljs$lang$applyTo = function(arglist__21275) {
      var x = cljs.core.first(arglist__21275);
      arglist__21275 = cljs.core.next(arglist__21275);
      var y = cljs.core.first(arglist__21275);
      var more = cljs.core.rest(arglist__21275);
      return G__21274__delegate(x, y, more);
    };
    G__21274.cljs$core$IFn$_invoke$arity$variadic = G__21274__delegate;
    return G__21274;
  }();
  unchecked_substract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract_int__1.call(this, x);
      case 2:
        return unchecked_substract_int__2.call(this, x, y);
      default:
        return unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract_int.cljs$lang$maxFixedArity = 2;
  unchecked_substract_int.cljs$lang$applyTo = unchecked_substract_int__3.cljs$lang$applyTo;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_substract_int__1;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_substract_int__2;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract_int;
}();
cljs.core.fix = function fix(q) {
  if (q >= 0) {
    return Math.floor.call(null, q);
  } else {
    return Math.ceil.call(null, q);
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0;
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.booleans = function booleans(x) {
  return x;
};
cljs.core.bytes = function bytes(x) {
  return x;
};
cljs.core.chars = function chars(x) {
  return x;
};
cljs.core.shorts = function shorts(x) {
  return x;
};
cljs.core.ints = function ints(x) {
  return x;
};
cljs.core.floats = function floats(x) {
  return x;
};
cljs.core.doubles = function doubles(x) {
  return x;
};
cljs.core.longs = function longs(x) {
  return x;
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d;
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix.call(null, (n - rem) / d);
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot.call(null, n, d);
  return n - d * q;
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null);
  };
  var rand__1 = function(n) {
    return n * rand.call(null);
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n));
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y;
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y;
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y;
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y;
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function bit_not(x) {
  return~x;
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true;
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y);
  };
  var _EQ__EQ___3 = function() {
    var G__21276__delegate = function(x, y, more) {
      while (true) {
        if (_EQ__EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__21277 = y;
            var G__21278 = cljs.core.first.call(null, more);
            var G__21279 = cljs.core.next.call(null, more);
            x = G__21277;
            y = G__21278;
            more = G__21279;
            continue;
          } else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__21276 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21276__delegate.call(this, x, y, more);
    };
    G__21276.cljs$lang$maxFixedArity = 2;
    G__21276.cljs$lang$applyTo = function(arglist__21280) {
      var x = cljs.core.first(arglist__21280);
      arglist__21280 = cljs.core.next(arglist__21280);
      var y = cljs.core.first(arglist__21280);
      var more = cljs.core.rest(arglist__21280);
      return G__21276__delegate(x, y, more);
    };
    G__21276.cljs$core$IFn$_invoke$arity$variadic = G__21276__delegate;
    return G__21276;
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_;
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__21281 = n__$1 - 1;
      var G__21282 = cljs.core.next.call(null, xs);
      n__$1 = G__21281;
      xs = G__21282;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return "";
  };
  var str__1 = function(x) {
    if (x == null) {
      return "";
    } else {
      return x.toString();
    }
  };
  var str__2 = function() {
    var G__21283__delegate = function(x, ys) {
      var sb = new goog.string.StringBuffer(str.call(null, x));
      var more = ys;
      while (true) {
        if (cljs.core.truth_(more)) {
          var G__21284 = sb.append(str.call(null, cljs.core.first.call(null, more)));
          var G__21285 = cljs.core.next.call(null, more);
          sb = G__21284;
          more = G__21285;
          continue;
        } else {
          return sb.toString();
        }
        break;
      }
    };
    var G__21283 = function(x, var_args) {
      var ys = null;
      if (arguments.length > 1) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__21283__delegate.call(this, x, ys);
    };
    G__21283.cljs$lang$maxFixedArity = 1;
    G__21283.cljs$lang$applyTo = function(arglist__21286) {
      var x = cljs.core.first(arglist__21286);
      var ys = cljs.core.rest(arglist__21286);
      return G__21283__delegate(x, ys);
    };
    G__21283.cljs$core$IFn$_invoke$arity$variadic = G__21283__delegate;
    return G__21283;
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str;
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start);
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end);
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs;
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs = cljs.core.seq.call(null, x);
    var ys = cljs.core.seq.call(null, y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.call(null, cljs.core.first.call(null, xs), cljs.core.first.call(null, ys))) {
            var G__21287 = cljs.core.next.call(null, xs);
            var G__21288 = cljs.core.next.call(null, ys);
            xs = G__21287;
            ys = G__21288;
            continue;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return false;
            } else {
              return null;
            }
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.hash_coll = function hash_coll(coll) {
  if (cljs.core.seq.call(null, coll)) {
    var res = cljs.core.hash.call(null, cljs.core.first.call(null, coll));
    var s = cljs.core.next.call(null, coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__21289 = cljs.core.hash_combine.call(null, res, cljs.core.hash.call(null, cljs.core.first.call(null, s)));
        var G__21290 = cljs.core.next.call(null, s);
        res = G__21289;
        s = G__21290;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq.call(null, m);
  while (true) {
    if (s) {
      var e = cljs.core.first.call(null, s);
      var G__21291 = (h + (cljs.core.hash.call(null, cljs.core.key.call(null, e)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__21292 = cljs.core.next.call(null, s);
      h = G__21291;
      s = G__21292;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq.call(null, s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first.call(null, s__$1);
      var G__21293 = (h + cljs.core.hash.call(null, e)) % 4503599627370496;
      var G__21294 = cljs.core.next.call(null, s__$1);
      h = G__21293;
      s__$1 = G__21294;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__21301_21307 = cljs.core.seq.call(null, fn_map);
  var chunk__21302_21308 = null;
  var count__21303_21309 = 0;
  var i__21304_21310 = 0;
  while (true) {
    if (i__21304_21310 < count__21303_21309) {
      var vec__21305_21311 = cljs.core._nth.call(null, chunk__21302_21308, i__21304_21310);
      var key_name_21312 = cljs.core.nth.call(null, vec__21305_21311, 0, null);
      var f_21313 = cljs.core.nth.call(null, vec__21305_21311, 1, null);
      var str_name_21314 = cljs.core.name.call(null, key_name_21312);
      obj[str_name_21314] = f_21313;
      var G__21315 = seq__21301_21307;
      var G__21316 = chunk__21302_21308;
      var G__21317 = count__21303_21309;
      var G__21318 = i__21304_21310 + 1;
      seq__21301_21307 = G__21315;
      chunk__21302_21308 = G__21316;
      count__21303_21309 = G__21317;
      i__21304_21310 = G__21318;
      continue;
    } else {
      var temp__4092__auto___21319 = cljs.core.seq.call(null, seq__21301_21307);
      if (temp__4092__auto___21319) {
        var seq__21301_21320__$1 = temp__4092__auto___21319;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__21301_21320__$1)) {
          var c__11077__auto___21321 = cljs.core.chunk_first.call(null, seq__21301_21320__$1);
          var G__21322 = cljs.core.chunk_rest.call(null, seq__21301_21320__$1);
          var G__21323 = c__11077__auto___21321;
          var G__21324 = cljs.core.count.call(null, c__11077__auto___21321);
          var G__21325 = 0;
          seq__21301_21307 = G__21322;
          chunk__21302_21308 = G__21323;
          count__21303_21309 = G__21324;
          i__21304_21310 = G__21325;
          continue;
        } else {
          var vec__21306_21326 = cljs.core.first.call(null, seq__21301_21320__$1);
          var key_name_21327 = cljs.core.nth.call(null, vec__21306_21326, 0, null);
          var f_21328 = cljs.core.nth.call(null, vec__21306_21326, 1, null);
          var str_name_21329 = cljs.core.name.call(null, key_name_21327);
          obj[str_name_21329] = f_21328;
          var G__21330 = cljs.core.next.call(null, seq__21301_21320__$1);
          var G__21331 = null;
          var G__21332 = 0;
          var G__21333 = 0;
          seq__21301_21307 = G__21330;
          chunk__21302_21308 = G__21331;
          count__21303_21309 = G__21332;
          i__21304_21310 = G__21333;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__10896__auto__, writer__10897__auto__, opt__10898__auto__) {
  return cljs.core._write.call(null, writer__10897__auto__, "cljs.core/List");
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__10740__auto__ = self__.__hash;
  if (!(h__10740__auto__ == null)) {
    return h__10740__auto__;
  } else {
    var h__10740__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__10740__auto____$1;
    return h__10740__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest.call(null, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.__GT_List = function __GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__10896__auto__, writer__10897__auto__, opt__10898__auto__) {
  return cljs.core._write.call(null, writer__10897__auto__, "cljs.core/EmptyList");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.__GT_EmptyList = function __GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__21335 = coll;
  if (G__21335) {
    var bit__10979__auto__ = G__21335.cljs$lang$protocol_mask$partition0$ & 134217728;
    if (bit__10979__auto__ || G__21335.cljs$core$IReversible$) {
      return true;
    } else {
      if (!G__21335.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__21335);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__21335);
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll);
};
cljs.core.reverse = function reverse(coll) {
  if (cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll);
  } else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while (true) {
        if (!(xs__$1 == null)) {
          arr.push(cljs.core._first.call(null, xs__$1));
          var G__21336 = cljs.core._next.call(null, xs__$1);
          xs__$1 = G__21336;
          continue;
        } else {
          return arr;
        }
        break;
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while (true) {
      if (i > 0) {
        var G__21337 = i - 1;
        var G__21338 = cljs.core._conj.call(null, r, arr[i - 1]);
        i = G__21337;
        r = G__21338;
        continue;
      } else {
        return r;
      }
      break;
    }
  };
  var list = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return list__delegate.call(this, xs);
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__21339) {
    var xs = cljs.core.seq(arglist__21339);
    return list__delegate(xs);
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list;
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__10896__auto__, writer__10897__auto__, opt__10898__auto__) {
  return cljs.core._write.call(null, writer__10897__auto__, "cljs.core/Cons");
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__10740__auto__ = self__.__hash;
  if (!(h__10740__auto__ == null)) {
    return h__10740__auto__;
  } else {
    var h__10740__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__10740__auto____$1;
    return h__10740__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq.call(null, self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_Cons = function __GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.cons = function cons(x, coll) {
  if (function() {
    var or__10329__auto__ = coll == null;
    if (or__10329__auto__) {
      return or__10329__auto__;
    } else {
      var G__21343 = coll;
      if (G__21343) {
        var bit__10972__auto__ = G__21343.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__10972__auto__ || G__21343.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null);
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__21345 = x;
  if (G__21345) {
    var bit__10979__auto__ = G__21345.cljs$lang$protocol_mask$partition0$ & 33554432;
    if (bit__10979__auto__ || G__21345.cljs$core$IList$) {
      return true;
    } else {
      if (!G__21345.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__21345);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__21345);
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__10896__auto__, writer__10897__auto__, opt__10898__auto__) {
  return cljs.core._write.call(null, writer__10897__auto__, "cljs.core/Keyword");
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._hash == null) {
    self__._hash = cljs.core.hash_combine.call(null, cljs.core.hash.call(null, self__.ns), cljs.core.hash.call(null, self__.name)) + 2654435769;
    return self__._hash;
  } else {
    return self__._hash;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__21347 = null;
  var G__21347__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw);
  };
  var G__21347__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw, not_found);
  };
  G__21347 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__21347__2.call(this, self__, coll);
      case 3:
        return G__21347__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__21347;
}();
cljs.core.Keyword.prototype.apply = function(self__, args21346) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args21346)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return[cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.__GT_Keyword = function __GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if (function() {
    var G__21349 = x;
    if (G__21349) {
      var bit__10972__auto__ = G__21349.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__10972__auto__ || G__21349.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._namespace.call(null, x);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if (name instanceof cljs.core.Keyword) {
      return name;
    } else {
      if (name instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(cljs.core.namespace.call(null, name), cljs.core.name.call(null, name), name.str, null);
      } else {
        if (typeof name === "string") {
          var parts = name.split("/");
          if (parts.length === 2) {
            return new cljs.core.Keyword(parts[0], parts[1], name, null);
          } else {
            return new cljs.core.Keyword(null, parts[0], name, null);
          }
        } else {
          return null;
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword;
}();
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__10896__auto__, writer__10897__auto__, opt__10898__auto__) {
  return cljs.core._write.call(null, writer__10897__auto__, "cljs.core/LazySeq");
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__10740__auto__ = self__.__hash;
  if (!(h__10740__auto__ == null)) {
    return h__10740__auto__;
  } else {
    var h__10740__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__10740__auto____$1;
    return h__10740__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = self__.fn.call(null);
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__21350 = ls.sval();
        ls = G__21350;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq.call(null, self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest.call(null, self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_LazySeq = function __GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__10896__auto__, writer__10897__auto__, opt__10898__auto__) {
  return cljs.core._write.call(null, writer__10897__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.__GT_ChunkBuffer = function __GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__10896__auto__, writer__10897__auto__, opt__10898__auto__) {
  return cljs.core._write.call(null, writer__10897__auto__, "cljs.core/ArrayChunk");
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.__GT_ArrayChunk = function __GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length);
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length);
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end);
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk;
}();
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__10896__auto__, writer__10897__auto__, opt__10898__auto__) {
  return cljs.core._write.call(null, writer__10897__auto__, "cljs.core/ChunkedCons");
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__10740__auto__ = self__.__hash;
  if (!(h__10740__auto__ == null)) {
    return h__10740__auto__;
  } else {
    var h__10740__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__10740__auto____$1;
    return h__10740__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq.call(null, self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, o, this$__$1);
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.__GT_ChunkedCons = function __GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if (cljs.core._count.call(null, chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s);
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s);
};
cljs.core.chunk_next = function chunk_next(s) {
  if (function() {
    var G__21352 = s;
    if (G__21352) {
      var bit__10972__auto__ = G__21352.cljs$lang$protocol_mask$partition1$ & 1024;
      if (bit__10972__auto__ || G__21352.cljs$core$IChunkedNext$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._chunked_next.call(null, s);
  } else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s));
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq.call(null, s__$1)) {
      ary.push(cljs.core.first.call(null, s__$1));
      var G__21353 = cljs.core.next.call(null, s__$1);
      s__$1 = G__21353;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count.call(null, coll));
  var i_21354 = 0;
  var xs_21355 = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs_21355) {
      ret[i_21354] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs_21355));
      var G__21356 = i_21354 + 1;
      var G__21357 = cljs.core.next.call(null, xs_21355);
      i_21354 = G__21356;
      xs_21355 = G__21357;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return int_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__21358 = i + 1;
          var G__21359 = cljs.core.next.call(null, s__$1);
          i = G__21358;
          s__$1 = G__21359;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__11177__auto___21360 = size;
      var i_21361 = 0;
      while (true) {
        if (i_21361 < n__11177__auto___21360) {
          a[i_21361] = init_val_or_seq;
          var G__21362 = i_21361 + 1;
          i_21361 = G__21362;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array;
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return long_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__21363 = i + 1;
          var G__21364 = cljs.core.next.call(null, s__$1);
          i = G__21363;
          s__$1 = G__21364;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__11177__auto___21365 = size;
      var i_21366 = 0;
      while (true) {
        if (i_21366 < n__11177__auto___21365) {
          a[i_21366] = init_val_or_seq;
          var G__21367 = i_21366 + 1;
          i_21366 = G__21367;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array;
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return double_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__21368 = i + 1;
          var G__21369 = cljs.core.next.call(null, s__$1);
          i = G__21368;
          s__$1 = G__21369;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__11177__auto___21370 = size;
      var i_21371 = 0;
      while (true) {
        if (i_21371 < n__11177__auto___21370) {
          a[i_21371] = init_val_or_seq;
          var G__21372 = i_21371 + 1;
          i_21371 = G__21372;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array;
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return object_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__21373 = i + 1;
          var G__21374 = cljs.core.next.call(null, s__$1);
          i = G__21373;
          s__$1 = G__21374;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__11177__auto___21375 = size;
      var i_21376 = 0;
      while (true) {
        if (i_21376 < n__11177__auto___21375) {
          a[i_21376] = init_val_or_seq;
          var G__21377 = i_21376 + 1;
          i_21376 = G__21377;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array;
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if (cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq.call(null, s__$1)) {
        var G__21378 = cljs.core.next.call(null, s__$1);
        var G__21379 = i - 1;
        var G__21380 = sum + 1;
        s__$1 = G__21378;
        i = G__21379;
        sum = G__21380;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist));
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)));
      } else {
        return null;
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, function() {
      return null;
    }, null, null);
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return x;
    }, null, null);
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, function() {
      var s = cljs.core.seq.call(null, x);
      if (s) {
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s), concat.call(null, cljs.core.chunk_rest.call(null, s), y));
        } else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), concat.call(null, cljs.core.rest.call(null, s), y));
        }
      } else {
        return y;
      }
    }, null, null);
  };
  var concat__3 = function() {
    var G__21381__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, function() {
          var xys__$1 = cljs.core.seq.call(null, xys);
          if (xys__$1) {
            if (cljs.core.chunked_seq_QMARK_.call(null, xys__$1)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__$1), cat.call(null, cljs.core.chunk_rest.call(null, xys__$1), zs__$1));
            } else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__$1), cat.call(null, cljs.core.rest.call(null, xys__$1), zs__$1));
            }
          } else {
            if (cljs.core.truth_(zs__$1)) {
              return cat.call(null, cljs.core.first.call(null, zs__$1), cljs.core.next.call(null, zs__$1));
            } else {
              return null;
            }
          }
        }, null, null);
      };
      return cat.call(null, concat.call(null, x, y), zs);
    };
    var G__21381 = function(x, y, var_args) {
      var zs = null;
      if (arguments.length > 2) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21381__delegate.call(this, x, y, zs);
    };
    G__21381.cljs$lang$maxFixedArity = 2;
    G__21381.cljs$lang$applyTo = function(arglist__21382) {
      var x = cljs.core.first(arglist__21382);
      arglist__21382 = cljs.core.next(arglist__21382);
      var y = cljs.core.first(arglist__21382);
      var zs = cljs.core.rest(arglist__21382);
      return G__21381__delegate(x, y, zs);
    };
    G__21381.cljs$core$IFn$_invoke$arity$variadic = G__21381__delegate;
    return G__21381;
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat;
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args);
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args);
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args));
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)));
  };
  var list_STAR___5 = function() {
    var G__21383__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))));
    };
    var G__21383 = function(a, b, c, d, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__21383__delegate.call(this, a, b, c, d, more);
    };
    G__21383.cljs$lang$maxFixedArity = 4;
    G__21383.cljs$lang$applyTo = function(arglist__21384) {
      var a = cljs.core.first(arglist__21384);
      arglist__21384 = cljs.core.next(arglist__21384);
      var b = cljs.core.first(arglist__21384);
      arglist__21384 = cljs.core.next(arglist__21384);
      var c = cljs.core.first(arglist__21384);
      arglist__21384 = cljs.core.next(arglist__21384);
      var d = cljs.core.first(arglist__21384);
      var more = cljs.core.rest(arglist__21384);
      return G__21383__delegate(a, b, c, d, more);
    };
    G__21383.cljs$core$IFn$_invoke$arity$variadic = G__21383__delegate;
    return G__21383;
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_;
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll);
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll);
};
cljs.core.conj_BANG_ = function() {
  var conj_BANG_ = null;
  var conj_BANG___2 = function(tcoll, val) {
    return cljs.core._conj_BANG_.call(null, tcoll, val);
  };
  var conj_BANG___3 = function() {
    var G__21385__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._conj_BANG_.call(null, tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__21386 = ntcoll;
          var G__21387 = cljs.core.first.call(null, vals);
          var G__21388 = cljs.core.next.call(null, vals);
          tcoll = G__21386;
          val = G__21387;
          vals = G__21388;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__21385 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21385__delegate.call(this, tcoll, val, vals);
    };
    G__21385.cljs$lang$maxFixedArity = 2;
    G__21385.cljs$lang$applyTo = function(arglist__21389) {
      var tcoll = cljs.core.first(arglist__21389);
      arglist__21389 = cljs.core.next(arglist__21389);
      var val = cljs.core.first(arglist__21389);
      var vals = cljs.core.rest(arglist__21389);
      return G__21385__delegate(tcoll, val, vals);
    };
    G__21385.cljs$core$IFn$_invoke$arity$variadic = G__21385__delegate;
    return G__21385;
  }();
  conj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return conj_BANG___2.call(this, tcoll, val);
      default:
        return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj_BANG_.cljs$lang$maxFixedArity = 2;
  conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
  conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
  conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return conj_BANG_;
}();
cljs.core.assoc_BANG_ = function() {
  var assoc_BANG_ = null;
  var assoc_BANG___3 = function(tcoll, key, val) {
    return cljs.core._assoc_BANG_.call(null, tcoll, key, val);
  };
  var assoc_BANG___4 = function() {
    var G__21390__delegate = function(tcoll, key, val, kvs) {
      while (true) {
        var ntcoll = cljs.core._assoc_BANG_.call(null, tcoll, key, val);
        if (cljs.core.truth_(kvs)) {
          var G__21391 = ntcoll;
          var G__21392 = cljs.core.first.call(null, kvs);
          var G__21393 = cljs.core.second.call(null, kvs);
          var G__21394 = cljs.core.nnext.call(null, kvs);
          tcoll = G__21391;
          key = G__21392;
          val = G__21393;
          kvs = G__21394;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__21390 = function(tcoll, key, val, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__21390__delegate.call(this, tcoll, key, val, kvs);
    };
    G__21390.cljs$lang$maxFixedArity = 3;
    G__21390.cljs$lang$applyTo = function(arglist__21395) {
      var tcoll = cljs.core.first(arglist__21395);
      arglist__21395 = cljs.core.next(arglist__21395);
      var key = cljs.core.first(arglist__21395);
      arglist__21395 = cljs.core.next(arglist__21395);
      var val = cljs.core.first(arglist__21395);
      var kvs = cljs.core.rest(arglist__21395);
      return G__21390__delegate(tcoll, key, val, kvs);
    };
    G__21390.cljs$core$IFn$_invoke$arity$variadic = G__21390__delegate;
    return G__21390;
  }();
  assoc_BANG_ = function(tcoll, key, val, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc_BANG___3.call(this, tcoll, key, val);
      default:
        return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, val, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc_BANG_.cljs$lang$maxFixedArity = 3;
  assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc_BANG_;
}();
cljs.core.dissoc_BANG_ = function() {
  var dissoc_BANG_ = null;
  var dissoc_BANG___2 = function(tcoll, key) {
    return cljs.core._dissoc_BANG_.call(null, tcoll, key);
  };
  var dissoc_BANG___3 = function() {
    var G__21396__delegate = function(tcoll, key, ks) {
      while (true) {
        var ntcoll = cljs.core._dissoc_BANG_.call(null, tcoll, key);
        if (cljs.core.truth_(ks)) {
          var G__21397 = ntcoll;
          var G__21398 = cljs.core.first.call(null, ks);
          var G__21399 = cljs.core.next.call(null, ks);
          tcoll = G__21397;
          key = G__21398;
          ks = G__21399;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__21396 = function(tcoll, key, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21396__delegate.call(this, tcoll, key, ks);
    };
    G__21396.cljs$lang$maxFixedArity = 2;
    G__21396.cljs$lang$applyTo = function(arglist__21400) {
      var tcoll = cljs.core.first(arglist__21400);
      arglist__21400 = cljs.core.next(arglist__21400);
      var key = cljs.core.first(arglist__21400);
      var ks = cljs.core.rest(arglist__21400);
      return G__21396__delegate(tcoll, key, ks);
    };
    G__21396.cljs$core$IFn$_invoke$arity$variadic = G__21396__delegate;
    return G__21396;
  }();
  dissoc_BANG_ = function(tcoll, key, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 2:
        return dissoc_BANG___2.call(this, tcoll, key);
      default:
        return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc_BANG_.cljs$lang$maxFixedArity = 2;
  dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc_BANG_;
}();
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll);
};
cljs.core.disj_BANG_ = function() {
  var disj_BANG_ = null;
  var disj_BANG___2 = function(tcoll, val) {
    return cljs.core._disjoin_BANG_.call(null, tcoll, val);
  };
  var disj_BANG___3 = function() {
    var G__21401__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._disjoin_BANG_.call(null, tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__21402 = ntcoll;
          var G__21403 = cljs.core.first.call(null, vals);
          var G__21404 = cljs.core.next.call(null, vals);
          tcoll = G__21402;
          val = G__21403;
          vals = G__21404;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__21401 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21401__delegate.call(this, tcoll, val, vals);
    };
    G__21401.cljs$lang$maxFixedArity = 2;
    G__21401.cljs$lang$applyTo = function(arglist__21405) {
      var tcoll = cljs.core.first(arglist__21405);
      arglist__21405 = cljs.core.next(arglist__21405);
      var val = cljs.core.first(arglist__21405);
      var vals = cljs.core.rest(arglist__21405);
      return G__21401__delegate(tcoll, val, vals);
    };
    G__21401.cljs$core$IFn$_invoke$arity$variadic = G__21401__delegate;
    return G__21401;
  }();
  disj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return disj_BANG___2.call(this, tcoll, val);
      default:
        return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj_BANG_.cljs$lang$maxFixedArity = 2;
  disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
  disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
  disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return disj_BANG_;
}();
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq.call(null, args);
  if (argc === 0) {
    return f.call(null);
  } else {
    var a = cljs.core._first.call(null, args__$1);
    var args__$2 = cljs.core._rest.call(null, args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a);
      } else {
        return f.call(null, a);
      }
    } else {
      var b = cljs.core._first.call(null, args__$2);
      var args__$3 = cljs.core._rest.call(null, args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a, b);
        } else {
          return f.call(null, a, b);
        }
      } else {
        var c = cljs.core._first.call(null, args__$3);
        var args__$4 = cljs.core._rest.call(null, args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a, b, c);
          } else {
            return f.call(null, a, b, c);
          }
        } else {
          var d = cljs.core._first.call(null, args__$4);
          var args__$5 = cljs.core._rest.call(null, args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a, b, c, d);
            } else {
              return f.call(null, a, b, c, d);
            }
          } else {
            var e = cljs.core._first.call(null, args__$5);
            var args__$6 = cljs.core._rest.call(null, args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e);
              } else {
                return f.call(null, a, b, c, d, e);
              }
            } else {
              var f__$1 = cljs.core._first.call(null, args__$6);
              var args__$7 = cljs.core._rest.call(null, args__$6);
              if (argc === 6) {
                if (f__$1.cljs$core$IFn$_invoke$arity$6) {
                  return f__$1.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f__$1);
                } else {
                  return f__$1.call(null, a, b, c, d, e, f__$1);
                }
              } else {
                var g = cljs.core._first.call(null, args__$7);
                var args__$8 = cljs.core._rest.call(null, args__$7);
                if (argc === 7) {
                  if (f__$1.cljs$core$IFn$_invoke$arity$7) {
                    return f__$1.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f__$1, g);
                  } else {
                    return f__$1.call(null, a, b, c, d, e, f__$1, g);
                  }
                } else {
                  var h = cljs.core._first.call(null, args__$8);
                  var args__$9 = cljs.core._rest.call(null, args__$8);
                  if (argc === 8) {
                    if (f__$1.cljs$core$IFn$_invoke$arity$8) {
                      return f__$1.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f__$1, g, h);
                    } else {
                      return f__$1.call(null, a, b, c, d, e, f__$1, g, h);
                    }
                  } else {
                    var i = cljs.core._first.call(null, args__$9);
                    var args__$10 = cljs.core._rest.call(null, args__$9);
                    if (argc === 9) {
                      if (f__$1.cljs$core$IFn$_invoke$arity$9) {
                        return f__$1.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f__$1, g, h, i);
                      } else {
                        return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i);
                      }
                    } else {
                      var j = cljs.core._first.call(null, args__$10);
                      var args__$11 = cljs.core._rest.call(null, args__$10);
                      if (argc === 10) {
                        if (f__$1.cljs$core$IFn$_invoke$arity$10) {
                          return f__$1.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f__$1, g, h, i, j);
                        } else {
                          return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j);
                        }
                      } else {
                        var k = cljs.core._first.call(null, args__$11);
                        var args__$12 = cljs.core._rest.call(null, args__$11);
                        if (argc === 11) {
                          if (f__$1.cljs$core$IFn$_invoke$arity$11) {
                            return f__$1.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f__$1, g, h, i, j, k);
                          } else {
                            return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k);
                          }
                        } else {
                          var l = cljs.core._first.call(null, args__$12);
                          var args__$13 = cljs.core._rest.call(null, args__$12);
                          if (argc === 12) {
                            if (f__$1.cljs$core$IFn$_invoke$arity$12) {
                              return f__$1.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f__$1, g, h, i, j, k, l);
                            } else {
                              return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l);
                            }
                          } else {
                            var m = cljs.core._first.call(null, args__$13);
                            var args__$14 = cljs.core._rest.call(null, args__$13);
                            if (argc === 13) {
                              if (f__$1.cljs$core$IFn$_invoke$arity$13) {
                                return f__$1.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f__$1, g, h, i, j, k, l, m);
                              } else {
                                return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m);
                              }
                            } else {
                              var n = cljs.core._first.call(null, args__$14);
                              var args__$15 = cljs.core._rest.call(null, args__$14);
                              if (argc === 14) {
                                if (f__$1.cljs$core$IFn$_invoke$arity$14) {
                                  return f__$1.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n);
                                } else {
                                  return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n);
                                }
                              } else {
                                var o = cljs.core._first.call(null, args__$15);
                                var args__$16 = cljs.core._rest.call(null, args__$15);
                                if (argc === 15) {
                                  if (f__$1.cljs$core$IFn$_invoke$arity$15) {
                                    return f__$1.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o);
                                  } else {
                                    return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o);
                                  }
                                } else {
                                  var p = cljs.core._first.call(null, args__$16);
                                  var args__$17 = cljs.core._rest.call(null, args__$16);
                                  if (argc === 16) {
                                    if (f__$1.cljs$core$IFn$_invoke$arity$16) {
                                      return f__$1.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p);
                                    } else {
                                      return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p);
                                    }
                                  } else {
                                    var q = cljs.core._first.call(null, args__$17);
                                    var args__$18 = cljs.core._rest.call(null, args__$17);
                                    if (argc === 17) {
                                      if (f__$1.cljs$core$IFn$_invoke$arity$17) {
                                        return f__$1.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q);
                                      } else {
                                        return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q);
                                      }
                                    } else {
                                      var r = cljs.core._first.call(null, args__$18);
                                      var args__$19 = cljs.core._rest.call(null, args__$18);
                                      if (argc === 18) {
                                        if (f__$1.cljs$core$IFn$_invoke$arity$18) {
                                          return f__$1.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r);
                                        } else {
                                          return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r);
                                        }
                                      } else {
                                        var s = cljs.core._first.call(null, args__$19);
                                        var args__$20 = cljs.core._rest.call(null, args__$19);
                                        if (argc === 19) {
                                          if (f__$1.cljs$core$IFn$_invoke$arity$19) {
                                            return f__$1.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s);
                                          } else {
                                            return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s);
                                          }
                                        } else {
                                          var t = cljs.core._first.call(null, args__$20);
                                          var args__$21 = cljs.core._rest.call(null, args__$20);
                                          if (argc === 20) {
                                            if (f__$1.cljs$core$IFn$_invoke$arity$20) {
                                              return f__$1.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
                                            } else {
                                              return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, args, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, args);
      } else {
        return f.cljs$lang$applyTo(args);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, args));
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__6 = function() {
    var G__21406__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if (f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
        if (bc <= fixed_arity) {
          return cljs.core.apply_to.call(null, f, bc, arglist);
        } else {
          return f.cljs$lang$applyTo(arglist);
        }
      } else {
        return f.apply(f, cljs.core.to_array.call(null, arglist));
      }
    };
    var G__21406 = function(f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 5) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0);
      }
      return G__21406__delegate.call(this, f, a, b, c, d, args);
    };
    G__21406.cljs$lang$maxFixedArity = 5;
    G__21406.cljs$lang$applyTo = function(arglist__21407) {
      var f = cljs.core.first(arglist__21407);
      arglist__21407 = cljs.core.next(arglist__21407);
      var a = cljs.core.first(arglist__21407);
      arglist__21407 = cljs.core.next(arglist__21407);
      var b = cljs.core.first(arglist__21407);
      arglist__21407 = cljs.core.next(arglist__21407);
      var c = cljs.core.first(arglist__21407);
      arglist__21407 = cljs.core.next(arglist__21407);
      var d = cljs.core.first(arglist__21407);
      var args = cljs.core.rest(arglist__21407);
      return G__21406__delegate(f, a, b, c, d, args);
    };
    G__21406.cljs$core$IFn$_invoke$arity$variadic = G__21406__delegate;
    return G__21406;
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply;
}();
cljs.core.vary_meta = function() {
  var vary_meta = null;
  var vary_meta__2 = function(obj, f) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj)));
  };
  var vary_meta__3 = function(obj, f, a) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a));
  };
  var vary_meta__4 = function(obj, f, a, b) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b));
  };
  var vary_meta__5 = function(obj, f, a, b, c) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c));
  };
  var vary_meta__6 = function(obj, f, a, b, c, d) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c, d));
  };
  var vary_meta__7 = function() {
    var G__21408__delegate = function(obj, f, a, b, c, d, args) {
      return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), a, b, c, d, args));
    };
    var G__21408 = function(obj, f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__21408__delegate.call(this, obj, f, a, b, c, d, args);
    };
    G__21408.cljs$lang$maxFixedArity = 6;
    G__21408.cljs$lang$applyTo = function(arglist__21409) {
      var obj = cljs.core.first(arglist__21409);
      arglist__21409 = cljs.core.next(arglist__21409);
      var f = cljs.core.first(arglist__21409);
      arglist__21409 = cljs.core.next(arglist__21409);
      var a = cljs.core.first(arglist__21409);
      arglist__21409 = cljs.core.next(arglist__21409);
      var b = cljs.core.first(arglist__21409);
      arglist__21409 = cljs.core.next(arglist__21409);
      var c = cljs.core.first(arglist__21409);
      arglist__21409 = cljs.core.next(arglist__21409);
      var d = cljs.core.first(arglist__21409);
      var args = cljs.core.rest(arglist__21409);
      return G__21408__delegate(obj, f, a, b, c, d, args);
    };
    G__21408.cljs$core$IFn$_invoke$arity$variadic = G__21408__delegate;
    return G__21408;
  }();
  vary_meta = function(obj, f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return vary_meta__2.call(this, obj, f);
      case 3:
        return vary_meta__3.call(this, obj, f, a);
      case 4:
        return vary_meta__4.call(this, obj, f, a, b);
      case 5:
        return vary_meta__5.call(this, obj, f, a, b, c);
      case 6:
        return vary_meta__6.call(this, obj, f, a, b, c, d);
      default:
        return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj, f, a, b, c, d, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  vary_meta.cljs$lang$maxFixedArity = 6;
  vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
  vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
  vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
  vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
  vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
  vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
  return vary_meta;
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false;
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var not_EQ___3 = function() {
    var G__21410__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more));
    };
    var G__21410 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21410__delegate.call(this, x, y, more);
    };
    G__21410.cljs$lang$maxFixedArity = 2;
    G__21410.cljs$lang$applyTo = function(arglist__21411) {
      var x = cljs.core.first(arglist__21411);
      arglist__21411 = cljs.core.next(arglist__21411);
      var y = cljs.core.first(arglist__21411);
      var more = cljs.core.rest(arglist__21411);
      return G__21410__delegate(x, y, more);
    };
    G__21410.cljs$core$IFn$_invoke$arity$variadic = G__21410__delegate;
    return G__21410;
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_;
}();
cljs.core.not_empty = function not_empty(coll) {
  if (cljs.core.seq.call(null, coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__21412 = pred;
        var G__21413 = cljs.core.next.call(null, coll);
        pred = G__21412;
        coll = G__21413;
        continue;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return false;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll);
};
cljs.core.some = function some(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll)) {
      var or__10329__auto__ = pred.call(null, cljs.core.first.call(null, coll));
      if (cljs.core.truth_(or__10329__auto__)) {
        return or__10329__auto__;
      } else {
        var G__21414 = pred;
        var G__21415 = cljs.core.next.call(null, coll);
        pred = G__21414;
        coll = G__21415;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll));
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if (cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n);
};
cljs.core.identity = function identity(x) {
  return x;
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__21416 = null;
    var G__21416__0 = function() {
      return cljs.core.not.call(null, f.call(null));
    };
    var G__21416__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x));
    };
    var G__21416__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y));
    };
    var G__21416__3 = function() {
      var G__21417__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs));
      };
      var G__21417 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
        }
        return G__21417__delegate.call(this, x, y, zs);
      };
      G__21417.cljs$lang$maxFixedArity = 2;
      G__21417.cljs$lang$applyTo = function(arglist__21418) {
        var x = cljs.core.first(arglist__21418);
        arglist__21418 = cljs.core.next(arglist__21418);
        var y = cljs.core.first(arglist__21418);
        var zs = cljs.core.rest(arglist__21418);
        return G__21417__delegate(x, y, zs);
      };
      G__21417.cljs$core$IFn$_invoke$arity$variadic = G__21417__delegate;
      return G__21417;
    }();
    G__21416 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__21416__0.call(this);
        case 1:
          return G__21416__1.call(this, x);
        case 2:
          return G__21416__2.call(this, x, y);
        default:
          return G__21416__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__21416.cljs$lang$maxFixedArity = 2;
    G__21416.cljs$lang$applyTo = G__21416__3.cljs$lang$applyTo;
    return G__21416;
  }();
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__21419__delegate = function(args) {
      return x;
    };
    var G__21419 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__21419__delegate.call(this, args);
    };
    G__21419.cljs$lang$maxFixedArity = 0;
    G__21419.cljs$lang$applyTo = function(arglist__21420) {
      var args = cljs.core.seq(arglist__21420);
      return G__21419__delegate(args);
    };
    G__21419.cljs$core$IFn$_invoke$arity$variadic = G__21419__delegate;
    return G__21419;
  }();
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity;
  };
  var comp__1 = function(f) {
    return f;
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__21421 = null;
      var G__21421__0 = function() {
        return f.call(null, g.call(null));
      };
      var G__21421__1 = function(x) {
        return f.call(null, g.call(null, x));
      };
      var G__21421__2 = function(x, y) {
        return f.call(null, g.call(null, x, y));
      };
      var G__21421__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z));
      };
      var G__21421__4 = function() {
        var G__21422__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args));
        };
        var G__21422 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__21422__delegate.call(this, x, y, z, args);
        };
        G__21422.cljs$lang$maxFixedArity = 3;
        G__21422.cljs$lang$applyTo = function(arglist__21423) {
          var x = cljs.core.first(arglist__21423);
          arglist__21423 = cljs.core.next(arglist__21423);
          var y = cljs.core.first(arglist__21423);
          arglist__21423 = cljs.core.next(arglist__21423);
          var z = cljs.core.first(arglist__21423);
          var args = cljs.core.rest(arglist__21423);
          return G__21422__delegate(x, y, z, args);
        };
        G__21422.cljs$core$IFn$_invoke$arity$variadic = G__21422__delegate;
        return G__21422;
      }();
      G__21421 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__21421__0.call(this);
          case 1:
            return G__21421__1.call(this, x);
          case 2:
            return G__21421__2.call(this, x, y);
          case 3:
            return G__21421__3.call(this, x, y, z);
          default:
            return G__21421__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__21421.cljs$lang$maxFixedArity = 3;
      G__21421.cljs$lang$applyTo = G__21421__4.cljs$lang$applyTo;
      return G__21421;
    }();
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__21424 = null;
      var G__21424__0 = function() {
        return f.call(null, g.call(null, h.call(null)));
      };
      var G__21424__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)));
      };
      var G__21424__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)));
      };
      var G__21424__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)));
      };
      var G__21424__4 = function() {
        var G__21425__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)));
        };
        var G__21425 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__21425__delegate.call(this, x, y, z, args);
        };
        G__21425.cljs$lang$maxFixedArity = 3;
        G__21425.cljs$lang$applyTo = function(arglist__21426) {
          var x = cljs.core.first(arglist__21426);
          arglist__21426 = cljs.core.next(arglist__21426);
          var y = cljs.core.first(arglist__21426);
          arglist__21426 = cljs.core.next(arglist__21426);
          var z = cljs.core.first(arglist__21426);
          var args = cljs.core.rest(arglist__21426);
          return G__21425__delegate(x, y, z, args);
        };
        G__21425.cljs$core$IFn$_invoke$arity$variadic = G__21425__delegate;
        return G__21425;
      }();
      G__21424 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__21424__0.call(this);
          case 1:
            return G__21424__1.call(this, x);
          case 2:
            return G__21424__2.call(this, x, y);
          case 3:
            return G__21424__3.call(this, x, y, z);
          default:
            return G__21424__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__21424.cljs$lang$maxFixedArity = 3;
      G__21424.cljs$lang$applyTo = G__21424__4.cljs$lang$applyTo;
      return G__21424;
    }();
  };
  var comp__4 = function() {
    var G__21427__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function() {
        var G__21428__delegate = function(args) {
          var ret = cljs.core.apply.call(null, cljs.core.first.call(null, fs__$1), args);
          var fs__$2 = cljs.core.next.call(null, fs__$1);
          while (true) {
            if (fs__$2) {
              var G__21429 = cljs.core.first.call(null, fs__$2).call(null, ret);
              var G__21430 = cljs.core.next.call(null, fs__$2);
              ret = G__21429;
              fs__$2 = G__21430;
              continue;
            } else {
              return ret;
            }
            break;
          }
        };
        var G__21428 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
          }
          return G__21428__delegate.call(this, args);
        };
        G__21428.cljs$lang$maxFixedArity = 0;
        G__21428.cljs$lang$applyTo = function(arglist__21431) {
          var args = cljs.core.seq(arglist__21431);
          return G__21428__delegate(args);
        };
        G__21428.cljs$core$IFn$_invoke$arity$variadic = G__21428__delegate;
        return G__21428;
      }();
    };
    var G__21427 = function(f1, f2, f3, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__21427__delegate.call(this, f1, f2, f3, fs);
    };
    G__21427.cljs$lang$maxFixedArity = 3;
    G__21427.cljs$lang$applyTo = function(arglist__21432) {
      var f1 = cljs.core.first(arglist__21432);
      arglist__21432 = cljs.core.next(arglist__21432);
      var f2 = cljs.core.first(arglist__21432);
      arglist__21432 = cljs.core.next(arglist__21432);
      var f3 = cljs.core.first(arglist__21432);
      var fs = cljs.core.rest(arglist__21432);
      return G__21427__delegate(f1, f2, f3, fs);
    };
    G__21427.cljs$core$IFn$_invoke$arity$variadic = G__21427__delegate;
    return G__21427;
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp;
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__1 = function(f) {
    return f;
  };
  var partial__2 = function(f, arg1) {
    return function() {
      var G__21433__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args);
      };
      var G__21433 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__21433__delegate.call(this, args);
      };
      G__21433.cljs$lang$maxFixedArity = 0;
      G__21433.cljs$lang$applyTo = function(arglist__21434) {
        var args = cljs.core.seq(arglist__21434);
        return G__21433__delegate(args);
      };
      G__21433.cljs$core$IFn$_invoke$arity$variadic = G__21433__delegate;
      return G__21433;
    }();
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__21435__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args);
      };
      var G__21435 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__21435__delegate.call(this, args);
      };
      G__21435.cljs$lang$maxFixedArity = 0;
      G__21435.cljs$lang$applyTo = function(arglist__21436) {
        var args = cljs.core.seq(arglist__21436);
        return G__21435__delegate(args);
      };
      G__21435.cljs$core$IFn$_invoke$arity$variadic = G__21435__delegate;
      return G__21435;
    }();
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__21437__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args);
      };
      var G__21437 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__21437__delegate.call(this, args);
      };
      G__21437.cljs$lang$maxFixedArity = 0;
      G__21437.cljs$lang$applyTo = function(arglist__21438) {
        var args = cljs.core.seq(arglist__21438);
        return G__21437__delegate(args);
      };
      G__21437.cljs$core$IFn$_invoke$arity$variadic = G__21437__delegate;
      return G__21437;
    }();
  };
  var partial__5 = function() {
    var G__21439__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__21440__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args));
        };
        var G__21440 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
          }
          return G__21440__delegate.call(this, args);
        };
        G__21440.cljs$lang$maxFixedArity = 0;
        G__21440.cljs$lang$applyTo = function(arglist__21441) {
          var args = cljs.core.seq(arglist__21441);
          return G__21440__delegate(args);
        };
        G__21440.cljs$core$IFn$_invoke$arity$variadic = G__21440__delegate;
        return G__21440;
      }();
    };
    var G__21439 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__21439__delegate.call(this, f, arg1, arg2, arg3, more);
    };
    G__21439.cljs$lang$maxFixedArity = 4;
    G__21439.cljs$lang$applyTo = function(arglist__21442) {
      var f = cljs.core.first(arglist__21442);
      arglist__21442 = cljs.core.next(arglist__21442);
      var arg1 = cljs.core.first(arglist__21442);
      arglist__21442 = cljs.core.next(arglist__21442);
      var arg2 = cljs.core.first(arglist__21442);
      arglist__21442 = cljs.core.next(arglist__21442);
      var arg3 = cljs.core.first(arglist__21442);
      var more = cljs.core.rest(arglist__21442);
      return G__21439__delegate(f, arg1, arg2, arg3, more);
    };
    G__21439.cljs$core$IFn$_invoke$arity$variadic = G__21439__delegate;
    return G__21439;
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return partial__1.call(this, f);
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial;
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__21443 = null;
      var G__21443__1 = function(a) {
        return f.call(null, a == null ? x : a);
      };
      var G__21443__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b);
      };
      var G__21443__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c);
      };
      var G__21443__4 = function() {
        var G__21444__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds);
        };
        var G__21444 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__21444__delegate.call(this, a, b, c, ds);
        };
        G__21444.cljs$lang$maxFixedArity = 3;
        G__21444.cljs$lang$applyTo = function(arglist__21445) {
          var a = cljs.core.first(arglist__21445);
          arglist__21445 = cljs.core.next(arglist__21445);
          var b = cljs.core.first(arglist__21445);
          arglist__21445 = cljs.core.next(arglist__21445);
          var c = cljs.core.first(arglist__21445);
          var ds = cljs.core.rest(arglist__21445);
          return G__21444__delegate(a, b, c, ds);
        };
        G__21444.cljs$core$IFn$_invoke$arity$variadic = G__21444__delegate;
        return G__21444;
      }();
      G__21443 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__21443__1.call(this, a);
          case 2:
            return G__21443__2.call(this, a, b);
          case 3:
            return G__21443__3.call(this, a, b, c);
          default:
            return G__21443__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__21443.cljs$lang$maxFixedArity = 3;
      G__21443.cljs$lang$applyTo = G__21443__4.cljs$lang$applyTo;
      return G__21443;
    }();
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__21446 = null;
      var G__21446__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__21446__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c);
      };
      var G__21446__4 = function() {
        var G__21447__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds);
        };
        var G__21447 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__21447__delegate.call(this, a, b, c, ds);
        };
        G__21447.cljs$lang$maxFixedArity = 3;
        G__21447.cljs$lang$applyTo = function(arglist__21448) {
          var a = cljs.core.first(arglist__21448);
          arglist__21448 = cljs.core.next(arglist__21448);
          var b = cljs.core.first(arglist__21448);
          arglist__21448 = cljs.core.next(arglist__21448);
          var c = cljs.core.first(arglist__21448);
          var ds = cljs.core.rest(arglist__21448);
          return G__21447__delegate(a, b, c, ds);
        };
        G__21447.cljs$core$IFn$_invoke$arity$variadic = G__21447__delegate;
        return G__21447;
      }();
      G__21446 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__21446__2.call(this, a, b);
          case 3:
            return G__21446__3.call(this, a, b, c);
          default:
            return G__21446__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__21446.cljs$lang$maxFixedArity = 3;
      G__21446.cljs$lang$applyTo = G__21446__4.cljs$lang$applyTo;
      return G__21446;
    }();
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__21449 = null;
      var G__21449__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__21449__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c);
      };
      var G__21449__4 = function() {
        var G__21450__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
        };
        var G__21450 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__21450__delegate.call(this, a, b, c, ds);
        };
        G__21450.cljs$lang$maxFixedArity = 3;
        G__21450.cljs$lang$applyTo = function(arglist__21451) {
          var a = cljs.core.first(arglist__21451);
          arglist__21451 = cljs.core.next(arglist__21451);
          var b = cljs.core.first(arglist__21451);
          arglist__21451 = cljs.core.next(arglist__21451);
          var c = cljs.core.first(arglist__21451);
          var ds = cljs.core.rest(arglist__21451);
          return G__21450__delegate(a, b, c, ds);
        };
        G__21450.cljs$core$IFn$_invoke$arity$variadic = G__21450__delegate;
        return G__21450;
      }();
      G__21449 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__21449__2.call(this, a, b);
          case 3:
            return G__21449__3.call(this, a, b, c);
          default:
            return G__21449__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__21449.cljs$lang$maxFixedArity = 3;
      G__21449.cljs$lang$applyTo = G__21449__4.cljs$lang$applyTo;
      return G__21449;
    }();
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil;
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi = function mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll__$1);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__11177__auto___21452 = size;
          var i_21453 = 0;
          while (true) {
            if (i_21453 < n__11177__auto___21452) {
              cljs.core.chunk_append.call(null, b, f.call(null, idx + i_21453, cljs.core._nth.call(null, c, i_21453)));
              var G__21454 = i_21453 + 1;
              i_21453 = G__21454;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), mapi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi.call(null, 0, coll);
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
        var c = cljs.core.chunk_first.call(null, s);
        var size = cljs.core.count.call(null, c);
        var b = cljs.core.chunk_buffer.call(null, size);
        var n__11177__auto___21455 = size;
        var i_21456 = 0;
        while (true) {
          if (i_21456 < n__11177__auto___21455) {
            var x_21457 = f.call(null, cljs.core._nth.call(null, c, i_21456));
            if (x_21457 == null) {
            } else {
              cljs.core.chunk_append.call(null, b, x_21457);
            }
            var G__21458 = i_21456 + 1;
            i_21456 = G__21458;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keep.call(null, f, cljs.core.chunk_rest.call(null, s)));
      } else {
        var x = f.call(null, cljs.core.first.call(null, s));
        if (x == null) {
          return keep.call(null, f, cljs.core.rest.call(null, s));
        } else {
          return cljs.core.cons.call(null, x, keep.call(null, f, cljs.core.rest.call(null, s)));
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi = function keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll__$1);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__11177__auto___21459 = size;
          var i_21460 = 0;
          while (true) {
            if (i_21460 < n__11177__auto___21459) {
              var x_21461 = f.call(null, idx + i_21460, cljs.core._nth.call(null, c, i_21460));
              if (x_21461 == null) {
              } else {
                cljs.core.chunk_append.call(null, b, x_21461);
              }
              var G__21462 = i_21460 + 1;
              i_21460 = G__21462;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keepi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
        } else {
          var x = f.call(null, idx, cljs.core.first.call(null, s));
          if (x == null) {
            return keepi.call(null, idx + 1, cljs.core.rest.call(null, s));
          } else {
            return cljs.core.cons.call(null, x, keepi.call(null, idx + 1, cljs.core.rest.call(null, s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return keepi.call(null, 0, coll);
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true;
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x));
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__10317__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__10317__auto__)) {
            return p.call(null, y);
          } else {
            return and__10317__auto__;
          }
        }());
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__10317__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__10317__auto__)) {
            var and__10317__auto____$1 = p.call(null, y);
            if (cljs.core.truth_(and__10317__auto____$1)) {
              return p.call(null, z);
            } else {
              return and__10317__auto____$1;
            }
          } else {
            return and__10317__auto__;
          }
        }());
      };
      var ep1__4 = function() {
        var G__21469__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep1.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, p, args));
        };
        var G__21469 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__21469__delegate.call(this, x, y, z, args);
        };
        G__21469.cljs$lang$maxFixedArity = 3;
        G__21469.cljs$lang$applyTo = function(arglist__21470) {
          var x = cljs.core.first(arglist__21470);
          arglist__21470 = cljs.core.next(arglist__21470);
          var y = cljs.core.first(arglist__21470);
          arglist__21470 = cljs.core.next(arglist__21470);
          var z = cljs.core.first(arglist__21470);
          var args = cljs.core.rest(arglist__21470);
          return G__21469__delegate(x, y, z, args);
        };
        G__21469.cljs$core$IFn$_invoke$arity$variadic = G__21469__delegate;
        return G__21469;
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1;
    }();
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true;
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__10317__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__10317__auto__)) {
            return p2.call(null, x);
          } else {
            return and__10317__auto__;
          }
        }());
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__10317__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__10317__auto__)) {
            var and__10317__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__10317__auto____$1)) {
              var and__10317__auto____$2 = p2.call(null, x);
              if (cljs.core.truth_(and__10317__auto____$2)) {
                return p2.call(null, y);
              } else {
                return and__10317__auto____$2;
              }
            } else {
              return and__10317__auto____$1;
            }
          } else {
            return and__10317__auto__;
          }
        }());
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__10317__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__10317__auto__)) {
            var and__10317__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__10317__auto____$1)) {
              var and__10317__auto____$2 = p1.call(null, z);
              if (cljs.core.truth_(and__10317__auto____$2)) {
                var and__10317__auto____$3 = p2.call(null, x);
                if (cljs.core.truth_(and__10317__auto____$3)) {
                  var and__10317__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__10317__auto____$4)) {
                    return p2.call(null, z);
                  } else {
                    return and__10317__auto____$4;
                  }
                } else {
                  return and__10317__auto____$3;
                }
              } else {
                return and__10317__auto____$2;
              }
            } else {
              return and__10317__auto____$1;
            }
          } else {
            return and__10317__auto__;
          }
        }());
      };
      var ep2__4 = function() {
        var G__21471__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep2.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__21463_SHARP_) {
            var and__10317__auto__ = p1.call(null, p1__21463_SHARP_);
            if (cljs.core.truth_(and__10317__auto__)) {
              return p2.call(null, p1__21463_SHARP_);
            } else {
              return and__10317__auto__;
            }
          }, args));
        };
        var G__21471 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__21471__delegate.call(this, x, y, z, args);
        };
        G__21471.cljs$lang$maxFixedArity = 3;
        G__21471.cljs$lang$applyTo = function(arglist__21472) {
          var x = cljs.core.first(arglist__21472);
          arglist__21472 = cljs.core.next(arglist__21472);
          var y = cljs.core.first(arglist__21472);
          arglist__21472 = cljs.core.next(arglist__21472);
          var z = cljs.core.first(arglist__21472);
          var args = cljs.core.rest(arglist__21472);
          return G__21471__delegate(x, y, z, args);
        };
        G__21471.cljs$core$IFn$_invoke$arity$variadic = G__21471__delegate;
        return G__21471;
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2;
    }();
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true;
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__10317__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__10317__auto__)) {
            var and__10317__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__10317__auto____$1)) {
              return p3.call(null, x);
            } else {
              return and__10317__auto____$1;
            }
          } else {
            return and__10317__auto__;
          }
        }());
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__10317__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__10317__auto__)) {
            var and__10317__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__10317__auto____$1)) {
              var and__10317__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__10317__auto____$2)) {
                var and__10317__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__10317__auto____$3)) {
                  var and__10317__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__10317__auto____$4)) {
                    return p3.call(null, y);
                  } else {
                    return and__10317__auto____$4;
                  }
                } else {
                  return and__10317__auto____$3;
                }
              } else {
                return and__10317__auto____$2;
              }
            } else {
              return and__10317__auto____$1;
            }
          } else {
            return and__10317__auto__;
          }
        }());
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__10317__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__10317__auto__)) {
            var and__10317__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__10317__auto____$1)) {
              var and__10317__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__10317__auto____$2)) {
                var and__10317__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__10317__auto____$3)) {
                  var and__10317__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__10317__auto____$4)) {
                    var and__10317__auto____$5 = p3.call(null, y);
                    if (cljs.core.truth_(and__10317__auto____$5)) {
                      var and__10317__auto____$6 = p1.call(null, z);
                      if (cljs.core.truth_(and__10317__auto____$6)) {
                        var and__10317__auto____$7 = p2.call(null, z);
                        if (cljs.core.truth_(and__10317__auto____$7)) {
                          return p3.call(null, z);
                        } else {
                          return and__10317__auto____$7;
                        }
                      } else {
                        return and__10317__auto____$6;
                      }
                    } else {
                      return and__10317__auto____$5;
                    }
                  } else {
                    return and__10317__auto____$4;
                  }
                } else {
                  return and__10317__auto____$3;
                }
              } else {
                return and__10317__auto____$2;
              }
            } else {
              return and__10317__auto____$1;
            }
          } else {
            return and__10317__auto__;
          }
        }());
      };
      var ep3__4 = function() {
        var G__21473__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep3.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__21464_SHARP_) {
            var and__10317__auto__ = p1.call(null, p1__21464_SHARP_);
            if (cljs.core.truth_(and__10317__auto__)) {
              var and__10317__auto____$1 = p2.call(null, p1__21464_SHARP_);
              if (cljs.core.truth_(and__10317__auto____$1)) {
                return p3.call(null, p1__21464_SHARP_);
              } else {
                return and__10317__auto____$1;
              }
            } else {
              return and__10317__auto__;
            }
          }, args));
        };
        var G__21473 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__21473__delegate.call(this, x, y, z, args);
        };
        G__21473.cljs$lang$maxFixedArity = 3;
        G__21473.cljs$lang$applyTo = function(arglist__21474) {
          var x = cljs.core.first(arglist__21474);
          arglist__21474 = cljs.core.next(arglist__21474);
          var y = cljs.core.first(arglist__21474);
          arglist__21474 = cljs.core.next(arglist__21474);
          var z = cljs.core.first(arglist__21474);
          var args = cljs.core.rest(arglist__21474);
          return G__21473__delegate(x, y, z, args);
        };
        G__21473.cljs$core$IFn$_invoke$arity$variadic = G__21473__delegate;
        return G__21473;
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3;
    }();
  };
  var every_pred__4 = function() {
    var G__21475__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var epn = null;
        var epn__0 = function() {
          return true;
        };
        var epn__1 = function(x) {
          return cljs.core.every_QMARK_.call(null, function(p1__21465_SHARP_) {
            return p1__21465_SHARP_.call(null, x);
          }, ps__$1);
        };
        var epn__2 = function(x, y) {
          return cljs.core.every_QMARK_.call(null, function(p1__21466_SHARP_) {
            var and__10317__auto__ = p1__21466_SHARP_.call(null, x);
            if (cljs.core.truth_(and__10317__auto__)) {
              return p1__21466_SHARP_.call(null, y);
            } else {
              return and__10317__auto__;
            }
          }, ps__$1);
        };
        var epn__3 = function(x, y, z) {
          return cljs.core.every_QMARK_.call(null, function(p1__21467_SHARP_) {
            var and__10317__auto__ = p1__21467_SHARP_.call(null, x);
            if (cljs.core.truth_(and__10317__auto__)) {
              var and__10317__auto____$1 = p1__21467_SHARP_.call(null, y);
              if (cljs.core.truth_(and__10317__auto____$1)) {
                return p1__21467_SHARP_.call(null, z);
              } else {
                return and__10317__auto____$1;
              }
            } else {
              return and__10317__auto__;
            }
          }, ps__$1);
        };
        var epn__4 = function() {
          var G__21476__delegate = function(x, y, z, args) {
            return cljs.core.boolean$.call(null, epn.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__21468_SHARP_) {
              return cljs.core.every_QMARK_.call(null, p1__21468_SHARP_, args);
            }, ps__$1));
          };
          var G__21476 = function(x, y, z, var_args) {
            var args = null;
            if (arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
            }
            return G__21476__delegate.call(this, x, y, z, args);
          };
          G__21476.cljs$lang$maxFixedArity = 3;
          G__21476.cljs$lang$applyTo = function(arglist__21477) {
            var x = cljs.core.first(arglist__21477);
            arglist__21477 = cljs.core.next(arglist__21477);
            var y = cljs.core.first(arglist__21477);
            arglist__21477 = cljs.core.next(arglist__21477);
            var z = cljs.core.first(arglist__21477);
            var args = cljs.core.rest(arglist__21477);
            return G__21476__delegate(x, y, z, args);
          };
          G__21476.cljs$core$IFn$_invoke$arity$variadic = G__21476__delegate;
          return G__21476;
        }();
        epn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return epn__0.call(this);
            case 1:
              return epn__1.call(this, x);
            case 2:
              return epn__2.call(this, x, y);
            case 3:
              return epn__3.call(this, x, y, z);
            default:
              return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        epn.cljs$lang$maxFixedArity = 3;
        epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
        epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
        epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
        epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
        epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
        epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
        return epn;
      }();
    };
    var G__21475 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__21475__delegate.call(this, p1, p2, p3, ps);
    };
    G__21475.cljs$lang$maxFixedArity = 3;
    G__21475.cljs$lang$applyTo = function(arglist__21478) {
      var p1 = cljs.core.first(arglist__21478);
      arglist__21478 = cljs.core.next(arglist__21478);
      var p2 = cljs.core.first(arglist__21478);
      arglist__21478 = cljs.core.next(arglist__21478);
      var p3 = cljs.core.first(arglist__21478);
      var ps = cljs.core.rest(arglist__21478);
      return G__21475__delegate(p1, p2, p3, ps);
    };
    G__21475.cljs$core$IFn$_invoke$arity$variadic = G__21475__delegate;
    return G__21475;
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred;
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null;
      };
      var sp1__1 = function(x) {
        return p.call(null, x);
      };
      var sp1__2 = function(x, y) {
        var or__10329__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__10329__auto__)) {
          return or__10329__auto__;
        } else {
          return p.call(null, y);
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__10329__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__10329__auto__)) {
          return or__10329__auto__;
        } else {
          var or__10329__auto____$1 = p.call(null, y);
          if (cljs.core.truth_(or__10329__auto____$1)) {
            return or__10329__auto____$1;
          } else {
            return p.call(null, z);
          }
        }
      };
      var sp1__4 = function() {
        var G__21485__delegate = function(x, y, z, args) {
          var or__10329__auto__ = sp1.call(null, x, y, z);
          if (cljs.core.truth_(or__10329__auto__)) {
            return or__10329__auto__;
          } else {
            return cljs.core.some.call(null, p, args);
          }
        };
        var G__21485 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__21485__delegate.call(this, x, y, z, args);
        };
        G__21485.cljs$lang$maxFixedArity = 3;
        G__21485.cljs$lang$applyTo = function(arglist__21486) {
          var x = cljs.core.first(arglist__21486);
          arglist__21486 = cljs.core.next(arglist__21486);
          var y = cljs.core.first(arglist__21486);
          arglist__21486 = cljs.core.next(arglist__21486);
          var z = cljs.core.first(arglist__21486);
          var args = cljs.core.rest(arglist__21486);
          return G__21485__delegate(x, y, z, args);
        };
        G__21485.cljs$core$IFn$_invoke$arity$variadic = G__21485__delegate;
        return G__21485;
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1;
    }();
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null;
      };
      var sp2__1 = function(x) {
        var or__10329__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__10329__auto__)) {
          return or__10329__auto__;
        } else {
          return p2.call(null, x);
        }
      };
      var sp2__2 = function(x, y) {
        var or__10329__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__10329__auto__)) {
          return or__10329__auto__;
        } else {
          var or__10329__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__10329__auto____$1)) {
            return or__10329__auto____$1;
          } else {
            var or__10329__auto____$2 = p2.call(null, x);
            if (cljs.core.truth_(or__10329__auto____$2)) {
              return or__10329__auto____$2;
            } else {
              return p2.call(null, y);
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__10329__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__10329__auto__)) {
          return or__10329__auto__;
        } else {
          var or__10329__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__10329__auto____$1)) {
            return or__10329__auto____$1;
          } else {
            var or__10329__auto____$2 = p1.call(null, z);
            if (cljs.core.truth_(or__10329__auto____$2)) {
              return or__10329__auto____$2;
            } else {
              var or__10329__auto____$3 = p2.call(null, x);
              if (cljs.core.truth_(or__10329__auto____$3)) {
                return or__10329__auto____$3;
              } else {
                var or__10329__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__10329__auto____$4)) {
                  return or__10329__auto____$4;
                } else {
                  return p2.call(null, z);
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__21487__delegate = function(x, y, z, args) {
          var or__10329__auto__ = sp2.call(null, x, y, z);
          if (cljs.core.truth_(or__10329__auto__)) {
            return or__10329__auto__;
          } else {
            return cljs.core.some.call(null, function(p1__21479_SHARP_) {
              var or__10329__auto____$1 = p1.call(null, p1__21479_SHARP_);
              if (cljs.core.truth_(or__10329__auto____$1)) {
                return or__10329__auto____$1;
              } else {
                return p2.call(null, p1__21479_SHARP_);
              }
            }, args);
          }
        };
        var G__21487 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__21487__delegate.call(this, x, y, z, args);
        };
        G__21487.cljs$lang$maxFixedArity = 3;
        G__21487.cljs$lang$applyTo = function(arglist__21488) {
          var x = cljs.core.first(arglist__21488);
          arglist__21488 = cljs.core.next(arglist__21488);
          var y = cljs.core.first(arglist__21488);
          arglist__21488 = cljs.core.next(arglist__21488);
          var z = cljs.core.first(arglist__21488);
          var args = cljs.core.rest(arglist__21488);
          return G__21487__delegate(x, y, z, args);
        };
        G__21487.cljs$core$IFn$_invoke$arity$variadic = G__21487__delegate;
        return G__21487;
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2;
    }();
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null;
      };
      var sp3__1 = function(x) {
        var or__10329__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__10329__auto__)) {
          return or__10329__auto__;
        } else {
          var or__10329__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__10329__auto____$1)) {
            return or__10329__auto____$1;
          } else {
            return p3.call(null, x);
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__10329__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__10329__auto__)) {
          return or__10329__auto__;
        } else {
          var or__10329__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__10329__auto____$1)) {
            return or__10329__auto____$1;
          } else {
            var or__10329__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__10329__auto____$2)) {
              return or__10329__auto____$2;
            } else {
              var or__10329__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__10329__auto____$3)) {
                return or__10329__auto____$3;
              } else {
                var or__10329__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__10329__auto____$4)) {
                  return or__10329__auto____$4;
                } else {
                  return p3.call(null, y);
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__10329__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__10329__auto__)) {
          return or__10329__auto__;
        } else {
          var or__10329__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__10329__auto____$1)) {
            return or__10329__auto____$1;
          } else {
            var or__10329__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__10329__auto____$2)) {
              return or__10329__auto____$2;
            } else {
              var or__10329__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__10329__auto____$3)) {
                return or__10329__auto____$3;
              } else {
                var or__10329__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__10329__auto____$4)) {
                  return or__10329__auto____$4;
                } else {
                  var or__10329__auto____$5 = p3.call(null, y);
                  if (cljs.core.truth_(or__10329__auto____$5)) {
                    return or__10329__auto____$5;
                  } else {
                    var or__10329__auto____$6 = p1.call(null, z);
                    if (cljs.core.truth_(or__10329__auto____$6)) {
                      return or__10329__auto____$6;
                    } else {
                      var or__10329__auto____$7 = p2.call(null, z);
                      if (cljs.core.truth_(or__10329__auto____$7)) {
                        return or__10329__auto____$7;
                      } else {
                        return p3.call(null, z);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__21489__delegate = function(x, y, z, args) {
          var or__10329__auto__ = sp3.call(null, x, y, z);
          if (cljs.core.truth_(or__10329__auto__)) {
            return or__10329__auto__;
          } else {
            return cljs.core.some.call(null, function(p1__21480_SHARP_) {
              var or__10329__auto____$1 = p1.call(null, p1__21480_SHARP_);
              if (cljs.core.truth_(or__10329__auto____$1)) {
                return or__10329__auto____$1;
              } else {
                var or__10329__auto____$2 = p2.call(null, p1__21480_SHARP_);
                if (cljs.core.truth_(or__10329__auto____$2)) {
                  return or__10329__auto____$2;
                } else {
                  return p3.call(null, p1__21480_SHARP_);
                }
              }
            }, args);
          }
        };
        var G__21489 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__21489__delegate.call(this, x, y, z, args);
        };
        G__21489.cljs$lang$maxFixedArity = 3;
        G__21489.cljs$lang$applyTo = function(arglist__21490) {
          var x = cljs.core.first(arglist__21490);
          arglist__21490 = cljs.core.next(arglist__21490);
          var y = cljs.core.first(arglist__21490);
          arglist__21490 = cljs.core.next(arglist__21490);
          var z = cljs.core.first(arglist__21490);
          var args = cljs.core.rest(arglist__21490);
          return G__21489__delegate(x, y, z, args);
        };
        G__21489.cljs$core$IFn$_invoke$arity$variadic = G__21489__delegate;
        return G__21489;
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3;
    }();
  };
  var some_fn__4 = function() {
    var G__21491__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var spn = null;
        var spn__0 = function() {
          return null;
        };
        var spn__1 = function(x) {
          return cljs.core.some.call(null, function(p1__21481_SHARP_) {
            return p1__21481_SHARP_.call(null, x);
          }, ps__$1);
        };
        var spn__2 = function(x, y) {
          return cljs.core.some.call(null, function(p1__21482_SHARP_) {
            var or__10329__auto__ = p1__21482_SHARP_.call(null, x);
            if (cljs.core.truth_(or__10329__auto__)) {
              return or__10329__auto__;
            } else {
              return p1__21482_SHARP_.call(null, y);
            }
          }, ps__$1);
        };
        var spn__3 = function(x, y, z) {
          return cljs.core.some.call(null, function(p1__21483_SHARP_) {
            var or__10329__auto__ = p1__21483_SHARP_.call(null, x);
            if (cljs.core.truth_(or__10329__auto__)) {
              return or__10329__auto__;
            } else {
              var or__10329__auto____$1 = p1__21483_SHARP_.call(null, y);
              if (cljs.core.truth_(or__10329__auto____$1)) {
                return or__10329__auto____$1;
              } else {
                return p1__21483_SHARP_.call(null, z);
              }
            }
          }, ps__$1);
        };
        var spn__4 = function() {
          var G__21492__delegate = function(x, y, z, args) {
            var or__10329__auto__ = spn.call(null, x, y, z);
            if (cljs.core.truth_(or__10329__auto__)) {
              return or__10329__auto__;
            } else {
              return cljs.core.some.call(null, function(p1__21484_SHARP_) {
                return cljs.core.some.call(null, p1__21484_SHARP_, args);
              }, ps__$1);
            }
          };
          var G__21492 = function(x, y, z, var_args) {
            var args = null;
            if (arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
            }
            return G__21492__delegate.call(this, x, y, z, args);
          };
          G__21492.cljs$lang$maxFixedArity = 3;
          G__21492.cljs$lang$applyTo = function(arglist__21493) {
            var x = cljs.core.first(arglist__21493);
            arglist__21493 = cljs.core.next(arglist__21493);
            var y = cljs.core.first(arglist__21493);
            arglist__21493 = cljs.core.next(arglist__21493);
            var z = cljs.core.first(arglist__21493);
            var args = cljs.core.rest(arglist__21493);
            return G__21492__delegate(x, y, z, args);
          };
          G__21492.cljs$core$IFn$_invoke$arity$variadic = G__21492__delegate;
          return G__21492;
        }();
        spn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return spn__0.call(this);
            case 1:
              return spn__1.call(this, x);
            case 2:
              return spn__2.call(this, x, y);
            case 3:
              return spn__3.call(this, x, y, z);
            default:
              return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        spn.cljs$lang$maxFixedArity = 3;
        spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
        spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
        spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
        spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
        spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
        spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
        return spn;
      }();
    };
    var G__21491 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__21491__delegate.call(this, p1, p2, p3, ps);
    };
    G__21491.cljs$lang$maxFixedArity = 3;
    G__21491.cljs$lang$applyTo = function(arglist__21494) {
      var p1 = cljs.core.first(arglist__21494);
      arglist__21494 = cljs.core.next(arglist__21494);
      var p2 = cljs.core.first(arglist__21494);
      arglist__21494 = cljs.core.next(arglist__21494);
      var p3 = cljs.core.first(arglist__21494);
      var ps = cljs.core.rest(arglist__21494);
      return G__21491__delegate(p1, p2, p3, ps);
    };
    G__21491.cljs$core$IFn$_invoke$arity$variadic = G__21491__delegate;
    return G__21491;
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn;
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__11177__auto___21496 = size;
          var i_21497 = 0;
          while (true) {
            if (i_21497 < n__11177__auto___21496) {
              cljs.core.chunk_append.call(null, b, f.call(null, cljs.core._nth.call(null, c, i_21497)));
              var G__21498 = i_21497 + 1;
              i_21497 = G__21498;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), map.call(null, f, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s)), map.call(null, f, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if (s1 && s2) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      var s3 = cljs.core.seq.call(null, c3);
      if (s1 && (s2 && s3)) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2), cljs.core.first.call(null, s3)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2), cljs.core.rest.call(null, s3)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__5 = function() {
    var G__21499__delegate = function(f, c1, c2, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, function() {
          var ss = map.call(null, cljs.core.seq, cs);
          if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss), step.call(null, map.call(null, cljs.core.rest, ss)));
          } else {
            return null;
          }
        }, null, null);
      };
      return map.call(null, function(p1__21495_SHARP_) {
        return cljs.core.apply.call(null, f, p1__21495_SHARP_);
      }, step.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)));
    };
    var G__21499 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__21499__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__21499.cljs$lang$maxFixedArity = 4;
    G__21499.cljs$lang$applyTo = function(arglist__21500) {
      var f = cljs.core.first(arglist__21500);
      arglist__21500 = cljs.core.next(arglist__21500);
      var c1 = cljs.core.first(arglist__21500);
      arglist__21500 = cljs.core.next(arglist__21500);
      var c2 = cljs.core.first(arglist__21500);
      arglist__21500 = cljs.core.next(arglist__21500);
      var c3 = cljs.core.first(arglist__21500);
      var colls = cljs.core.rest(arglist__21500);
      return G__21499__delegate(f, c1, c2, c3, colls);
    };
    G__21499.cljs$core$IFn$_invoke$arity$variadic = G__21499__delegate;
    return G__21499;
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map;
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    if (n > 0) {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take.call(null, n - 1, cljs.core.rest.call(null, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.drop = function drop(n, coll) {
  var step = function(n__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq.call(null, coll__$1);
      if (n__$1 > 0 && s) {
        var G__21501 = n__$1 - 1;
        var G__21502 = cljs.core.rest.call(null, s);
        n__$1 = G__21501;
        coll__$1 = G__21502;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function() {
    return step.call(null, n, coll);
  }, null, null);
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s);
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x;
    }, s, cljs.core.drop.call(null, n, s));
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last;
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq.call(null, coll);
  var lead = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while (true) {
    if (lead) {
      var G__21503 = cljs.core.next.call(null, s);
      var G__21504 = cljs.core.next.call(null, lead);
      s = G__21503;
      lead = G__21504;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq.call(null, coll__$1);
      if (cljs.core.truth_(function() {
        var and__10317__auto__ = s;
        if (and__10317__auto__) {
          return pred__$1.call(null, cljs.core.first.call(null, s));
        } else {
          return and__10317__auto__;
        }
      }())) {
        var G__21505 = pred__$1;
        var G__21506 = cljs.core.rest.call(null, s);
        pred__$1 = G__21505;
        coll__$1 = G__21506;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function() {
    return step.call(null, pred, coll);
  }, null, null);
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      return cljs.core.concat.call(null, s, cycle.call(null, s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], null);
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x));
    }, null, null);
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x));
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat;
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x));
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f));
    }, null, null);
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f));
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly;
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, function() {
    return iterate.call(null, f, f.call(null, x));
  }, null, null));
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if (s1 && s2) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1), cljs.core.cons.call(null, cljs.core.first.call(null, s2), interleave.call(null, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2))));
      } else {
        return null;
      }
    }, null, null);
  };
  var interleave__3 = function() {
    var G__21507__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, function() {
        var ss = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss)));
        } else {
          return null;
        }
      }, null, null);
    };
    var G__21507 = function(c1, c2, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21507__delegate.call(this, c1, c2, colls);
    };
    G__21507.cljs$lang$maxFixedArity = 2;
    G__21507.cljs$lang$applyTo = function(arglist__21508) {
      var c1 = cljs.core.first(arglist__21508);
      arglist__21508 = cljs.core.next(arglist__21508);
      var c2 = cljs.core.first(arglist__21508);
      var colls = cljs.core.rest(arglist__21508);
      return G__21507__delegate(c1, c2, colls);
    };
    G__21507.cljs$core$IFn$_invoke$arity$variadic = G__21507__delegate;
    return G__21507;
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave;
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll));
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4090__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4090__auto__) {
        var coll__$1 = temp__4090__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__$1), cat.call(null, cljs.core.rest.call(null, coll__$1), colls__$1));
      } else {
        if (cljs.core.seq.call(null, colls__$1)) {
          return cat.call(null, cljs.core.first.call(null, colls__$1), cljs.core.rest.call(null, colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat.call(null, null, colls);
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll));
  };
  var mapcat__3 = function() {
    var G__21509__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls));
    };
    var G__21509 = function(f, coll, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21509__delegate.call(this, f, coll, colls);
    };
    G__21509.cljs$lang$maxFixedArity = 2;
    G__21509.cljs$lang$applyTo = function(arglist__21510) {
      var f = cljs.core.first(arglist__21510);
      arglist__21510 = cljs.core.next(arglist__21510);
      var coll = cljs.core.first(arglist__21510);
      var colls = cljs.core.rest(arglist__21510);
      return G__21509__delegate(f, coll, colls);
    };
    G__21509.cljs$core$IFn$_invoke$arity$variadic = G__21509__delegate;
    return G__21509;
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$core$IFn$_invoke$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$2 = mapcat__2;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__3.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat;
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
        var c = cljs.core.chunk_first.call(null, s);
        var size = cljs.core.count.call(null, c);
        var b = cljs.core.chunk_buffer.call(null, size);
        var n__11177__auto___21511 = size;
        var i_21512 = 0;
        while (true) {
          if (i_21512 < n__11177__auto___21511) {
            if (cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c, i_21512)))) {
              cljs.core.chunk_append.call(null, b, cljs.core._nth.call(null, c, i_21512));
            } else {
            }
            var G__21513 = i_21512 + 1;
            i_21512 = G__21513;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), filter.call(null, pred, cljs.core.chunk_rest.call(null, s)));
      } else {
        var f = cljs.core.first.call(null, s);
        var r = cljs.core.rest.call(null, s);
        if (cljs.core.truth_(pred.call(null, f))) {
          return cljs.core.cons.call(null, f, filter.call(null, pred, r));
        } else {
          return filter.call(null, pred, r);
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll);
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null);
    }, null, null);
  };
  return walk.call(null, root);
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__21514_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__21514_SHARP_);
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function into(to, from) {
  if (!(to == null)) {
    if (function() {
      var G__21516 = to;
      if (G__21516) {
        var bit__10972__auto__ = G__21516.cljs$lang$protocol_mask$partition1$ & 4;
        if (bit__10972__auto__ || G__21516.cljs$core$IEditableCollection$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from));
    } else {
      return cljs.core.reduce.call(null, cljs.core._conj, to, from);
    }
  } else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, from);
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o));
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2));
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3));
  };
  var mapv__5 = function() {
    var G__21517__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls));
    };
    var G__21517 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__21517__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__21517.cljs$lang$maxFixedArity = 4;
    G__21517.cljs$lang$applyTo = function(arglist__21518) {
      var f = cljs.core.first(arglist__21518);
      arglist__21518 = cljs.core.next(arglist__21518);
      var c1 = cljs.core.first(arglist__21518);
      arglist__21518 = cljs.core.next(arglist__21518);
      var c2 = cljs.core.first(arglist__21518);
      arglist__21518 = cljs.core.next(arglist__21518);
      var c3 = cljs.core.first(arglist__21518);
      var colls = cljs.core.rest(arglist__21518);
      return G__21517__delegate(f, c1, c2, c3, colls);
    };
    G__21517.cljs$core$IFn$_invoke$arity$variadic = G__21517__delegate;
    return G__21517;
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv;
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if (cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll);
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, cljs.core.drop.call(null, step, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s)));
        } else {
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.take.call(null, n, cljs.core.concat.call(null, p, pad)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition;
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.call(null, m, ks, null);
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq.call(null, ks);
    while (true) {
      if (ks__$1) {
        if (!function() {
          var G__21520 = m__$1;
          if (G__21520) {
            var bit__10979__auto__ = G__21520.cljs$lang$protocol_mask$partition0$ & 256;
            if (bit__10979__auto__ || G__21520.cljs$core$ILookup$) {
              return true;
            } else {
              if (!G__21520.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__21520);
              } else {
                return false;
              }
            }
          } else {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__21520);
          }
        }()) {
          return not_found;
        } else {
          var m__$2 = cljs.core.get.call(null, m__$1, cljs.core.first.call(null, ks__$1), sentinel);
          if (sentinel === m__$2) {
            return not_found;
          } else {
            var G__21521 = sentinel;
            var G__21522 = m__$2;
            var G__21523 = cljs.core.next.call(null, ks__$1);
            sentinel = G__21521;
            m__$1 = G__21522;
            ks__$1 = G__21523;
            continue;
          }
        }
      } else {
        return m__$1;
      }
      break;
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in;
}();
cljs.core.assoc_in = function assoc_in(m, p__21524, v) {
  var vec__21526 = p__21524;
  var k = cljs.core.nth.call(null, vec__21526, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__21526, 1);
  if (ks) {
    return cljs.core.assoc.call(null, m, k, assoc_in.call(null, cljs.core.get.call(null, m, k), ks, v));
  } else {
    return cljs.core.assoc.call(null, m, k, v);
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__21527, f) {
    var vec__21537 = p__21527;
    var k = cljs.core.nth.call(null, vec__21537, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__21537, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k)));
    }
  };
  var update_in__4 = function(m, p__21528, f, a) {
    var vec__21538 = p__21528;
    var k = cljs.core.nth.call(null, vec__21538, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__21538, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a));
    }
  };
  var update_in__5 = function(m, p__21529, f, a, b) {
    var vec__21539 = p__21529;
    var k = cljs.core.nth.call(null, vec__21539, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__21539, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b));
    }
  };
  var update_in__6 = function(m, p__21530, f, a, b, c) {
    var vec__21540 = p__21530;
    var k = cljs.core.nth.call(null, vec__21540, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__21540, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b, c));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b, c));
    }
  };
  var update_in__7 = function() {
    var G__21542__delegate = function(m, p__21531, f, a, b, c, args) {
      var vec__21541 = p__21531;
      var k = cljs.core.nth.call(null, vec__21541, 0, null);
      var ks = cljs.core.nthnext.call(null, vec__21541, 1);
      if (ks) {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, update_in, cljs.core.get.call(null, m, k), ks, f, a, b, c, args));
      } else {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, f, cljs.core.get.call(null, m, k), a, b, c, args));
      }
    };
    var G__21542 = function(m, p__21531, f, a, b, c, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__21542__delegate.call(this, m, p__21531, f, a, b, c, args);
    };
    G__21542.cljs$lang$maxFixedArity = 6;
    G__21542.cljs$lang$applyTo = function(arglist__21543) {
      var m = cljs.core.first(arglist__21543);
      arglist__21543 = cljs.core.next(arglist__21543);
      var p__21531 = cljs.core.first(arglist__21543);
      arglist__21543 = cljs.core.next(arglist__21543);
      var f = cljs.core.first(arglist__21543);
      arglist__21543 = cljs.core.next(arglist__21543);
      var a = cljs.core.first(arglist__21543);
      arglist__21543 = cljs.core.next(arglist__21543);
      var b = cljs.core.first(arglist__21543);
      arglist__21543 = cljs.core.next(arglist__21543);
      var c = cljs.core.first(arglist__21543);
      var args = cljs.core.rest(arglist__21543);
      return G__21542__delegate(m, p__21531, f, a, b, c, args);
    };
    G__21542.cljs$core$IFn$_invoke$arity$variadic = G__21542__delegate;
    return G__21542;
  }();
  update_in = function(m, p__21531, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__21531, f);
      case 4:
        return update_in__4.call(this, m, p__21531, f, a);
      case 5:
        return update_in__5.call(this, m, p__21531, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__21531, f, a, b, c);
      default:
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__21531, f, a, b, c, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in;
}();
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__10899__auto__, writer__10900__auto__, opts__10901__auto__) {
  return cljs.core._write.call(null, writer__10900__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function __GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone.call(null, node.arr));
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node.call(null, edit);
      var _ = cljs.core.pv_aset.call(null, r, 0, embed);
      var G__21544 = ll - 5;
      var G__21545 = r;
      ll = G__21544;
      ret = G__21545;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node.call(null, parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset.call(null, ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget.call(null, parent, subidx);
    if (!(child == null)) {
      var node_to_insert = push_tail.call(null, pv, level - 5, child, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.array_for = function array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    if (i >= cljs.core.tail_off.call(null, pv)) {
      return pv.tail;
    } else {
      var node = pv.root;
      var level = pv.shift;
      while (true) {
        if (level > 0) {
          var G__21546 = cljs.core.pv_aget.call(null, node, i >>> level & 31);
          var G__21547 = level - 5;
          node = G__21546;
          level = G__21547;
          continue;
        } else {
          return node.arr;
        }
        break;
      }
    }
  } else {
    return cljs.core.vector_index_out_of_bounds.call(null, i, pv.cnt);
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node.call(null, node);
  if (level === 0) {
    cljs.core.pv_aset.call(null, ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret, subidx, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var ret = cljs.core.pv_clone_node.call(null, node);
        cljs.core.pv_aset.call(null, ret, subidx, null);
        return ret;
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__10896__auto__, writer__10897__auto__, opt__10898__auto__) {
  return cljs.core._write.call(null, writer__10897__auto__, "cljs.core/PersistentVector");
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.call(null, self__.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__10740__auto__ = self__.__hash;
  if (!(h__10740__auto__ == null)) {
    return h__10740__auto__;
  } else {
    var h__10740__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__10740__auto____$1;
    return h__10740__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, not_found);
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n.call(null, coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__21549 = null;
  var G__21549__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__21549__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__21549 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__21549__2.call(this, self__, k);
      case 3:
        return G__21549__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__21549;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args21548) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args21548)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var step_init = [0, init];
  var i = 0;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.array_for.call(null, v__$1, i);
      var len = arr.length;
      var init__$1 = function() {
        var j = 0;
        var init__$1 = step_init[1];
        while (true) {
          if (j < len) {
            var init__$2 = f.call(null, init__$1, j + i, arr[j]);
            if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
              return init__$2;
            } else {
              var G__21550 = j + 1;
              var G__21551 = init__$2;
              j = G__21550;
              init__$1 = G__21551;
              continue;
            }
          } else {
            step_init[0] = len;
            step_init[1] = init__$1;
            return init__$1;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
        return cljs.core.deref.call(null, init__$1);
      } else {
        var G__21552 = i + step_init[0];
        i = G__21552;
        continue;
      }
    } else {
      return step_init[1];
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off.call(null, coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__11177__auto___21553 = len;
    var i_21554 = 0;
    while (true) {
      if (i_21554 < n__11177__auto___21553) {
        new_tail[i_21554] = self__.tail[i_21554];
        var G__21555 = i_21554 + 1;
        i_21554 = G__21555;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r, 0, self__.root);
      cljs.core.pv_aset.call(null, n_r, 1, cljs.core.new_path.call(null, null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail.call(null, coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 1);
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f, start);
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt < 32) {
      return cljs.core.array_seq.call(null, self__.tail);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.chunked_seq.call(null, coll__$1, 0, 0);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.call(null, coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off.call(null, coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var new_tail = cljs.core.array_for.call(null, coll__$1, self__.cnt - 2);
          var nr = cljs.core.pop_tail.call(null, coll__$1, self__.shift, self__.root);
          var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
          var cnt_1 = self__.cnt - 1;
          if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget.call(null, new_root, 0), new_tail, null);
          } else {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
          }
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off.call(null, coll__$1) <= n) {
      var new_tail = cljs.core.aclone.call(null, self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc.call(null, coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj.call(null, coll__$1, val);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.call(null, coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentVector = function __GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone.call(null, xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = cljs.core._as_transient.call(null, v);
    while (true) {
      if (i < l) {
        var G__21556 = i + 1;
        var G__21557 = cljs.core.conj_BANG_.call(null, out, xs__$1[i]);
        i = G__21556;
        out = G__21557;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
      return cljs.core.PersistentVector.fromArray.call(null, args.arr, true);
    } else {
      return cljs.core.vec.call(null, args);
    }
  };
  var vector = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return vector__delegate.call(this, args);
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__21558) {
    var args = cljs.core.seq(arglist__21558);
    return vector__delegate(args);
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector;
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32243948;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__10896__auto__, writer__10897__auto__, opt__10898__auto__) {
  return cljs.core._write.call(null, writer__10897__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__10740__auto__ = self__.__hash;
  if (!(h__10740__auto__ == null)) {
    return h__10740__auto__;
  } else {
    var h__10740__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__10740__auto____$1;
    return h__10740__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var l = self__.node.length;
  var s = self__.i + l < cljs.core._count.call(null, self__.vec) ? cljs.core.chunked_seq.call(null, self__.vec, self__.i + l, 0) : null;
  if (s == null) {
    return null;
  } else {
    return s;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.call(null, self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var l = self__.node.length;
  var s = self__.i + l < cljs.core._count.call(null, self__.vec) ? cljs.core.chunked_seq.call(null, self__.vec, self__.i + l, 0) : null;
  if (s == null) {
    return cljs.core.List.EMPTY;
  } else {
    return s;
  }
};
cljs.core.__GT_ChunkedSeq = function __GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for.call(null, vec, i), i, off, null, null);
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq;
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166617887;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__10896__auto__, writer__10897__auto__, opt__10898__auto__) {
  return cljs.core._write.call(null, writer__10897__auto__, "cljs.core/Subvec");
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__10740__auto__ = self__.__hash;
  if (!(h__10740__auto__ == null)) {
    return h__10740__auto__;
  } else {
    var h__10740__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__10740__auto____$1;
    return h__10740__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, not_found);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n.call(null, coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.call = function() {
  var G__21560 = null;
  var G__21560__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__21560__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__21560 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__21560__2.call(this, self__, k);
      case 3:
        return G__21560__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__21560;
}();
cljs.core.Subvec.prototype.apply = function(self__, args21559) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args21559)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core._assoc_n.call(null, self__.v, self__.end, o), self__.start, self__.end + 1, null);
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function subvec_seq(i) {
    if (i === self__.end) {
      return null;
    } else {
      return cljs.core.cons.call(null, cljs.core._nth.call(null, self__.v, i), new cljs.core.LazySeq(null, function() {
        return subvec_seq.call(null, i + 1);
      }, null, null));
    }
  };
  return subvec_seq.call(null, self__.start);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    return cljs.core.build_subvec.call(null, self__.meta, self__.v, self__.start, self__.end - 1, null);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core.assoc.call(null, self__.v, v_pos, val), self__.start, function() {
    var x__10636__auto__ = self__.end;
    var y__10637__auto__ = v_pos + 1;
    return x__10636__auto__ > y__10637__auto__ ? x__10636__auto__ : y__10637__auto__;
  }(), null);
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds.call(null, n, self__.end - self__.start);
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.__GT_Subvec = function __GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__21561 = meta;
      var G__21562 = v.v;
      var G__21563 = v.start + start;
      var G__21564 = v.start + end;
      var G__21565 = __hash;
      meta = G__21561;
      v = G__21562;
      start = G__21563;
      end = G__21564;
      __hash = G__21565;
      continue;
    } else {
      var c = cljs.core.count.call(null, v);
      if (start < 0 || (end < 0 || (start > c || end > c))) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v));
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec.call(null, null, v, start, end, null);
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec;
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone.call(null, node.arr));
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode(function() {
    var obj21569 = {};
    return obj21569;
  }(), cljs.core.aclone.call(null, node.arr));
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy.call(null, tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget.call(null, ret, subidx);
    if (!(child == null)) {
      return tv_push_tail.call(null, tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset.call(null, node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        cljs.core.pv_aset.call(null, node__$1, subidx, null);
        return node__$1;
      } else {
        return null;
      }
    }
  }
};
cljs.core.editable_array_for = function editable_array_for(tv, i) {
  if (0 <= i && i < tv.cnt) {
    if (i >= cljs.core.tail_off.call(null, tv)) {
      return tv.tail;
    } else {
      var root = tv.root;
      var node = root;
      var level = tv.shift;
      while (true) {
        if (level > 0) {
          var G__21570 = cljs.core.tv_ensure_editable.call(null, root.edit, cljs.core.pv_aget.call(null, node, i >>> level & 31));
          var G__21571 = level - 5;
          node = G__21570;
          level = G__21571;
          continue;
        } else {
          return node.arr;
        }
        break;
      }
    }
  } else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in transient vector of length "), cljs.core.str(tv.cnt)].join(""));
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88;
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__10896__auto__, writer__10897__auto__, opt__10898__auto__) {
  return cljs.core._write.call(null, writer__10897__auto__, "cljs.core/TransientVector");
};
cljs.core.TransientVector.prototype.call = function() {
  var G__21573 = null;
  var G__21573__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__21573__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__21573 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__21573__2.call(this, self__, k);
      case 3:
        return G__21573__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__21573;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args21572) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args21572)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.call(null, coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off.call(null, tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function go(level, node) {
          var node__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, node);
          if (level === 0) {
            cljs.core.pv_aset.call(null, node__$1, n & 31, val);
            return node__$1;
          } else {
            var subidx = n >>> level & 31;
            cljs.core.pv_aset.call(null, node__$1, subidx, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx)));
            return node__$1;
          }
        }.call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_.call(null, tcoll__$1, val);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
        } else {
          return null;
        }
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var new_tail = cljs.core.editable_array_for.call(null, tcoll__$1, self__.cnt - 2);
            var new_root = function() {
              var nr = cljs.core.tv_pop_tail.call(null, tcoll__$1, self__.shift, self__.root);
              if (!(nr == null)) {
                return nr;
              } else {
                return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
              }
            }();
            if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
              var new_root__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, cljs.core.pv_aget.call(null, new_root, 0));
              self__.root = new_root__$1;
              self__.shift = self__.shift - 5;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll__$1;
            } else {
              self__.root = new_root;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll__$1;
            }
          } else {
            return null;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._assoc_n_BANG_.call(null, tcoll__$1, key, val);
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off.call(null, tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path.call(null, self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail.call(null, tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off.call(null, tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy.call(null, self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientVector = function __GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__10896__auto__, writer__10897__auto__, opt__10898__auto__) {
  return cljs.core._write.call(null, writer__10897__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__10740__auto__ = self__.__hash;
  if (!(h__10740__auto__ == null)) {
    return h__10740__auto__;
  } else {
    var h__10740__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__10740__auto____$1;
    return h__10740__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4090__auto__ = cljs.core.next.call(null, self__.front);
  if (temp__4090__auto__) {
    var f1 = temp__4090__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentQueueSeq = function __GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__10896__auto__, writer__10897__auto__, opt__10898__auto__) {
  return cljs.core._write.call(null, writer__10897__auto__, "cljs.core/PersistentQueue");
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__10740__auto__ = self__.__hash;
  if (!(h__10740__auto__ == null)) {
    return h__10740__auto__;
  } else {
    var h__10740__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__10740__auto____$1;
    return h__10740__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.call(null, function() {
      var or__10329__auto__ = self__.rear;
      if (cljs.core.truth_(or__10329__auto__)) {
        return or__10329__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.call(null, self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq.call(null, self__.rear);
  if (cljs.core.truth_(function() {
    var or__10329__auto__ = self__.front;
    if (cljs.core.truth_(or__10329__auto__)) {
      return or__10329__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq.call(null, rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4090__auto__ = cljs.core.next.call(null, self__.front);
    if (temp__4090__auto__) {
      var f1 = temp__4090__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq.call(null, self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.PersistentQueue.EMPTY;
};
cljs.core.__GT_PersistentQueue = function __GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__10896__auto__, writer__10897__auto__, opt__10898__auto__) {
  return cljs.core._write.call(null, writer__10897__auto__, "cljs.core/NeverEquiv");
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.__GT_NeverEquiv = function __GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core.get.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__21574 = i + incr;
        i = G__21574;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash.call(null, a);
  var b__$1 = cljs.core.hash.call(null, b);
  if (a__$1 < b__$1) {
    return-1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return 0;
      } else {
        return null;
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta.call(null, m);
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__21575 = i + 1;
      var G__21576 = cljs.core.assoc_BANG_.call(null, out, k__$1, so[k__$1]);
      i = G__21575;
      out = G__21576;
      continue;
    } else {
      return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = function() {
    var obj21580 = {};
    return obj21580;
  }();
  var l = ks.length;
  var i_21581 = 0;
  while (true) {
    if (i_21581 < l) {
      var k_21582 = ks[i_21581];
      new_obj[k_21582] = obj[k_21582];
      var G__21583 = i_21581 + 1;
      i_21581 = G__21583;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__10896__auto__, writer__10897__auto__, opt__10898__auto__) {
  return cljs.core._write.call(null, writer__10897__auto__, "cljs.core/ObjMap");
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__10740__auto__ = self__.__hash;
  if (!(h__10740__auto__ == null)) {
    return h__10740__auto__;
  } else {
    var h__10740__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__10740__auto____$1;
    return h__10740__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k)) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone.call(null, self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__21586 = null;
  var G__21586__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__21586__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__21586 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__21586__2.call(this, self__, k);
      case 3:
        return G__21586__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__21586;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args21585) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args21585)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq.call(null, keys__$1)) {
      var k = cljs.core.first.call(null, keys__$1);
      var init__$2 = f.call(null, init__$1, k, self__.strobj[k]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__21587 = cljs.core.rest.call(null, keys__$1);
        var G__21588 = init__$2;
        keys__$1 = G__21587;
        init__$1 = G__21588;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.call(null, function(p1__21584_SHARP_) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__21584_SHARP_, self__.strobj[p1__21584_SHARP_]], null);
    }, self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone.call(null, self__.keys);
    var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array.call(null, 1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.__GT_ObjMap = function __GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], function() {
  var obj21590 = {};
  return obj21590;
}(), 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__21591 = i + 2;
          i = G__21591;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_keyword_QMARK_ = function array_map_index_of_keyword_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn;
      }()) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__21592 = i + 2;
          i = G__21592;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str;
      }()) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__21593 = i + 2;
          i = G__21593;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__21594 = i + 2;
          i = G__21594;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (cljs.core._EQ_.call(null, k, arr[i])) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__21595 = i + 2;
          i = G__21595;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_map_index_of_keyword_QMARK_.call(null, arr, m, k);
  } else {
    if (goog.isString(k) || typeof k === "number") {
      return cljs.core.array_map_index_of_identical_QMARK_.call(null, arr, m, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_map_index_of_symbol_QMARK_.call(null, arr, m, k);
      } else {
        if (k == null) {
          return cljs.core.array_map_index_of_nil_QMARK_.call(null, arr, m, k);
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return cljs.core.array_map_index_of_equiv_QMARK_.call(null, arr, m, k);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_21596 = 0;
  while (true) {
    if (i_21596 < l) {
      narr[i_21596] = arr[i_21596];
      var G__21597 = i_21596 + 1;
      i_21596 = G__21597;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__10896__auto__, writer__10897__auto__, opt__10898__auto__) {
  return cljs.core._write.call(null, writer__10897__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return(self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.__GT_PersistentArrayMapSeq = function __GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.persistent_array_map_seq = function persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__10896__auto__, writer__10897__auto__, opt__10898__auto__) {
  return cljs.core._write.call(null, writer__10897__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap(function() {
    var obj21600 = {};
    return obj21600;
  }(), self__.arr.length, cljs.core.aclone.call(null, self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__10740__auto__ = self__.__hash;
  if (!(h__10740__auto__ == null)) {
    return h__10740__auto__;
  } else {
    var h__10740__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__10740__auto____$1;
    return h__10740__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv.call(null, coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta.call(null, cljs.core._assoc.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var arr__$1 = function() {
          var G__21601 = cljs.core.aclone.call(null, self__.arr);
          G__21601[idx + 1] = v;
          return G__21601;
        }();
        return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(cljs.core.array_map_index_of.call(null, coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__21602 = null;
  var G__21602__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__21602__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__21602 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__21602__2.call(this, self__, k);
      case 3:
        return G__21602__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__21602;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args21598) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args21598)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = f.call(null, init__$1, self__.arr[i], self__.arr[i + 1]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__21603 = i + 2;
        var G__21604 = init__$2;
        i = G__21603;
        init__$1 = G__21604;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq.call(null, self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.call(null, k, self__.arr[s])) {
            var G__21605 = s + 2;
            var G__21606 = d;
            s = G__21605;
            d = G__21606;
            continue;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              new_arr[d] = self__.arr[s];
              new_arr[d + 1] = self__.arr[s + 1];
              var G__21607 = s + 2;
              var G__21608 = d + 2;
              s = G__21607;
              d = G__21608;
              continue;
            } else {
              return null;
            }
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.__GT_PersistentArrayMap = function __GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone.call(null, arr);
  if (no_check) {
    var cnt = arr__$1.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null);
  } else {
    var len = arr__$1.length;
    var i = 0;
    var ret = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__21609 = i + 2;
        var G__21610 = cljs.core._assoc_BANG_.call(null, ret, arr__$1[i], arr__$1[i + 1]);
        i = G__21609;
        ret = G__21610;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, ret);
      }
      break;
    }
  }
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__10896__auto__, writer__10897__auto__, opt__10898__auto__) {
  return cljs.core._write.call(null, writer__10897__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__21611_21613 = self__.arr;
      G__21611_21613.pop();
      G__21611_21613.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (function() {
      var G__21612 = o;
      if (G__21612) {
        var bit__10979__auto__ = G__21612.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__10979__auto__ || G__21612.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__21612.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__21612);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__21612);
      }
    }()) {
      return cljs.core._assoc_BANG_.call(null, tcoll__$1, cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4090__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4090__auto__)) {
          var e = temp__4090__auto__;
          var G__21614 = cljs.core.next.call(null, es);
          var G__21615 = cljs.core._assoc_BANG_.call(null, tcoll__$2, cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__21614;
          tcoll__$2 = G__21615;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot.call(null, self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.__GT_TransientArrayMap = function __GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__21616 = cljs.core.assoc_BANG_.call(null, out, arr[i], arr[i + 1]);
      var G__21617 = i + 2;
      out = G__21616;
      i = G__21617;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__10899__auto__, writer__10900__auto__, opts__10901__auto__) {
  return cljs.core._write.call(null, writer__10900__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function __GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, key, other)) {
      return true;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core._EQ_.call(null, key, other);
      } else {
        return null;
      }
    }
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__21620 = cljs.core.aclone.call(null, arr);
    G__21620[i] = a;
    return G__21620;
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__21621 = cljs.core.aclone.call(null, arr);
    G__21621[i] = a;
    G__21621[j] = b;
    return G__21621;
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set;
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1);
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable;
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable;
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set;
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          return f.call(null, init__$1, k, arr[i + 1]);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__21622 = i + 2;
        var G__21623 = init__$2;
        i = G__21622;
        init__$1 = G__21623;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__10896__auto__, writer__10897__auto__, opt__10898__auto__) {
  return cljs.core._write.call(null, writer__10897__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy.call(null, earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_21624 = 0;
        var j_21625 = 0;
        while (true) {
          if (i_21624 < 32) {
            if ((self__.bitmap >>> i_21624 & 1) === 0) {
              var G__21626 = i_21624 + 1;
              var G__21627 = j_21625;
              i_21624 = G__21626;
              j_21625 = G__21627;
              continue;
            } else {
              nodes[i_21624] = !(self__.arr[j_21625] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash.call(null, self__.arr[j_21625]), self__.arr[j_21625], self__.arr[j_21625 + 1], added_leaf_QMARK_) : self__.arr[j_21625 + 1];
              var G__21628 = i_21624 + 1;
              var G__21629 = j_21625 + 2;
              i_21624 = G__21628;
              j_21625 = G__21629;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var new_arr = new Array(2 * (n + 4));
          cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
          new_arr[2 * idx] = key;
          new_arr[2 * idx + 1] = val;
          cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
          added_leaf_QMARK_.val = true;
          var editable = inode.ensure_editable(edit__$1);
          editable.arr = new_arr;
          editable.bitmap = editable.bitmap | bit;
          return editable;
        } else {
          return null;
        }
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          added_leaf_QMARK_.val = true;
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, edit__$1, shift + 5, key_or_nil, val_or_node, hash, key, val));
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return inode.edit_and_remove_pair(edit__$1, bit, idx);
            } else {
              return null;
            }
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return inode;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
            } else {
              return null;
            }
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return inode;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_21630 = 0;
      var j_21631 = 0;
      while (true) {
        if (i_21630 < 32) {
          if ((self__.bitmap >>> i_21630 & 1) === 0) {
            var G__21632 = i_21630 + 1;
            var G__21633 = j_21631;
            i_21630 = G__21632;
            j_21631 = G__21633;
            continue;
          } else {
            nodes[i_21630] = !(self__.arr[j_21631] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, self__.arr[j_21631]), self__.arr[j_21631], self__.arr[j_21631 + 1], added_leaf_QMARK_) : self__.arr[j_21631 + 1];
            var G__21634 = i_21630 + 1;
            var G__21635 = j_21631 + 2;
            i_21630 = G__21634;
            j_21631 = G__21635;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, val));
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          added_leaf_QMARK_.val = true;
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil, val_or_node, hash, key, val)));
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return val_or_node;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.__GT_BitmapIndexedNode = function __GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = 2 * (array_node.cnt - 1);
  var new_arr = new Array(len);
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__21636 = i + 1;
        var G__21637 = j + 2;
        var G__21638 = bitmap | 1 << i;
        i = G__21636;
        j = G__21637;
        bitmap = G__21638;
        continue;
      } else {
        var G__21639 = i + 1;
        var G__21640 = j;
        var G__21641 = bitmap;
        i = G__21639;
        j = G__21640;
        bitmap = G__21641;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__10896__auto__, writer__10897__auto__, opt__10898__auto__) {
  return cljs.core._write.call(null, writer__10897__auto__, "cljs.core/ArrayNode");
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.call(null, self__.arr);
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone.call(null, self__.arr));
  }
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
          return cljs.core.deref.call(null, init__$2);
        } else {
          var G__21642 = i + 1;
          var G__21643 = init__$2;
          i = G__21642;
          init__$1 = G__21643;
          continue;
        }
      } else {
        var G__21644 = i + 1;
        var G__21645 = init__$1;
        i = G__21644;
        init__$1 = G__21645;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
        } else {
          return null;
        }
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.call(null, self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.__GT_ArrayNode = function __GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test.call(null, key, arr[i])) {
        return i;
      } else {
        var G__21646 = i + 2;
        i = G__21646;
        continue;
      }
    } else {
      return-1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__10896__auto__, writer__10897__auto__, opt__10898__auto__) {
  return cljs.core._write.call(null, writer__10897__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair.call(null, self__.arr, cljs.core.quot.call(null, idx, 2)));
      } else {
        return null;
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.call(null, self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx + 1, val));
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.__GT_HashCollisionNode = function __GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node;
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__10896__auto__, writer__10897__auto__, opt__10898__auto__) {
  return cljs.core._write.call(null, writer__10897__auto__, "cljs.core/NodeSeq");
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__10740__auto__ = self__.__hash;
  if (!(h__10740__auto__ == null)) {
    return h__10740__auto__;
  } else {
    var h__10740__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__10740__auto____$1;
    return h__10740__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i + 2, null);
  } else {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_NodeSeq = function __GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null);
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          if (!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null);
          } else {
            var temp__4090__auto__ = nodes[j + 1];
            if (cljs.core.truth_(temp__4090__auto__)) {
              var node = temp__4090__auto__;
              var temp__4090__auto____$1 = node.inode_seq();
              if (cljs.core.truth_(temp__4090__auto____$1)) {
                var node_seq = temp__4090__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
              } else {
                var G__21647 = j + 2;
                j = G__21647;
                continue;
              }
            } else {
              var G__21648 = j + 2;
              j = G__21648;
              continue;
            }
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null);
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq;
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__10896__auto__, writer__10897__auto__, opt__10898__auto__) {
  return cljs.core._write.call(null, writer__10897__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__10740__auto__ = self__.__hash;
  if (!(h__10740__auto__ == null)) {
    return h__10740__auto__;
  } else {
    var h__10740__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__10740__auto____$1;
    return h__10740__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.create_array_node_seq.call(null, null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_ArrayNodeSeq = function __GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null);
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          var temp__4090__auto__ = nodes[j];
          if (cljs.core.truth_(temp__4090__auto__)) {
            var nj = temp__4090__auto__;
            var temp__4090__auto____$1 = nj.inode_seq();
            if (cljs.core.truth_(temp__4090__auto____$1)) {
              var ns = temp__4090__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
            } else {
              var G__21649 = j + 1;
              j = G__21649;
              continue;
            }
          } else {
            var G__21650 = j + 1;
            j = G__21650;
            continue;
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq;
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__10896__auto__, writer__10897__auto__, opt__10898__auto__) {
  return cljs.core._write.call(null, writer__10897__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap(function() {
    var obj21653 = {};
    return obj21653;
  }(), self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__10740__auto__ = self__.__hash;
  if (!(h__10740__auto__ == null)) {
    return h__10740__auto__;
  } else {
    var h__10740__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__10740__auto____$1;
    return h__10740__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return!(self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__21654 = null;
  var G__21654__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__21654__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__21654 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__21654__2.call(this, self__, k);
      case 3:
        return G__21654__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__21654;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args21651) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args21651)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.call(null, init, null, self__.nil_val) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return init__$1;
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var new_root = self__.root.inode_without(0, cljs.core.hash.call(null, k), k);
        if (new_root === self__.root) {
          return coll__$1;
        } else {
          return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.__GT_PersistentHashMap = function __GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__21655 = i + 1;
      var G__21656 = cljs.core._assoc_BANG_.call(null, out, ks[i], vs[i]);
      i = G__21655;
      out = G__21656;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, out);
    }
    break;
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__10896__auto__, writer__10897__auto__, opt__10898__auto__) {
  return cljs.core._write.call(null, writer__10897__auto__, "cljs.core/TransientHashMap");
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (function() {
      var G__21657 = o;
      if (G__21657) {
        var bit__10979__auto__ = G__21657.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__10979__auto__ || G__21657.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__21657.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__21657);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__21657);
      }
    }()) {
      return tcoll.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4090__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4090__auto__)) {
          var e = temp__4090__auto__;
          var G__21658 = cljs.core.next.call(null, es);
          var G__21659 = tcoll__$1.assoc_BANG_(cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__21658;
          tcoll__$1 = G__21659;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientHashMap = function __GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__21660 = ascending_QMARK_ ? t.left : t.right;
      var G__21661 = cljs.core.conj.call(null, stack__$1, t);
      t = G__21660;
      stack__$1 = G__21661;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__10896__auto__, writer__10897__auto__, opt__10898__auto__) {
  return cljs.core._write.call(null, writer__10897__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__10740__auto__ = self__.__hash;
  if (!(h__10740__auto__ == null)) {
    return h__10740__auto__;
  } else {
    var h__10740__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__10740__auto____$1;
    return h__10740__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek.call(null, self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first.call(null, self__.stack);
  var next_stack = cljs.core.tree_map_seq_push.call(null, self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next.call(null, self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentTreeMapSeq = function __GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.BlackNode(key, val, ins, right, null);
        } else {
          return null;
        }
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.BlackNode(key, val, left, ins, null);
        } else {
          return null;
        }
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error("red-black tree invariant violation");
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error("red-black tree invariant violation");
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    var init__$2 = f.call(null, init__$1, node.key, node.val);
    if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
      return cljs.core.deref.call(null, init__$2);
    } else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_.call(null, init__$3)) {
        return cljs.core.deref.call(null, init__$3);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__10896__auto__, writer__10897__auto__, opt__10898__auto__) {
  return cljs.core._write.call(null, writer__10897__auto__, "cljs.core/BlackNode");
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__10740__auto__ = self__.__hash;
  if (!(h__10740__auto__ == null)) {
    return h__10740__auto__;
  } else {
    var h__10740__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__10740__auto____$1;
    return h__10740__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__21663 = null;
  var G__21663__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__21663__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__21663 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__21663__2.call(this, self__, k);
      case 3:
        return G__21663__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__21663;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args21662) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args21662)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del.call(null, self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del.call(null, self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return null;
      } else {
        return null;
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.__GT_BlackNode = function __GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__10896__auto__, writer__10897__auto__, opt__10898__auto__) {
  return cljs.core._write.call(null, writer__10897__auto__, "cljs.core/RedNode");
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__10740__auto__ = self__.__hash;
  if (!(h__10740__auto__ == null)) {
    return h__10740__auto__;
  } else {
    var h__10740__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__10740__auto____$1;
    return h__10740__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.call = function() {
  var G__21665 = null;
  var G__21665__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__21665__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__21665 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__21665__2.call(this, self__, k);
      case 3:
        return G__21665__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__21665;
}();
cljs.core.RedNode.prototype.apply = function(self__, args21664) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args21664)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return null;
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.__GT_RedNode = function __GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = tree_map_add.call(null, comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var ins = tree_map_add.call(null, comp, tree.right, k, v, found);
          if (!(ins == null)) {
            return tree.add_right(ins);
          } else {
            return null;
          }
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = tree_map_append.call(null, left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null);
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var app = tree_map_append.call(null, left.right, right.left);
            if (app instanceof cljs.core.RedNode) {
              return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
            } else {
              return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
            }
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = tree_map_remove.call(null, comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var del = tree_map_remove.call(null, comp, tree.right, k, found);
          if (!(del == null) || !(found[0] == null)) {
            if (tree.right instanceof cljs.core.BlackNode) {
              return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del);
            } else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
            }
          } else {
            return null;
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.call(null, k, tk);
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return tree.replace(tk, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v));
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__10896__auto__, writer__10897__auto__, opt__10898__auto__) {
  return cljs.core._write.call(null, writer__10897__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__10740__auto__ = self__.__hash;
  if (!(h__10740__auto__ == null)) {
    return h__10740__auto__;
  } else {
    var h__10740__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__10740__auto____$1;
    return h__10740__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add.call(null, self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.call(null, found, 0);
    if (cljs.core._EQ_.call(null, v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace.call(null, self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__21667 = null;
  var G__21667__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__21667__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__21667 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__21667__2.call(this, self__, k);
      case 3:
        return G__21667__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__21667;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args21666) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args21666)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = self__.comp.call(null, k, t.key);
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__21668 = t.left;
          t = G__21668;
          continue;
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var G__21669 = t.right;
            t = G__21669;
            continue;
          } else {
            return null;
          }
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = self__.comp.call(null, k, t.key);
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__21670 = cljs.core.conj.call(null, stack, t);
              var G__21671 = t.left;
              stack = G__21670;
              t = G__21671;
              continue;
            } else {
              var G__21672 = stack;
              var G__21673 = t.right;
              stack = G__21672;
              t = G__21673;
              continue;
            }
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              if (c > 0) {
                var G__21674 = cljs.core.conj.call(null, stack, t);
                var G__21675 = t.right;
                stack = G__21674;
                t = G__21675;
                continue;
              } else {
                var G__21676 = stack;
                var G__21677 = t.left;
                stack = G__21676;
                t = G__21677;
                continue;
              }
            } else {
              return null;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key.call(null, entry);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove.call(null, self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.call(null, found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.__GT_PersistentTreeMap = function __GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while (true) {
      if (in$) {
        var G__21678 = cljs.core.nnext.call(null, in$);
        var G__21679 = cljs.core.assoc_BANG_.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__21678;
        out = G__21679;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return hash_map__delegate.call(this, keyvals);
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__21680) {
    var keyvals = cljs.core.seq(arglist__21680);
    return hash_map__delegate(keyvals);
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map;
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null);
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return array_map__delegate.call(this, keyvals);
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__21681) {
    var keyvals = cljs.core.seq(arglist__21681);
    return array_map__delegate(keyvals);
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map;
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = function() {
      var obj21685 = {};
      return obj21685;
    }();
    var kvs = cljs.core.seq.call(null, keyvals);
    while (true) {
      if (kvs) {
        ks.push(cljs.core.first.call(null, kvs));
        obj[cljs.core.first.call(null, kvs)] = cljs.core.second.call(null, kvs);
        var G__21686 = cljs.core.nnext.call(null, kvs);
        kvs = G__21686;
        continue;
      } else {
        return cljs.core.ObjMap.fromObject.call(null, ks, obj);
      }
      break;
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return obj_map__delegate.call(this, keyvals);
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__21687) {
    var keyvals = cljs.core.seq(arglist__21687);
    return obj_map__delegate(keyvals);
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map;
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while (true) {
      if (in$) {
        var G__21688 = cljs.core.nnext.call(null, in$);
        var G__21689 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__21688;
        out = G__21689;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_map__delegate.call(this, keyvals);
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__21690) {
    var keyvals = cljs.core.seq(arglist__21690);
    return sorted_map__delegate(keyvals);
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map;
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator.call(null, comparator), null, 0, null, 0);
    while (true) {
      if (in$) {
        var G__21691 = cljs.core.nnext.call(null, in$);
        var G__21692 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__21691;
        out = G__21692;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if (arguments.length > 1) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals);
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__21693) {
    var comparator = cljs.core.first(arglist__21693);
    var keyvals = cljs.core.rest(arglist__21693);
    return sorted_map_by__delegate(comparator, keyvals);
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by;
}();
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__10896__auto__, writer__10897__auto__, opt__10898__auto__) {
  return cljs.core._write.call(null, writer__10897__auto__, "cljs.core/KeySeq");
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__21694 = self__.mseq;
    if (G__21694) {
      var bit__10979__auto__ = G__21694.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__10979__auto__ || G__21694.cljs$core$INext$) {
        return true;
      } else {
        if (!G__21694.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__21694);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__21694);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._key.call(null, me);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__21695 = self__.mseq;
    if (G__21695) {
      var bit__10979__auto__ = G__21695.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__10979__auto__ || G__21695.cljs$core$INext$) {
        return true;
      } else {
        if (!G__21695.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__21695);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__21695);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.__GT_KeySeq = function __GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.keys = function keys(hash_map) {
  var temp__4092__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4092__auto__) {
    var mseq = temp__4092__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__10896__auto__, writer__10897__auto__, opt__10898__auto__) {
  return cljs.core._write.call(null, writer__10897__auto__, "cljs.core/ValSeq");
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__21696 = self__.mseq;
    if (G__21696) {
      var bit__10979__auto__ = G__21696.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__10979__auto__ || G__21696.cljs$core$INext$) {
        return true;
      } else {
        if (!G__21696.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__21696);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__21696);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._val.call(null, me);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__21697 = self__.mseq;
    if (G__21697) {
      var bit__10979__auto__ = G__21697.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__10979__auto__ || G__21697.cljs$core$INext$) {
        return true;
      } else {
        if (!G__21697.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__21697);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__21697);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.__GT_ValSeq = function __GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.vals = function vals(hash_map) {
  var temp__4092__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4092__auto__) {
    var mseq = temp__4092__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry);
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__21698_SHARP_, p2__21699_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__10329__auto__ = p1__21698_SHARP_;
          if (cljs.core.truth_(or__10329__auto__)) {
            return or__10329__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), p2__21699_SHARP_);
      }, maps);
    } else {
      return null;
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return merge__delegate.call(this, maps);
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__21700) {
    var maps = cljs.core.seq(arglist__21700);
    return merge__delegate(maps);
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge;
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first.call(null, e);
        var v = cljs.core.second.call(null, e);
        if (cljs.core.contains_QMARK_.call(null, m, k)) {
          return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), v));
        } else {
          return cljs.core.assoc.call(null, m, k, v);
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.call(null, merge_entry, function() {
            var or__10329__auto__ = m1;
            if (cljs.core.truth_(or__10329__auto__)) {
              return or__10329__auto__;
            } else {
              return cljs.core.PersistentArrayMap.EMPTY;
            }
          }(), cljs.core.seq.call(null, m2));
        };
      }(merge_entry);
      return cljs.core.reduce.call(null, merge2, maps);
    } else {
      return null;
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if (arguments.length > 1) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return merge_with__delegate.call(this, f, maps);
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__21701) {
    var f = cljs.core.first(arglist__21701);
    var maps = cljs.core.rest(arglist__21701);
    return merge_with__delegate(f, maps);
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with;
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq.call(null, keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first.call(null, keys);
      var entry = cljs.core.get.call(null, map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", 4155500789));
      var G__21702 = cljs.core.not_EQ_.call(null, entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", 4155500789)) ? cljs.core.assoc.call(null, ret, key, entry) : ret;
      var G__21703 = cljs.core.next.call(null, keys);
      ret = G__21702;
      keys = G__21703;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__10896__auto__, writer__10897__auto__, opt__10898__auto__) {
  return cljs.core._write.call(null, writer__10897__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient.call(null, self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__10740__auto__ = self__.__hash;
  if (!(h__10740__auto__ == null)) {
    return h__10740__auto__;
  } else {
    var h__10740__auto____$1 = cljs.core.hash_iset.call(null, coll__$1);
    self__.__hash = h__10740__auto____$1;
    return h__10740__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_.call(null, self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__21706 = null;
  var G__21706__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__21706__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__21706 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__21706__2.call(this, self__, k);
      case 3:
        return G__21706__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__21706;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args21705) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args21705)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.call(null, self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc.call(null, self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && (cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(p1__21704_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, coll__$1, p1__21704_SHARP_);
  }, other));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentHashSet = function __GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, 0);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone.call(null, items);
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__21707 = i + 1;
        var G__21708 = cljs.core._assoc_BANG_.call(null, out, items[i], null);
        i = G__21707;
        out = G__21708;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_.call(null, out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__21709 = i + 1;
        var G__21710 = cljs.core._conj_BANG_.call(null, out, items[i]);
        i = G__21709;
        out = G__21710;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136;
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__10896__auto__, writer__10897__auto__, opt__10898__auto__) {
  return cljs.core._write.call(null, writer__10897__auto__, "cljs.core/TransientHashSet");
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__21712 = null;
  var G__21712__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__21712__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__21712 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__21712__2.call(this, self__, k);
      case 3:
        return G__21712__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__21712;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args21711) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args21711)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.call(null, self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count.call(null, self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.call(null, self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.call(null, self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, self__.transient_map), null);
};
cljs.core.__GT_TransientHashSet = function __GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__10896__auto__, writer__10897__auto__, opt__10898__auto__) {
  return cljs.core._write.call(null, writer__10897__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__10740__auto__ = self__.__hash;
  if (!(h__10740__auto__ == null)) {
    return h__10740__auto__;
  } else {
    var h__10740__auto____$1 = cljs.core.hash_iset.call(null, coll__$1);
    self__.__hash = h__10740__auto____$1;
    return h__10740__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__21715 = null;
  var G__21715__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__21715__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__21715 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__21715__2.call(this, self__, k);
      case 3:
        return G__21715__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__21715;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args21714) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args21714)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.call(null, self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count.call(null, self__.tree_map) > 0) {
    return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.call(null, self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && (cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(p1__21713_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, coll__$1, p1__21713_SHARP_);
  }, other));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentTreeSet = function __GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, 0);
cljs.core.set_from_indexed_seq = function set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__11171__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__11171__auto__.length) {
        var G__21716 = i + 1;
        var G__21717 = cljs.core._conj_BANG_.call(null, res, arr[i]);
        i = G__21716;
        res = G__21717;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return cljs.core._persistent_BANG_.call(null, ret);
};
cljs.core.set = function set(coll) {
  var in$ = cljs.core.seq.call(null, coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq.call(null, in$);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var in$__$1 = in$;
        var out = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
        while (true) {
          if (!(in$__$1 == null)) {
            var G__21718 = cljs.core._next.call(null, in$__$1);
            var G__21719 = cljs.core._conj_BANG_.call(null, out, cljs.core._first.call(null, in$__$1));
            in$__$1 = G__21718;
            out = G__21719;
            continue;
          } else {
            return cljs.core._persistent_BANG_.call(null, out);
          }
          break;
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var hash_set__1 = function() {
    var G__21720__delegate = function(keys) {
      return cljs.core.set.call(null, keys);
    };
    var G__21720 = function(var_args) {
      var keys = null;
      if (arguments.length > 0) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__21720__delegate.call(this, keys);
    };
    G__21720.cljs$lang$maxFixedArity = 0;
    G__21720.cljs$lang$applyTo = function(arglist__21721) {
      var keys = cljs.core.seq(arglist__21721);
      return G__21720__delegate(keys);
    };
    G__21720.cljs$core$IFn$_invoke$arity$variadic = G__21720__delegate;
    return G__21720;
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set;
}();
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if (arguments.length > 0) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_set__delegate.call(this, keys);
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__21722) {
    var keys = cljs.core.seq(arglist__21722);
    return sorted_set__delegate(keys);
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set;
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys);
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if (arguments.length > 1) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_set_by__delegate.call(this, comparator, keys);
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__21723) {
    var comparator = cljs.core.first(arglist__21723);
    var keys = cljs.core.rest(arglist__21723);
    return sorted_set_by__delegate(comparator, keys);
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by;
}();
cljs.core.replace = function replace(smap, coll) {
  if (cljs.core.vector_QMARK_.call(null, coll)) {
    var n = cljs.core.count.call(null, coll);
    return cljs.core.reduce.call(null, function(v, i) {
      var temp__4090__auto__ = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
      if (cljs.core.truth_(temp__4090__auto__)) {
        var e = temp__4090__auto__;
        return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e));
      } else {
        return v;
      }
    }, coll, cljs.core.take.call(null, n, cljs.core.iterate.call(null, cljs.core.inc, 0)));
  } else {
    return cljs.core.map.call(null, function(p1__21724_SHARP_) {
      var temp__4090__auto__ = cljs.core.find.call(null, smap, p1__21724_SHARP_);
      if (cljs.core.truth_(temp__4090__auto__)) {
        var e = temp__4090__auto__;
        return cljs.core.second.call(null, e);
      } else {
        return p1__21724_SHARP_;
      }
    }, coll);
  }
};
cljs.core.distinct = function distinct(coll) {
  var step = function step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__21731, seen__$1) {
        while (true) {
          var vec__21732 = p__21731;
          var f = cljs.core.nth.call(null, vec__21732, 0, null);
          var xs__$1 = vec__21732;
          var temp__4092__auto__ = cljs.core.seq.call(null, xs__$1);
          if (temp__4092__auto__) {
            var s = temp__4092__auto__;
            if (cljs.core.contains_QMARK_.call(null, seen__$1, f)) {
              var G__21733 = cljs.core.rest.call(null, s);
              var G__21734 = seen__$1;
              p__21731 = G__21733;
              seen__$1 = G__21734;
              continue;
            } else {
              return cljs.core.cons.call(null, f, step.call(null, cljs.core.rest.call(null, s), cljs.core.conj.call(null, seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step.call(null, coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next.call(null, s__$1)) {
      var G__21735 = cljs.core.conj.call(null, ret, cljs.core.first.call(null, s__$1));
      var G__21736 = cljs.core.next.call(null, s__$1);
      ret = G__21735;
      s__$1 = G__21736;
      continue;
    } else {
      return cljs.core.seq.call(null, ret);
    }
    break;
  }
};
cljs.core.name = function name(x) {
  if (function() {
    var G__21738 = x;
    if (G__21738) {
      var bit__10972__auto__ = G__21738.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__10972__auto__ || G__21738.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._name.call(null, x);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq.call(null, keys);
  var vs = cljs.core.seq.call(null, vals);
  while (true) {
    if (ks && vs) {
      var G__21739 = cljs.core.assoc_BANG_.call(null, map, cljs.core.first.call(null, ks), cljs.core.first.call(null, vs));
      var G__21740 = cljs.core.next.call(null, ks);
      var G__21741 = cljs.core.next.call(null, vs);
      map = G__21739;
      ks = G__21740;
      vs = G__21741;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, map);
    }
    break;
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x;
  };
  var max_key__3 = function(k, x, y) {
    if (k.call(null, x) > k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var max_key__4 = function() {
    var G__21744__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__21742_SHARP_, p2__21743_SHARP_) {
        return max_key.call(null, k, p1__21742_SHARP_, p2__21743_SHARP_);
      }, max_key.call(null, k, x, y), more);
    };
    var G__21744 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__21744__delegate.call(this, k, x, y, more);
    };
    G__21744.cljs$lang$maxFixedArity = 3;
    G__21744.cljs$lang$applyTo = function(arglist__21745) {
      var k = cljs.core.first(arglist__21745);
      arglist__21745 = cljs.core.next(arglist__21745);
      var x = cljs.core.first(arglist__21745);
      arglist__21745 = cljs.core.next(arglist__21745);
      var y = cljs.core.first(arglist__21745);
      var more = cljs.core.rest(arglist__21745);
      return G__21744__delegate(k, x, y, more);
    };
    G__21744.cljs$core$IFn$_invoke$arity$variadic = G__21744__delegate;
    return G__21744;
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key;
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x;
  };
  var min_key__3 = function(k, x, y) {
    if (k.call(null, x) < k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var min_key__4 = function() {
    var G__21748__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__21746_SHARP_, p2__21747_SHARP_) {
        return min_key.call(null, k, p1__21746_SHARP_, p2__21747_SHARP_);
      }, min_key.call(null, k, x, y), more);
    };
    var G__21748 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__21748__delegate.call(this, k, x, y, more);
    };
    G__21748.cljs$lang$maxFixedArity = 3;
    G__21748.cljs$lang$applyTo = function(arglist__21749) {
      var k = cljs.core.first(arglist__21749);
      arglist__21749 = cljs.core.next(arglist__21749);
      var x = cljs.core.first(arglist__21749);
      arglist__21749 = cljs.core.next(arglist__21749);
      var y = cljs.core.first(arglist__21749);
      var more = cljs.core.rest(arglist__21749);
      return G__21748__delegate(k, x, y, more);
    };
    G__21748.cljs$core$IFn$_invoke$arity$variadic = G__21748__delegate;
    return G__21748;
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key;
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll);
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all;
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s)))) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_while.call(null, pred, cljs.core.rest.call(null, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator.call(null, sc);
    return test.call(null, comp.call(null, cljs.core._entry_key.call(null, sc, e), key), 0);
  };
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
      var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if (cljs.core.truth_(temp__4092__auto__)) {
        var vec__21752 = temp__4092__auto__;
        var e = cljs.core.nth.call(null, vec__21752, 0, null);
        var s = vec__21752;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, true));
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if (cljs.core.truth_(temp__4092__auto__)) {
      var vec__21753 = temp__4092__auto__;
      var e = cljs.core.nth.call(null, vec__21753, 0, null);
      var s = vec__21753;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq;
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
      var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if (cljs.core.truth_(temp__4092__auto__)) {
        var vec__21756 = temp__4092__auto__;
        var e = cljs.core.nth.call(null, vec__21756, 0, null);
        var s = vec__21756;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, false));
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if (cljs.core.truth_(temp__4092__auto__)) {
      var vec__21757 = temp__4092__auto__;
      var e = cljs.core.nth.call(null, vec__21757, 0, null);
      var s = vec__21757;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq;
}();
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__10896__auto__, writer__10897__auto__, opt__10898__auto__) {
  return cljs.core._write.call(null, writer__10897__auto__, "cljs.core/Range");
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__10740__auto__ = self__.__hash;
  if (!(h__10740__auto__ == null)) {
    return h__10740__auto__;
  } else {
    var h__10740__auto____$1 = cljs.core.hash_coll.call(null, rng__$1);
    self__.__hash = h__10740__auto____$1;
    return h__10740__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons.call(null, o, rng__$1);
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f, s);
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not.call(null, cljs.core._seq.call(null, rng__$1))) {
    return 0;
  } else {
    return Math.ceil((self__.end - self__.start) / self__.step);
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq.call(null, rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq.call(null, rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential.call(null, rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_Range = function __GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1);
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1);
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1);
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null);
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range;
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_nth.call(null, n, cljs.core.drop.call(null, n, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_with = function split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], null);
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      var fst = cljs.core.first.call(null, s);
      var fv = f.call(null, fst);
      var run = cljs.core.cons.call(null, fst, cljs.core.take_while.call(null, function(fst, fv) {
        return function(p1__21758_SHARP_) {
          return cljs.core._EQ_.call(null, fv, f.call(null, p1__21758_SHARP_));
        };
      }(fst, fv), cljs.core.next.call(null, s)));
      return cljs.core.cons.call(null, run, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run), s))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core.get.call(null, counts, x, 0) + 1);
  }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4090__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4090__auto__) {
        var s = temp__4090__auto__;
        return reductions.call(null, f, cljs.core.first.call(null, s), cljs.core.rest.call(null, s));
      } else {
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, f.call(null));
      }
    }, null, null);
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s)), cljs.core.rest.call(null, s));
      } else {
        return null;
      }
    }, null, null));
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions;
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__21769 = null;
      var G__21769__0 = function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null)], null);
      };
      var G__21769__1 = function(x) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x)], null);
      };
      var G__21769__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y)], null);
      };
      var G__21769__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z)], null);
      };
      var G__21769__4 = function() {
        var G__21770__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args)], null);
        };
        var G__21770 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__21770__delegate.call(this, x, y, z, args);
        };
        G__21770.cljs$lang$maxFixedArity = 3;
        G__21770.cljs$lang$applyTo = function(arglist__21771) {
          var x = cljs.core.first(arglist__21771);
          arglist__21771 = cljs.core.next(arglist__21771);
          var y = cljs.core.first(arglist__21771);
          arglist__21771 = cljs.core.next(arglist__21771);
          var z = cljs.core.first(arglist__21771);
          var args = cljs.core.rest(arglist__21771);
          return G__21770__delegate(x, y, z, args);
        };
        G__21770.cljs$core$IFn$_invoke$arity$variadic = G__21770__delegate;
        return G__21770;
      }();
      G__21769 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__21769__0.call(this);
          case 1:
            return G__21769__1.call(this, x);
          case 2:
            return G__21769__2.call(this, x, y);
          case 3:
            return G__21769__3.call(this, x, y, z);
          default:
            return G__21769__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__21769.cljs$lang$maxFixedArity = 3;
      G__21769.cljs$lang$applyTo = G__21769__4.cljs$lang$applyTo;
      return G__21769;
    }();
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__21772 = null;
      var G__21772__0 = function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null)], null);
      };
      var G__21772__1 = function(x) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x)], null);
      };
      var G__21772__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y)], null);
      };
      var G__21772__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z)], null);
      };
      var G__21772__4 = function() {
        var G__21773__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args)], null);
        };
        var G__21773 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__21773__delegate.call(this, x, y, z, args);
        };
        G__21773.cljs$lang$maxFixedArity = 3;
        G__21773.cljs$lang$applyTo = function(arglist__21774) {
          var x = cljs.core.first(arglist__21774);
          arglist__21774 = cljs.core.next(arglist__21774);
          var y = cljs.core.first(arglist__21774);
          arglist__21774 = cljs.core.next(arglist__21774);
          var z = cljs.core.first(arglist__21774);
          var args = cljs.core.rest(arglist__21774);
          return G__21773__delegate(x, y, z, args);
        };
        G__21773.cljs$core$IFn$_invoke$arity$variadic = G__21773__delegate;
        return G__21773;
      }();
      G__21772 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__21772__0.call(this);
          case 1:
            return G__21772__1.call(this, x);
          case 2:
            return G__21772__2.call(this, x, y);
          case 3:
            return G__21772__3.call(this, x, y, z);
          default:
            return G__21772__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__21772.cljs$lang$maxFixedArity = 3;
      G__21772.cljs$lang$applyTo = G__21772__4.cljs$lang$applyTo;
      return G__21772;
    }();
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__21775 = null;
      var G__21775__0 = function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null), h.call(null)], null);
      };
      var G__21775__1 = function(x) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x), h.call(null, x)], null);
      };
      var G__21775__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y), h.call(null, x, y)], null);
      };
      var G__21775__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z)], null);
      };
      var G__21775__4 = function() {
        var G__21776__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args)], null);
        };
        var G__21776 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__21776__delegate.call(this, x, y, z, args);
        };
        G__21776.cljs$lang$maxFixedArity = 3;
        G__21776.cljs$lang$applyTo = function(arglist__21777) {
          var x = cljs.core.first(arglist__21777);
          arglist__21777 = cljs.core.next(arglist__21777);
          var y = cljs.core.first(arglist__21777);
          arglist__21777 = cljs.core.next(arglist__21777);
          var z = cljs.core.first(arglist__21777);
          var args = cljs.core.rest(arglist__21777);
          return G__21776__delegate(x, y, z, args);
        };
        G__21776.cljs$core$IFn$_invoke$arity$variadic = G__21776__delegate;
        return G__21776;
      }();
      G__21775 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__21775__0.call(this);
          case 1:
            return G__21775__1.call(this, x);
          case 2:
            return G__21775__2.call(this, x, y);
          case 3:
            return G__21775__3.call(this, x, y, z);
          default:
            return G__21775__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__21775.cljs$lang$maxFixedArity = 3;
      G__21775.cljs$lang$applyTo = G__21775__4.cljs$lang$applyTo;
      return G__21775;
    }();
  };
  var juxt__4 = function() {
    var G__21778__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function() {
        var G__21779 = null;
        var G__21779__0 = function() {
          return cljs.core.reduce.call(null, function(p1__21759_SHARP_, p2__21760_SHARP_) {
            return cljs.core.conj.call(null, p1__21759_SHARP_, p2__21760_SHARP_.call(null));
          }, cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__21779__1 = function(x) {
          return cljs.core.reduce.call(null, function(p1__21761_SHARP_, p2__21762_SHARP_) {
            return cljs.core.conj.call(null, p1__21761_SHARP_, p2__21762_SHARP_.call(null, x));
          }, cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__21779__2 = function(x, y) {
          return cljs.core.reduce.call(null, function(p1__21763_SHARP_, p2__21764_SHARP_) {
            return cljs.core.conj.call(null, p1__21763_SHARP_, p2__21764_SHARP_.call(null, x, y));
          }, cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__21779__3 = function(x, y, z) {
          return cljs.core.reduce.call(null, function(p1__21765_SHARP_, p2__21766_SHARP_) {
            return cljs.core.conj.call(null, p1__21765_SHARP_, p2__21766_SHARP_.call(null, x, y, z));
          }, cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__21779__4 = function() {
          var G__21780__delegate = function(x, y, z, args) {
            return cljs.core.reduce.call(null, function(p1__21767_SHARP_, p2__21768_SHARP_) {
              return cljs.core.conj.call(null, p1__21767_SHARP_, cljs.core.apply.call(null, p2__21768_SHARP_, x, y, z, args));
            }, cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__21780 = function(x, y, z, var_args) {
            var args = null;
            if (arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
            }
            return G__21780__delegate.call(this, x, y, z, args);
          };
          G__21780.cljs$lang$maxFixedArity = 3;
          G__21780.cljs$lang$applyTo = function(arglist__21781) {
            var x = cljs.core.first(arglist__21781);
            arglist__21781 = cljs.core.next(arglist__21781);
            var y = cljs.core.first(arglist__21781);
            arglist__21781 = cljs.core.next(arglist__21781);
            var z = cljs.core.first(arglist__21781);
            var args = cljs.core.rest(arglist__21781);
            return G__21780__delegate(x, y, z, args);
          };
          G__21780.cljs$core$IFn$_invoke$arity$variadic = G__21780__delegate;
          return G__21780;
        }();
        G__21779 = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return G__21779__0.call(this);
            case 1:
              return G__21779__1.call(this, x);
            case 2:
              return G__21779__2.call(this, x, y);
            case 3:
              return G__21779__3.call(this, x, y, z);
            default:
              return G__21779__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__21779.cljs$lang$maxFixedArity = 3;
        G__21779.cljs$lang$applyTo = G__21779__4.cljs$lang$applyTo;
        return G__21779;
      }();
    };
    var G__21778 = function(f, g, h, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__21778__delegate.call(this, f, g, h, fs);
    };
    G__21778.cljs$lang$maxFixedArity = 3;
    G__21778.cljs$lang$applyTo = function(arglist__21782) {
      var f = cljs.core.first(arglist__21782);
      arglist__21782 = cljs.core.next(arglist__21782);
      var g = cljs.core.first(arglist__21782);
      arglist__21782 = cljs.core.next(arglist__21782);
      var h = cljs.core.first(arglist__21782);
      var fs = cljs.core.rest(arglist__21782);
      return G__21778__delegate(f, g, h, fs);
    };
    G__21778.cljs$core$IFn$_invoke$arity$variadic = G__21778__delegate;
    return G__21778;
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt;
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll)) {
        var G__21783 = cljs.core.next.call(null, coll);
        coll = G__21783;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  var dorun__2 = function(n, coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll) && n > 0) {
        var G__21784 = n - 1;
        var G__21785 = cljs.core.next.call(null, coll);
        n = G__21784;
        coll = G__21785;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun;
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll;
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll;
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall;
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp;
};
cljs.core.re_matches = function re_matches(re, s) {
  var matches = re.exec(s);
  if (cljs.core._EQ_.call(null, cljs.core.first.call(null, matches), s)) {
    if (cljs.core.count.call(null, matches) === 1) {
      return cljs.core.first.call(null, matches);
    } else {
      return cljs.core.vec.call(null, matches);
    }
  } else {
    return null;
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches = re.exec(s);
  if (matches == null) {
    return null;
  } else {
    if (cljs.core.count.call(null, matches) === 1) {
      return cljs.core.first.call(null, matches);
    } else {
      return cljs.core.vec.call(null, matches);
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find.call(null, re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_.call(null, match_data) ? cljs.core.first.call(null, match_data) : match_data;
  var post_match = cljs.core.subs.call(null, s, match_idx + cljs.core.count.call(null, match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, match_data, cljs.core.seq.call(null, post_match) ? re_seq.call(null, re, post_match) : null);
    }, null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__21787 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var _ = cljs.core.nth.call(null, vec__21787, 0, null);
  var flags = cljs.core.nth.call(null, vec__21787, 1, null);
  var pattern = cljs.core.nth.call(null, vec__21787, 2, null);
  return new RegExp(pattern, flags);
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_21789 = cljs.core._STAR_print_level_STAR_;
  try {
    cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write.call(null, writer, "#");
    } else {
      cljs.core._write.call(null, writer, begin);
      if (cljs.core.seq.call(null, coll)) {
        print_one.call(null, cljs.core.first.call(null, coll), writer, opts);
      } else {
      }
      var coll_21790__$1 = cljs.core.next.call(null, coll);
      var n_21791 = (new cljs.core.Keyword(null, "print-length", "print-length", 3960797560)).cljs$core$IFn$_invoke$arity$1(opts);
      while (true) {
        if (coll_21790__$1 && (n_21791 == null || !(n_21791 === 0))) {
          cljs.core._write.call(null, writer, sep);
          print_one.call(null, cljs.core.first.call(null, coll_21790__$1), writer, opts);
          var G__21792 = cljs.core.next.call(null, coll_21790__$1);
          var G__21793 = n_21791 - 1;
          coll_21790__$1 = G__21792;
          n_21791 = G__21793;
          continue;
        } else {
        }
        break;
      }
      if (cljs.core.truth_((new cljs.core.Keyword(null, "print-length", "print-length", 3960797560)).cljs$core$IFn$_invoke$arity$1(opts))) {
        cljs.core._write.call(null, writer, sep);
        print_one.call(null, "...", writer, opts);
      } else {
      }
      return cljs.core._write.call(null, writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_21789;
  }
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__21798 = cljs.core.seq.call(null, ss);
    var chunk__21799 = null;
    var count__21800 = 0;
    var i__21801 = 0;
    while (true) {
      if (i__21801 < count__21800) {
        var s = cljs.core._nth.call(null, chunk__21799, i__21801);
        cljs.core._write.call(null, writer, s);
        var G__21802 = seq__21798;
        var G__21803 = chunk__21799;
        var G__21804 = count__21800;
        var G__21805 = i__21801 + 1;
        seq__21798 = G__21802;
        chunk__21799 = G__21803;
        count__21800 = G__21804;
        i__21801 = G__21805;
        continue;
      } else {
        var temp__4092__auto__ = cljs.core.seq.call(null, seq__21798);
        if (temp__4092__auto__) {
          var seq__21798__$1 = temp__4092__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__21798__$1)) {
            var c__11077__auto__ = cljs.core.chunk_first.call(null, seq__21798__$1);
            var G__21806 = cljs.core.chunk_rest.call(null, seq__21798__$1);
            var G__21807 = c__11077__auto__;
            var G__21808 = cljs.core.count.call(null, c__11077__auto__);
            var G__21809 = 0;
            seq__21798 = G__21806;
            chunk__21799 = G__21807;
            count__21800 = G__21808;
            i__21801 = G__21809;
            continue;
          } else {
            var s = cljs.core.first.call(null, seq__21798__$1);
            cljs.core._write.call(null, writer, s);
            var G__21810 = cljs.core.next.call(null, seq__21798__$1);
            var G__21811 = null;
            var G__21812 = 0;
            var G__21813 = 0;
            seq__21798 = G__21810;
            chunk__21799 = G__21811;
            count__21800 = G__21812;
            i__21801 = G__21813;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if (arguments.length > 1) {
      ss = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return write_all__delegate.call(this, writer, ss);
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__21814) {
    var writer = cljs.core.first(arglist__21814);
    var ss = cljs.core.rest(arglist__21814);
    return write_all__delegate(writer, ss);
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all;
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj21816 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj21816;
}();
cljs.core.quote_string = function quote_string(s) {
  return[cljs.core.str('"'), cljs.core.str(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write.call(null, writer, "nil");
  } else {
    if (void 0 === obj) {
      return cljs.core._write.call(null, writer, "#\x3cundefined\x3e");
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        if (cljs.core.truth_(function() {
          var and__10317__auto__ = cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "meta", "meta", 1017252215));
          if (cljs.core.truth_(and__10317__auto__)) {
            var and__10317__auto____$1 = function() {
              var G__21822 = obj;
              if (G__21822) {
                var bit__10979__auto__ = G__21822.cljs$lang$protocol_mask$partition0$ & 131072;
                if (bit__10979__auto__ || G__21822.cljs$core$IMeta$) {
                  return true;
                } else {
                  if (!G__21822.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__21822);
                  } else {
                    return false;
                  }
                }
              } else {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__21822);
              }
            }();
            if (and__10317__auto____$1) {
              return cljs.core.meta.call(null, obj);
            } else {
              return and__10317__auto____$1;
            }
          } else {
            return and__10317__auto__;
          }
        }())) {
          cljs.core._write.call(null, writer, "^");
          pr_writer.call(null, cljs.core.meta.call(null, obj), writer, opts);
          cljs.core._write.call(null, writer, " ");
        } else {
        }
        if (obj == null) {
          return cljs.core._write.call(null, writer, "nil");
        } else {
          if (obj.cljs$lang$type) {
            return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
          } else {
            if (function() {
              var G__21823 = obj;
              if (G__21823) {
                var bit__10972__auto__ = G__21823.cljs$lang$protocol_mask$partition0$ & 2147483648;
                if (bit__10972__auto__ || G__21823.cljs$core$IPrintWithWriter$) {
                  return true;
                } else {
                  return false;
                }
              } else {
                return false;
              }
            }()) {
              return cljs.core._pr_writer.call(null, obj, writer, opts);
            } else {
              if (cljs.core.type.call(null, obj) === Boolean || typeof obj === "number") {
                return cljs.core._write.call(null, writer, [cljs.core.str(obj)].join(""));
              } else {
                if (cljs.core.object_QMARK_.call(null, obj)) {
                  cljs.core._write.call(null, writer, "#js ");
                  return cljs.core.print_map.call(null, cljs.core.map.call(null, function(k) {
                    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), obj[k]], null);
                  }, cljs.core.js_keys.call(null, obj)), pr_writer, writer, opts);
                } else {
                  if (obj instanceof Array) {
                    return cljs.core.pr_sequential_writer.call(null, writer, pr_writer, "#js [", " ", "]", opts, obj);
                  } else {
                    if (goog.isString(obj)) {
                      if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 4441712502)).cljs$core$IFn$_invoke$arity$1(opts))) {
                        return cljs.core._write.call(null, writer, cljs.core.quote_string.call(null, obj));
                      } else {
                        return cljs.core._write.call(null, writer, obj);
                      }
                    } else {
                      if (cljs.core.fn_QMARK_.call(null, obj)) {
                        return cljs.core.write_all.call(null, writer, "#\x3c", [cljs.core.str(obj)].join(""), "\x3e");
                      } else {
                        if (obj instanceof Date) {
                          var normalize = function(n, len) {
                            var ns = [cljs.core.str(n)].join("");
                            while (true) {
                              if (cljs.core.count.call(null, ns) < len) {
                                var G__21825 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                                ns = G__21825;
                                continue;
                              } else {
                                return ns;
                              }
                              break;
                            }
                          };
                          return cljs.core.write_all.call(null, writer, '#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize.call(null, obj.getUTCMonth() + 1, 2), "-", normalize.call(null, obj.getUTCDate(), 2), "T", normalize.call(null, obj.getUTCHours(), 2), ":", normalize.call(null, obj.getUTCMinutes(), 2), ":", normalize.call(null, obj.getUTCSeconds(), 2), ".", normalize.call(null, obj.getUTCMilliseconds(), 3), "-", '00:00"');
                        } else {
                          if (cljs.core.regexp_QMARK_.call(null, obj)) {
                            return cljs.core.write_all.call(null, writer, '#"', obj.source, '"');
                          } else {
                            if (function() {
                              var G__21824 = obj;
                              if (G__21824) {
                                var bit__10979__auto__ = G__21824.cljs$lang$protocol_mask$partition0$ & 2147483648;
                                if (bit__10979__auto__ || G__21824.cljs$core$IPrintWithWriter$) {
                                  return true;
                                } else {
                                  if (!G__21824.cljs$lang$protocol_mask$partition0$) {
                                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__21824);
                                  } else {
                                    return false;
                                  }
                                }
                              } else {
                                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__21824);
                              }
                            }()) {
                              return cljs.core._pr_writer.call(null, obj, writer, opts);
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                return cljs.core.write_all.call(null, writer, "#\x3c", [cljs.core.str(obj)].join(""), "\x3e");
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer.call(null, cljs.core.first.call(null, objs), writer, opts);
  var seq__21830 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  var chunk__21831 = null;
  var count__21832 = 0;
  var i__21833 = 0;
  while (true) {
    if (i__21833 < count__21832) {
      var obj = cljs.core._nth.call(null, chunk__21831, i__21833);
      cljs.core._write.call(null, writer, " ");
      cljs.core.pr_writer.call(null, obj, writer, opts);
      var G__21834 = seq__21830;
      var G__21835 = chunk__21831;
      var G__21836 = count__21832;
      var G__21837 = i__21833 + 1;
      seq__21830 = G__21834;
      chunk__21831 = G__21835;
      count__21832 = G__21836;
      i__21833 = G__21837;
      continue;
    } else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__21830);
      if (temp__4092__auto__) {
        var seq__21830__$1 = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__21830__$1)) {
          var c__11077__auto__ = cljs.core.chunk_first.call(null, seq__21830__$1);
          var G__21838 = cljs.core.chunk_rest.call(null, seq__21830__$1);
          var G__21839 = c__11077__auto__;
          var G__21840 = cljs.core.count.call(null, c__11077__auto__);
          var G__21841 = 0;
          seq__21830 = G__21838;
          chunk__21831 = G__21839;
          count__21832 = G__21840;
          i__21833 = G__21841;
          continue;
        } else {
          var obj = cljs.core.first.call(null, seq__21830__$1);
          cljs.core._write.call(null, writer, " ");
          cljs.core.pr_writer.call(null, obj, writer, opts);
          var G__21842 = cljs.core.next.call(null, seq__21830__$1);
          var G__21843 = null;
          var G__21844 = 0;
          var G__21845 = 0;
          seq__21830 = G__21842;
          chunk__21831 = G__21843;
          count__21832 = G__21844;
          i__21833 = G__21845;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer.call(null, objs, writer, opts);
  cljs.core._flush.call(null, writer);
  return sb;
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "";
  } else {
    return[cljs.core.str(cljs.core.pr_sb_with_opts.call(null, objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts.call(null, objs, opts);
    sb.append("\n");
    return[cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print.call(null, cljs.core.pr_str_with_opts.call(null, objs, opts));
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if (cljs.core.truth_(cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", 4338025857)))) {
    return cljs.core.flush.call(null);
  } else {
    return null;
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr_str__delegate.call(this, objs);
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__21846) {
    var objs = cljs.core.seq(arglist__21846);
    return pr_str__delegate(objs);
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str;
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var prn_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn_str__delegate.call(this, objs);
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__21847) {
    var objs = cljs.core.seq(arglist__21847);
    return prn_str__delegate(objs);
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str;
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr__delegate.call(this, objs);
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__21848) {
    var objs = cljs.core.seq(arglist__21848);
    return pr__delegate(objs);
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr;
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return cljs_core_print__delegate.call(this, objs);
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__21849) {
    var objs = cljs.core.seq(arglist__21849);
    return cljs_core_print__delegate(objs);
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print;
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
  };
  var print_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return print_str__delegate.call(this, objs);
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__21850) {
    var objs = cljs.core.seq(arglist__21850);
    return print_str__delegate(objs);
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str;
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var println = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println__delegate.call(this, objs);
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__21851) {
    var objs = cljs.core.seq(arglist__21851);
    return println__delegate(objs);
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println;
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
  };
  var println_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println_str__delegate.call(this, objs);
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__21852) {
    var objs = cljs.core.seq(arglist__21852);
    return println_str__delegate(objs);
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str;
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var prn = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn__delegate.call(this, objs);
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__21853) {
    var objs = cljs.core.seq(arglist__21853);
    return prn__delegate(objs);
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn;
}();
cljs.core.print_map = function print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, function(e, w, opts__$1) {
    print_one.call(null, cljs.core.key.call(null, e), w, opts__$1);
    cljs.core._write.call(null, w, " ");
    return print_one.call(null, cljs.core.val.call(null, e), w, opts__$1);
  }, "{", ", ", "}", opts, cljs.core.seq.call(null, m));
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll__$1));
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write.call(null, writer, "()");
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y);
};
cljs.core.IAtom = function() {
  var obj21855 = {};
  return obj21855;
}();
cljs.core.IReset = function() {
  var obj21857 = {};
  return obj21857;
}();
cljs.core._reset_BANG_ = function _reset_BANG_(o, new_value) {
  if (function() {
    var and__10317__auto__ = o;
    if (and__10317__auto__) {
      return o.cljs$core$IReset$_reset_BANG_$arity$2;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__10956__auto__ = o == null ? null : o;
    return function() {
      var or__10329__auto__ = cljs.core._reset_BANG_[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._reset_BANG_["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IReset.-reset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.ISwap = function() {
  var obj21859 = {};
  return obj21859;
}();
cljs.core._swap_BANG_ = function() {
  var _swap_BANG_ = null;
  var _swap_BANG___2 = function(o, f) {
    if (function() {
      var and__10317__auto__ = o;
      if (and__10317__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$2;
      } else {
        return and__10317__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
    } else {
      var x__10956__auto__ = o == null ? null : o;
      return function() {
        var or__10329__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__10956__auto__)];
        if (or__10329__auto__) {
          return or__10329__auto__;
        } else {
          var or__10329__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__10329__auto____$1) {
            return or__10329__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f);
    }
  };
  var _swap_BANG___3 = function(o, f, a) {
    if (function() {
      var and__10317__auto__ = o;
      if (and__10317__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$3;
      } else {
        return and__10317__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
    } else {
      var x__10956__auto__ = o == null ? null : o;
      return function() {
        var or__10329__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__10956__auto__)];
        if (or__10329__auto__) {
          return or__10329__auto__;
        } else {
          var or__10329__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__10329__auto____$1) {
            return or__10329__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a);
    }
  };
  var _swap_BANG___4 = function(o, f, a, b) {
    if (function() {
      var and__10317__auto__ = o;
      if (and__10317__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$4;
      } else {
        return and__10317__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
    } else {
      var x__10956__auto__ = o == null ? null : o;
      return function() {
        var or__10329__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__10956__auto__)];
        if (or__10329__auto__) {
          return or__10329__auto__;
        } else {
          var or__10329__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__10329__auto____$1) {
            return or__10329__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b);
    }
  };
  var _swap_BANG___5 = function(o, f, a, b, xs) {
    if (function() {
      var and__10317__auto__ = o;
      if (and__10317__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$5;
      } else {
        return and__10317__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
    } else {
      var x__10956__auto__ = o == null ? null : o;
      return function() {
        var or__10329__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__10956__auto__)];
        if (or__10329__auto__) {
          return or__10329__auto__;
        } else {
          var or__10329__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__10329__auto____$1) {
            return or__10329__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b, xs);
    }
  };
  _swap_BANG_ = function(o, f, a, b, xs) {
    switch(arguments.length) {
      case 2:
        return _swap_BANG___2.call(this, o, f);
      case 3:
        return _swap_BANG___3.call(this, o, f, a);
      case 4:
        return _swap_BANG___4.call(this, o, f, a, b);
      case 5:
        return _swap_BANG___5.call(this, o, f, a, b, xs);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
  return _swap_BANG_;
}();
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 2153938944;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__10896__auto__, writer__10897__auto__, opt__10898__auto__) {
  return cljs.core._write.call(null, writer__10897__auto__, "cljs.core/Atom");
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__21860 = cljs.core.seq.call(null, self__.watches);
  var chunk__21861 = null;
  var count__21862 = 0;
  var i__21863 = 0;
  while (true) {
    if (i__21863 < count__21862) {
      var vec__21864 = cljs.core._nth.call(null, chunk__21861, i__21863);
      var key = cljs.core.nth.call(null, vec__21864, 0, null);
      var f = cljs.core.nth.call(null, vec__21864, 1, null);
      f.call(null, key, this$__$1, oldval, newval);
      var G__21866 = seq__21860;
      var G__21867 = chunk__21861;
      var G__21868 = count__21862;
      var G__21869 = i__21863 + 1;
      seq__21860 = G__21866;
      chunk__21861 = G__21867;
      count__21862 = G__21868;
      i__21863 = G__21869;
      continue;
    } else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__21860);
      if (temp__4092__auto__) {
        var seq__21860__$1 = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__21860__$1)) {
          var c__11077__auto__ = cljs.core.chunk_first.call(null, seq__21860__$1);
          var G__21870 = cljs.core.chunk_rest.call(null, seq__21860__$1);
          var G__21871 = c__11077__auto__;
          var G__21872 = cljs.core.count.call(null, c__11077__auto__);
          var G__21873 = 0;
          seq__21860 = G__21870;
          chunk__21861 = G__21871;
          count__21862 = G__21872;
          i__21863 = G__21873;
          continue;
        } else {
          var vec__21865 = cljs.core.first.call(null, seq__21860__$1);
          var key = cljs.core.nth.call(null, vec__21865, 0, null);
          var f = cljs.core.nth.call(null, vec__21865, 1, null);
          f.call(null, key, this$__$1, oldval, newval);
          var G__21874 = cljs.core.next.call(null, seq__21860__$1);
          var G__21875 = null;
          var G__21876 = 0;
          var G__21877 = 0;
          seq__21860 = G__21874;
          chunk__21861 = G__21875;
          count__21862 = G__21876;
          i__21863 = G__21877;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.assoc.call(null, self__.watches, key, f);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.call(null, self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var self__ = this;
  var a__$1 = this;
  cljs.core._write.call(null, writer, "#\x3cAtom: ");
  cljs.core.pr_writer.call(null, self__.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e");
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.__GT_Atom = function __GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null);
  };
  var atom__2 = function() {
    var G__21881__delegate = function(x, p__21878) {
      var map__21880 = p__21878;
      var map__21880__$1 = cljs.core.seq_QMARK_.call(null, map__21880) ? cljs.core.apply.call(null, cljs.core.hash_map, map__21880) : map__21880;
      var validator = cljs.core.get.call(null, map__21880__$1, new cljs.core.Keyword(null, "validator", "validator", 4199087812));
      var meta = cljs.core.get.call(null, map__21880__$1, new cljs.core.Keyword(null, "meta", "meta", 1017252215));
      return new cljs.core.Atom(x, meta, validator, null);
    };
    var G__21881 = function(x, var_args) {
      var p__21878 = null;
      if (arguments.length > 1) {
        p__21878 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__21881__delegate.call(this, x, p__21878);
    };
    G__21881.cljs$lang$maxFixedArity = 1;
    G__21881.cljs$lang$applyTo = function(arglist__21882) {
      var x = cljs.core.first(arglist__21882);
      var p__21878 = cljs.core.rest(arglist__21882);
      return G__21881__delegate(x, p__21878);
    };
    G__21881.cljs$core$IFn$_invoke$arity$variadic = G__21881__delegate;
    return G__21881;
  }();
  atom = function(x, var_args) {
    var p__21878 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom;
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(validate.call(null, new_value))) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1233162959, null), new cljs.core.Symbol(null, "new-value", "new-value", 972165309, null))))].join(""));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches.call(null, a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_.call(null, a, new_value);
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o);
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f);
    }
  };
  var swap_BANG___3 = function(a, f, x) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f, x);
    }
  };
  var swap_BANG___4 = function(a, f, x, y) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f, x, y);
    }
  };
  var swap_BANG___5 = function() {
    var G__21883__delegate = function(a, f, x, y, more) {
      if (a instanceof cljs.core.Atom) {
        return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, more));
      } else {
        return cljs.core._swap_BANG_.call(null, a, f, x, y, more);
      }
    };
    var G__21883 = function(a, f, x, y, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__21883__delegate.call(this, a, f, x, y, more);
    };
    G__21883.cljs$lang$maxFixedArity = 4;
    G__21883.cljs$lang$applyTo = function(arglist__21884) {
      var a = cljs.core.first(arglist__21884);
      arglist__21884 = cljs.core.next(arglist__21884);
      var f = cljs.core.first(arglist__21884);
      arglist__21884 = cljs.core.next(arglist__21884);
      var x = cljs.core.first(arglist__21884);
      arglist__21884 = cljs.core.next(arglist__21884);
      var y = cljs.core.first(arglist__21884);
      var more = cljs.core.rest(arglist__21884);
      return G__21883__delegate(a, f, x, y, more);
    };
    G__21883.cljs$core$IFn$_invoke$arity$variadic = G__21883__delegate;
    return G__21883;
  }();
  swap_BANG_ = function(a, f, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      default:
        return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 4;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_;
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator;
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args);
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if (arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args);
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__21885) {
    var iref = cljs.core.first(arglist__21885);
    arglist__21885 = cljs.core.next(arglist__21885);
    var f = cljs.core.first(arglist__21885);
    var args = cljs.core.rest(arglist__21885);
    return alter_meta_BANG___delegate(iref, f, args);
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_;
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f);
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key);
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__");
  };
  var gensym__1 = function(prefix_string) {
    if (cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0);
    } else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""));
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym;
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__10896__auto__, writer__10897__auto__, opt__10898__auto__) {
  return cljs.core._write.call(null, writer__10897__auto__, "cljs.core/Delay");
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return(new cljs.core.Keyword(null, "done", "done", 1016993524)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, self__.state));
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return(new cljs.core.Keyword(null, "value", "value", 1125876963)).cljs$core$IFn$_invoke$arity$1(cljs.core.swap_BANG_.call(null, self__.state, function(p__21886) {
    var map__21887 = p__21886;
    var map__21887__$1 = cljs.core.seq_QMARK_.call(null, map__21887) ? cljs.core.apply.call(null, cljs.core.hash_map, map__21887) : map__21887;
    var curr_state = map__21887__$1;
    var done = cljs.core.get.call(null, map__21887__$1, new cljs.core.Keyword(null, "done", "done", 1016993524));
    if (cljs.core.truth_(done)) {
      return curr_state;
    } else {
      return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "done", "done", 1016993524), true, new cljs.core.Keyword(null, "value", "value", 1125876963), self__.f.call(null)], null);
    }
  }));
};
cljs.core.__GT_Delay = function __GT_Delay(state, f) {
  return new cljs.core.Delay(state, f);
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function force(x) {
  if (cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d);
};
cljs.core.IEncodeJS = function() {
  var obj21889 = {};
  return obj21889;
}();
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if (function() {
    var and__10317__auto__ = x;
    if (and__10317__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__10956__auto__ = x == null ? null : x;
    return function() {
      var or__10329__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._clj__GT_js["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if (function() {
    var and__10317__auto__ = x;
    if (and__10317__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__10956__auto__ = x == null ? null : x;
    return function() {
      var or__10329__auto__ = cljs.core._key__GT_js[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._key__GT_js["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if (function() {
    var G__21891 = k;
    if (G__21891) {
      var bit__10979__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__10329__auto__ = bit__10979__auto__;
        if (cljs.core.truth_(or__10329__auto__)) {
          return or__10329__auto__;
        } else {
          return G__21891.cljs$core$IEncodeJS$;
        }
      }())) {
        return true;
      } else {
        if (!G__21891.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__21891);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__21891);
    }
  }()) {
    return cljs.core._clj__GT_js.call(null, k);
  } else {
    if (typeof k === "string" || (typeof k === "number" || (k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol))) {
      return cljs.core.clj__GT_js.call(null, k);
    } else {
      return cljs.core.pr_str.call(null, k);
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (function() {
      var G__21905 = x;
      if (G__21905) {
        var bit__10979__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__10329__auto__ = bit__10979__auto__;
          if (cljs.core.truth_(or__10329__auto__)) {
            return or__10329__auto__;
          } else {
            return G__21905.cljs$core$IEncodeJS$;
          }
        }())) {
          return true;
        } else {
          if (!G__21905.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__21905);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__21905);
      }
    }()) {
      return cljs.core._clj__GT_js.call(null, x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name.call(null, x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return[cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_.call(null, x)) {
            var m = function() {
              var obj21907 = {};
              return obj21907;
            }();
            var seq__21908_21918 = cljs.core.seq.call(null, x);
            var chunk__21909_21919 = null;
            var count__21910_21920 = 0;
            var i__21911_21921 = 0;
            while (true) {
              if (i__21911_21921 < count__21910_21920) {
                var vec__21912_21922 = cljs.core._nth.call(null, chunk__21909_21919, i__21911_21921);
                var k_21923 = cljs.core.nth.call(null, vec__21912_21922, 0, null);
                var v_21924 = cljs.core.nth.call(null, vec__21912_21922, 1, null);
                m[cljs.core.key__GT_js.call(null, k_21923)] = clj__GT_js.call(null, v_21924);
                var G__21925 = seq__21908_21918;
                var G__21926 = chunk__21909_21919;
                var G__21927 = count__21910_21920;
                var G__21928 = i__21911_21921 + 1;
                seq__21908_21918 = G__21925;
                chunk__21909_21919 = G__21926;
                count__21910_21920 = G__21927;
                i__21911_21921 = G__21928;
                continue;
              } else {
                var temp__4092__auto___21929 = cljs.core.seq.call(null, seq__21908_21918);
                if (temp__4092__auto___21929) {
                  var seq__21908_21930__$1 = temp__4092__auto___21929;
                  if (cljs.core.chunked_seq_QMARK_.call(null, seq__21908_21930__$1)) {
                    var c__11077__auto___21931 = cljs.core.chunk_first.call(null, seq__21908_21930__$1);
                    var G__21932 = cljs.core.chunk_rest.call(null, seq__21908_21930__$1);
                    var G__21933 = c__11077__auto___21931;
                    var G__21934 = cljs.core.count.call(null, c__11077__auto___21931);
                    var G__21935 = 0;
                    seq__21908_21918 = G__21932;
                    chunk__21909_21919 = G__21933;
                    count__21910_21920 = G__21934;
                    i__21911_21921 = G__21935;
                    continue;
                  } else {
                    var vec__21913_21936 = cljs.core.first.call(null, seq__21908_21930__$1);
                    var k_21937 = cljs.core.nth.call(null, vec__21913_21936, 0, null);
                    var v_21938 = cljs.core.nth.call(null, vec__21913_21936, 1, null);
                    m[cljs.core.key__GT_js.call(null, k_21937)] = clj__GT_js.call(null, v_21938);
                    var G__21939 = cljs.core.next.call(null, seq__21908_21930__$1);
                    var G__21940 = null;
                    var G__21941 = 0;
                    var G__21942 = 0;
                    seq__21908_21918 = G__21939;
                    chunk__21909_21919 = G__21940;
                    count__21910_21920 = G__21941;
                    i__21911_21921 = G__21942;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_.call(null, x)) {
              var arr = [];
              var seq__21914_21943 = cljs.core.seq.call(null, cljs.core.map.call(null, clj__GT_js, x));
              var chunk__21915_21944 = null;
              var count__21916_21945 = 0;
              var i__21917_21946 = 0;
              while (true) {
                if (i__21917_21946 < count__21916_21945) {
                  var x_21947__$1 = cljs.core._nth.call(null, chunk__21915_21944, i__21917_21946);
                  arr.push(x_21947__$1);
                  var G__21948 = seq__21914_21943;
                  var G__21949 = chunk__21915_21944;
                  var G__21950 = count__21916_21945;
                  var G__21951 = i__21917_21946 + 1;
                  seq__21914_21943 = G__21948;
                  chunk__21915_21944 = G__21949;
                  count__21916_21945 = G__21950;
                  i__21917_21946 = G__21951;
                  continue;
                } else {
                  var temp__4092__auto___21952 = cljs.core.seq.call(null, seq__21914_21943);
                  if (temp__4092__auto___21952) {
                    var seq__21914_21953__$1 = temp__4092__auto___21952;
                    if (cljs.core.chunked_seq_QMARK_.call(null, seq__21914_21953__$1)) {
                      var c__11077__auto___21954 = cljs.core.chunk_first.call(null, seq__21914_21953__$1);
                      var G__21955 = cljs.core.chunk_rest.call(null, seq__21914_21953__$1);
                      var G__21956 = c__11077__auto___21954;
                      var G__21957 = cljs.core.count.call(null, c__11077__auto___21954);
                      var G__21958 = 0;
                      seq__21914_21943 = G__21955;
                      chunk__21915_21944 = G__21956;
                      count__21916_21945 = G__21957;
                      i__21917_21946 = G__21958;
                      continue;
                    } else {
                      var x_21959__$1 = cljs.core.first.call(null, seq__21914_21953__$1);
                      arr.push(x_21959__$1);
                      var G__21960 = cljs.core.next.call(null, seq__21914_21953__$1);
                      var G__21961 = null;
                      var G__21962 = 0;
                      var G__21963 = 0;
                      seq__21914_21943 = G__21960;
                      chunk__21915_21944 = G__21961;
                      count__21916_21945 = G__21962;
                      i__21917_21946 = G__21963;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return x;
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
  var obj21965 = {};
  return obj21965;
}();
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if (function() {
    var and__10317__auto__ = x;
    if (and__10317__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__10956__auto__ = x == null ? null : x;
    return function() {
      var or__10329__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._js__GT_clj["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options);
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.call(null, x, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672), false], null));
  };
  var js__GT_clj__2 = function() {
    var G__21986__delegate = function(x, opts) {
      if (function() {
        var G__21976 = x;
        if (G__21976) {
          var bit__10979__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__10329__auto__ = bit__10979__auto__;
            if (cljs.core.truth_(or__10329__auto__)) {
              return or__10329__auto__;
            } else {
              return G__21976.cljs$core$IEncodeClojure$;
            }
          }())) {
            return true;
          } else {
            if (!G__21976.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__21976);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__21976);
        }
      }()) {
        return cljs.core._js__GT_clj.call(null, x, cljs.core.apply.call(null, cljs.core.array_map, opts));
      } else {
        if (cljs.core.seq.call(null, opts)) {
          var map__21977 = opts;
          var map__21977__$1 = cljs.core.seq_QMARK_.call(null, map__21977) ? cljs.core.apply.call(null, cljs.core.hash_map, map__21977) : map__21977;
          var keywordize_keys = cljs.core.get.call(null, map__21977__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672));
          var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
          var f = function(map__21977, map__21977__$1, keywordize_keys, keyfn) {
            return function thisfn(x__$1) {
              if (cljs.core.seq_QMARK_.call(null, x__$1)) {
                return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x__$1));
              } else {
                if (cljs.core.coll_QMARK_.call(null, x__$1)) {
                  return cljs.core.into.call(null, cljs.core.empty.call(null, x__$1), cljs.core.map.call(null, thisfn, x__$1));
                } else {
                  if (x__$1 instanceof Array) {
                    return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x__$1));
                  } else {
                    if (cljs.core.type.call(null, x__$1) === Object) {
                      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                        var iter__11046__auto__ = function(map__21977, map__21977__$1, keywordize_keys, keyfn) {
                          return function iter__21982(s__21983) {
                            return new cljs.core.LazySeq(null, function(map__21977, map__21977__$1, keywordize_keys, keyfn) {
                              return function() {
                                var s__21983__$1 = s__21983;
                                while (true) {
                                  var temp__4092__auto__ = cljs.core.seq.call(null, s__21983__$1);
                                  if (temp__4092__auto__) {
                                    var s__21983__$2 = temp__4092__auto__;
                                    if (cljs.core.chunked_seq_QMARK_.call(null, s__21983__$2)) {
                                      var c__11044__auto__ = cljs.core.chunk_first.call(null, s__21983__$2);
                                      var size__11045__auto__ = cljs.core.count.call(null, c__11044__auto__);
                                      var b__21985 = cljs.core.chunk_buffer.call(null, size__11045__auto__);
                                      if (function() {
                                        var i__21984 = 0;
                                        while (true) {
                                          if (i__21984 < size__11045__auto__) {
                                            var k = cljs.core._nth.call(null, c__11044__auto__, i__21984);
                                            cljs.core.chunk_append.call(null, b__21985, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null));
                                            var G__21987 = i__21984 + 1;
                                            i__21984 = G__21987;
                                            continue;
                                          } else {
                                            return true;
                                          }
                                          break;
                                        }
                                      }()) {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__21985), iter__21982.call(null, cljs.core.chunk_rest.call(null, s__21983__$2)));
                                      } else {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__21985), null);
                                      }
                                    } else {
                                      var k = cljs.core.first.call(null, s__21983__$2);
                                      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null), iter__21982.call(null, cljs.core.rest.call(null, s__21983__$2)));
                                    }
                                  } else {
                                    return null;
                                  }
                                  break;
                                }
                              };
                            }(map__21977, map__21977__$1, keywordize_keys, keyfn), null, null);
                          };
                        }(map__21977, map__21977__$1, keywordize_keys, keyfn);
                        return iter__11046__auto__.call(null, cljs.core.js_keys.call(null, x__$1));
                      }());
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        return x__$1;
                      } else {
                        return null;
                      }
                    }
                  }
                }
              }
            };
          }(map__21977, map__21977__$1, keywordize_keys, keyfn);
          return f.call(null, x);
        } else {
          return null;
        }
      }
    };
    var G__21986 = function(x, var_args) {
      var opts = null;
      if (arguments.length > 1) {
        opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__21986__delegate.call(this, x, opts);
    };
    G__21986.cljs$lang$maxFixedArity = 1;
    G__21986.cljs$lang$applyTo = function(arglist__21988) {
      var x = cljs.core.first(arglist__21988);
      var opts = cljs.core.rest(arglist__21988);
      return G__21986__delegate(x, opts);
    };
    G__21986.cljs$core$IFn$_invoke$arity$variadic = G__21986__delegate;
    return G__21986;
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj;
}();
cljs.core.memoize = function memoize(f) {
  var mem = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  return function() {
    var G__21989__delegate = function(args) {
      var temp__4090__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mem), args);
      if (cljs.core.truth_(temp__4090__auto__)) {
        var v = temp__4090__auto__;
        return v;
      } else {
        var ret = cljs.core.apply.call(null, f, args);
        cljs.core.swap_BANG_.call(null, mem, cljs.core.assoc, args, ret);
        return ret;
      }
    };
    var G__21989 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__21989__delegate.call(this, args);
    };
    G__21989.cljs$lang$maxFixedArity = 0;
    G__21989.cljs$lang$applyTo = function(arglist__21990) {
      var args = cljs.core.seq(arglist__21990);
      return G__21989__delegate(args);
    };
    G__21989.cljs$core$IFn$_invoke$arity$variadic = G__21989__delegate;
    return G__21989;
  }();
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while (true) {
      var ret = f.call(null);
      if (cljs.core.fn_QMARK_.call(null, ret)) {
        var G__21991 = ret;
        f = G__21991;
        continue;
      } else {
        return ret;
      }
      break;
    }
  };
  var trampoline__2 = function() {
    var G__21992__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args);
      });
    };
    var G__21992 = function(f, var_args) {
      var args = null;
      if (arguments.length > 1) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__21992__delegate.call(this, f, args);
    };
    G__21992.cljs$lang$maxFixedArity = 1;
    G__21992.cljs$lang$applyTo = function(arglist__21993) {
      var f = cljs.core.first(arglist__21993);
      var args = cljs.core.rest(arglist__21993);
      return G__21992__delegate(f, args);
    };
    G__21992.cljs$core$IFn$_invoke$arity$variadic = G__21992__delegate;
    return G__21992;
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline;
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1);
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n;
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n);
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)));
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k, cljs.core.conj.call(null, cljs.core.get.call(null, ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.PersistentArrayMap.EMPTY, coll);
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", 4515496059), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 768214664), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.call(null, cljs.core.swap_BANG_, cljs.core.get_global_hierarchy.call(null), f, args);
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args);
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__21994) {
    var f = cljs.core.first(arglist__21994);
    var args = cljs.core.rest(arglist__21994);
    return swap_global_hierarchy_BANG___delegate(f, args);
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_;
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), child, parent);
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__10329__auto__ = cljs.core._EQ_.call(null, child, parent);
    if (or__10329__auto__) {
      return or__10329__auto__;
    } else {
      var or__10329__auto____$1 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
      if (or__10329__auto____$1) {
        return or__10329__auto____$1;
      } else {
        var and__10317__auto__ = cljs.core.vector_QMARK_.call(null, parent);
        if (and__10317__auto__) {
          var and__10317__auto____$1 = cljs.core.vector_QMARK_.call(null, child);
          if (and__10317__auto____$1) {
            var and__10317__auto____$2 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if (and__10317__auto____$2) {
              var ret = true;
              var i = 0;
              while (true) {
                if (!ret || i === cljs.core.count.call(null, parent)) {
                  return ret;
                } else {
                  var G__21995 = isa_QMARK_.call(null, h, child.call(null, i), parent.call(null, i));
                  var G__21996 = i + 1;
                  ret = G__21995;
                  i = G__21996;
                  continue;
                }
                break;
              }
            } else {
              return and__10317__auto____$2;
            }
          } else {
            return and__10317__auto____$1;
          }
        } else {
          return and__10317__auto__;
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_;
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents;
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors;
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants;
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if (cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", -388313324, null), new cljs.core.Symbol(null, "parent", "parent", 1659011683, null))))].join(""));
    }
    cljs.core.swap_global_hierarchy_BANG_.call(null, derive, tag, parent);
    return null;
  };
  var derive__3 = function(h, tag, parent) {
    if (cljs.core.not_EQ_.call(null, tag, parent)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", -1637144189, null), new cljs.core.Symbol(null, "tag", "tag", -1640416941, null), new cljs.core.Symbol(null, "parent", "parent", 1659011683, null))))].join(""));
    }
    var tp = (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h);
    var td = (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h);
    var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.call(null, function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.get.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))));
          };
        }(tp, td, ta), m, cljs.core.cons.call(null, source, sources.call(null, source)));
      };
    }(tp, td, ta);
    var or__10329__auto__ = cljs.core.contains_QMARK_.call(null, tp.call(null, tag), parent) ? null : function() {
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", 4515496059), cljs.core.assoc.call(null, (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.call(null, cljs.core.get.call(null, tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442), tf.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h), 
      tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 768214664), tf.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
    }();
    if (cljs.core.truth_(or__10329__auto__)) {
      return or__10329__auto__;
    } else {
      return h;
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive;
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.call(null, underive, tag, parent);
    return null;
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h);
    var childsParents = cljs.core.truth_(parentMap.call(null, tag)) ? cljs.core.disj.call(null, parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents)) ? cljs.core.assoc.call(null, parentMap, tag, childsParents) : cljs.core.dissoc.call(null, parentMap, tag);
    var deriv_seq = cljs.core.flatten.call(null, cljs.core.map.call(null, function(parentMap, childsParents, newParents) {
      return function(p1__21997_SHARP_) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, p1__21997_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__21997_SHARP_), cljs.core.second.call(null, p1__21997_SHARP_)));
      };
    }(parentMap, childsParents, newParents), cljs.core.seq.call(null, newParents)));
    if (cljs.core.contains_QMARK_.call(null, parentMap.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(p1__21998_SHARP_, p2__21999_SHARP_) {
        return cljs.core.apply.call(null, cljs.core.derive, p1__21998_SHARP_, p2__21999_SHARP_);
      }, cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq));
    } else {
      return h;
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive;
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table);
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy);
  });
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__10329__auto__ = cljs.core.truth_(function() {
    var and__10317__auto__ = xprefs;
    if (cljs.core.truth_(and__10317__auto__)) {
      return xprefs.call(null, y);
    } else {
      return and__10317__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__10329__auto__)) {
    return or__10329__auto__;
  } else {
    var or__10329__auto____$1 = function() {
      var ps = cljs.core.parents.call(null, y);
      while (true) {
        if (cljs.core.count.call(null, ps) > 0) {
          if (cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps), prefer_table))) {
          } else {
          }
          var G__22000 = cljs.core.rest.call(null, ps);
          ps = G__22000;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__10329__auto____$1)) {
      return or__10329__auto____$1;
    } else {
      var or__10329__auto____$2 = function() {
        var ps = cljs.core.parents.call(null, x);
        while (true) {
          if (cljs.core.count.call(null, ps) > 0) {
            if (cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps), y, prefer_table))) {
            } else {
            }
            var G__22001 = cljs.core.rest.call(null, ps);
            ps = G__22001;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__10329__auto____$2)) {
        return or__10329__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__10329__auto__ = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if (cljs.core.truth_(or__10329__auto__)) {
    return or__10329__auto__;
  } else {
    return cljs.core.isa_QMARK_.call(null, x, y);
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.call(null, function(be, p__22004) {
    var vec__22005 = p__22004;
    var k = cljs.core.nth.call(null, vec__22005, 0, null);
    var _ = cljs.core.nth.call(null, vec__22005, 1, null);
    var e = vec__22005;
    if (cljs.core.isa_QMARK_.call(null, cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__10329__auto__ = be == null;
        if (or__10329__auto__) {
          return or__10329__auto__;
        } else {
          return cljs.core.dominates.call(null, k, cljs.core.first.call(null, be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, cljs.core.deref.call(null, method_table));
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry));
      return cljs.core.second.call(null, best_entry);
    } else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
  var obj22007 = {};
  return obj22007;
}();
cljs.core._reset = function _reset(mf) {
  if (function() {
    var and__10317__auto__ = mf;
    if (and__10317__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__10956__auto__ = mf == null ? null : mf;
    return function() {
      var or__10329__auto__ = cljs.core._reset[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._reset["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if (function() {
    var and__10317__auto__ = mf;
    if (and__10317__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__10956__auto__ = mf == null ? null : mf;
    return function() {
      var or__10329__auto__ = cljs.core._add_method[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._add_method["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method);
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if (function() {
    var and__10317__auto__ = mf;
    if (and__10317__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__10956__auto__ = mf == null ? null : mf;
    return function() {
      var or__10329__auto__ = cljs.core._remove_method[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._remove_method["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (function() {
    var and__10317__auto__ = mf;
    if (and__10317__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__10956__auto__ = mf == null ? null : mf;
    return function() {
      var or__10329__auto__ = cljs.core._prefer_method[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._prefer_method["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y);
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if (function() {
    var and__10317__auto__ = mf;
    if (and__10317__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__10956__auto__ = mf == null ? null : mf;
    return function() {
      var or__10329__auto__ = cljs.core._get_method[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._get_method["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._methods = function _methods(mf) {
  if (function() {
    var and__10317__auto__ = mf;
    if (and__10317__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__10956__auto__ = mf == null ? null : mf;
    return function() {
      var or__10329__auto__ = cljs.core._methods[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._methods["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._prefers = function _prefers(mf) {
  if (function() {
    var and__10317__auto__ = mf;
    if (and__10317__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__10956__auto__ = mf == null ? null : mf;
    return function() {
      var or__10329__auto__ = cljs.core._prefers[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._prefers["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._dispatch = function _dispatch(mf, args) {
  if (function() {
    var and__10317__auto__ = mf;
    if (and__10317__auto__) {
      return mf.cljs$core$IMultiFn$_dispatch$arity$2;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch$arity$2(mf, args);
  } else {
    var x__10956__auto__ = mf == null ? null : mf;
    return function() {
      var or__10329__auto__ = cljs.core._dispatch[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.core._dispatch["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-dispatch", mf);
        }
      }
    }().call(null, mf, args);
  }
};
cljs.core.do_dispatch = function do_dispatch(mf, name, dispatch_fn, args) {
  var dispatch_val = cljs.core.apply.call(null, dispatch_fn, args);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
  }
  return cljs.core.apply.call(null, target_fn, args);
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194304;
  this.cljs$lang$protocol_mask$partition1$ = 256;
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__10896__auto__, writer__10897__auto__, opt__10898__auto__) {
  return cljs.core._write.call(null, writer__10897__auto__, "cljs.core/MultiFn");
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, function(mf__$2) {
    return cljs.core.PersistentArrayMap.EMPTY;
  });
  cljs.core.swap_BANG_.call(null, self__.method_cache, function(mf__$2) {
    return cljs.core.PersistentArrayMap.EMPTY;
  });
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$2) {
    return cljs.core.PersistentArrayMap.EMPTY;
  });
  cljs.core.swap_BANG_.call(null, self__.cached_hierarchy, function(mf__$2) {
    return null;
  });
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.call(null, self__.hierarchy))) {
  } else {
    cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4090__auto__ = cljs.core.deref.call(null, self__.method_cache).call(null, dispatch_val);
  if (cljs.core.truth_(temp__4090__auto__)) {
    var target_fn = temp__4090__auto__;
    return target_fn;
  } else {
    var temp__4090__auto____$1 = cljs.core.find_and_cache_best_method.call(null, self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4090__auto____$1)) {
      var target_fn = temp__4090__auto____$1;
      return target_fn;
    } else {
      return cljs.core.deref.call(null, self__.method_table).call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(old) {
    return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core.get.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
  });
  return cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.prefer_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch$arity$2 = function(mf, args) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.do_dispatch.call(null, mf__$1, self__.name, self__.dispatch_fn, args);
};
cljs.core.__GT_MultiFn = function __GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.MultiFn.prototype.call = function() {
  var G__22008__delegate = function(_, args) {
    var self = this;
    return cljs.core._dispatch.call(null, self, args);
  };
  var G__22008 = function(_, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return G__22008__delegate.call(this, _, args);
  };
  G__22008.cljs$lang$maxFixedArity = 1;
  G__22008.cljs$lang$applyTo = function(arglist__22009) {
    var _ = cljs.core.first(arglist__22009);
    var args = cljs.core.rest(arglist__22009);
    return G__22008__delegate(_, args);
  };
  G__22008.cljs$core$IFn$_invoke$arity$variadic = G__22008__delegate;
  return G__22008;
}();
cljs.core.MultiFn.prototype.apply = function(_, args) {
  var self = this;
  return cljs.core._dispatch.call(null, self, args);
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn);
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val);
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn);
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val);
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn);
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__10896__auto__, writer__10897__auto__, opt__10898__auto__) {
  return cljs.core._write.call(null, writer__10897__auto__, "cljs.core/UUID");
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$__$1));
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.__GT_UUID = function __GT_UUID(uuid) {
  return new cljs.core.UUID(uuid);
};
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause;
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__10899__auto__, writer__10900__auto__, opts__10901__auto__) {
  return cljs.core._write.call(null, writer__10900__auto__, "cljs.core/ExceptionInfo");
};
cljs.core.__GT_ExceptionInfo = function __GT_ExceptionInfo(message, data, cause) {
  return new cljs.core.ExceptionInfo(message, data, cause);
};
cljs.core.ExceptionInfo.prototype = new Error;
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, map) {
    return new cljs.core.ExceptionInfo(msg, map, null);
  };
  var ex_info__3 = function(msg, map, cause) {
    return new cljs.core.ExceptionInfo(msg, map, cause);
  };
  ex_info = function(msg, map, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, map);
      case 3:
        return ex_info__3.call(this, msg, map, cause);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info;
}();
cljs.core.ex_data = function ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(pred.call(null, x, y))) {
      return-1;
    } else {
      if (cljs.core.truth_(pred.call(null, y, x))) {
        return 1;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return 0;
        } else {
          return null;
        }
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "deftype*", "deftype*", -978581244, null), null, new cljs.core.Symbol(null, "new", "new", -1640422567, null), null, new cljs.core.Symbol(null, "quote", "quote", -1532577739, null), null, new cljs.core.Symbol(null, "\x26", "\x26", -1640531489, null), null, new cljs.core.Symbol(null, "set!", "set!", -1637004872, null), null, new cljs.core.Symbol(null, 
  "recur", "recur", -1532142362, null), null, new cljs.core.Symbol(null, ".", ".", -1640531481, null), null, new cljs.core.Symbol(null, "ns", "ns", -1640528002, null), null, new cljs.core.Symbol(null, "do", "do", -1640528316, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -1640430053, null), null, new cljs.core.Symbol(null, "throw", "throw", -1530191713, null), null, new cljs.core.Symbol(null, "letfn*", "letfn*", 1548249632, null), null, new cljs.core.Symbol(null, "js*", "js*", -1640426054, 
  null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", 774272013, null), null, new cljs.core.Symbol(null, "let*", "let*", -1637213400, null), null, new cljs.core.Symbol(null, "loop*", "loop*", -1537374273, null), null, new cljs.core.Symbol(null, "try", "try", -1640416396, null), null, new cljs.core.Symbol(null, "if", "if", -1640528170, null), null, new cljs.core.Symbol(null, "def", "def", -1640432194, null), null], null), null), x);
};
goog.provide("clojure.walk");
goog.require("cljs.core");
clojure.walk.walk = function walk(inner, outer, form) {
  if (cljs.core.seq_QMARK_.call(null, form)) {
    return outer.call(null, cljs.core.doall.call(null, cljs.core.map.call(null, inner, form)));
  } else {
    if (cljs.core.coll_QMARK_.call(null, form)) {
      return outer.call(null, cljs.core.into.call(null, cljs.core.empty.call(null, form), cljs.core.map.call(null, inner, form)));
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return outer.call(null, form);
      } else {
        return null;
      }
    }
  }
};
clojure.walk.postwalk = function postwalk(f, form) {
  return clojure.walk.walk.call(null, cljs.core.partial.call(null, postwalk, f), f, form);
};
clojure.walk.prewalk = function prewalk(f, form) {
  return clojure.walk.walk.call(null, cljs.core.partial.call(null, prewalk, f), cljs.core.identity, f.call(null, form));
};
clojure.walk.keywordize_keys = function keywordize_keys(m) {
  var f = function(p__20959) {
    var vec__20960 = p__20959;
    var k = cljs.core.nth.call(null, vec__20960, 0, null);
    var v = cljs.core.nth.call(null, vec__20960, 1, null);
    if (typeof k === "string") {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), v], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null);
    }
  };
  return clojure.walk.postwalk.call(null, function(x) {
    if (cljs.core.map_QMARK_.call(null, x)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, f, x));
    } else {
      return x;
    }
  }, m);
};
clojure.walk.stringify_keys = function stringify_keys(m) {
  var f = function(p__20963) {
    var vec__20964 = p__20963;
    var k = cljs.core.nth.call(null, vec__20964, 0, null);
    var v = cljs.core.nth.call(null, vec__20964, 1, null);
    if (k instanceof cljs.core.Keyword) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.name.call(null, k), v], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null);
    }
  };
  return clojure.walk.postwalk.call(null, function(x) {
    if (cljs.core.map_QMARK_.call(null, x)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, f, x));
    } else {
      return x;
    }
  }, m);
};
clojure.walk.prewalk_replace = function prewalk_replace(smap, form) {
  return clojure.walk.prewalk.call(null, function(x) {
    if (cljs.core.contains_QMARK_.call(null, smap, x)) {
      return smap.call(null, x);
    } else {
      return x;
    }
  }, form);
};
clojure.walk.postwalk_replace = function postwalk_replace(smap, form) {
  return clojure.walk.postwalk.call(null, function(x) {
    if (cljs.core.contains_QMARK_.call(null, smap, x)) {
      return smap.call(null, x);
    } else {
      return x;
    }
  }, form);
};
goog.provide("cljs.reader");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("goog.string");
cljs.reader.PushbackReader = function() {
  var obj20855 = {};
  return obj20855;
}();
cljs.reader.read_char = function read_char(reader) {
  if (function() {
    var and__10317__auto__ = reader;
    if (and__10317__auto__) {
      return reader.cljs$reader$PushbackReader$read_char$arity$1;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return reader.cljs$reader$PushbackReader$read_char$arity$1(reader);
  } else {
    var x__10956__auto__ = reader == null ? null : reader;
    return function() {
      var or__10329__auto__ = cljs.reader.read_char[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.reader.read_char["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.read-char", reader);
        }
      }
    }().call(null, reader);
  }
};
cljs.reader.unread = function unread(reader, ch) {
  if (function() {
    var and__10317__auto__ = reader;
    if (and__10317__auto__) {
      return reader.cljs$reader$PushbackReader$unread$arity$2;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return reader.cljs$reader$PushbackReader$unread$arity$2(reader, ch);
  } else {
    var x__10956__auto__ = reader == null ? null : reader;
    return function() {
      var or__10329__auto__ = cljs.reader.unread[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.reader.unread["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.unread", reader);
        }
      }
    }().call(null, reader, ch);
  }
};
cljs.reader.StringPushbackReader = function(s, buffer, idx) {
  this.s = s;
  this.buffer = buffer;
  this.idx = idx;
};
cljs.reader.StringPushbackReader.cljs$lang$type = true;
cljs.reader.StringPushbackReader.cljs$lang$ctorStr = "cljs.reader/StringPushbackReader";
cljs.reader.StringPushbackReader.cljs$lang$ctorPrWriter = function(this__10896__auto__, writer__10897__auto__, opt__10898__auto__) {
  return cljs.core._write.call(null, writer__10897__auto__, "cljs.reader/StringPushbackReader");
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$ = true;
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  if (self__.buffer.length === 0) {
    self__.idx = self__.idx + 1;
    return self__.s[self__.idx];
  } else {
    return self__.buffer.pop();
  }
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$unread$arity$2 = function(reader, ch) {
  var self__ = this;
  var reader__$1 = this;
  return self__.buffer.push(ch);
};
cljs.reader.__GT_StringPushbackReader = function __GT_StringPushbackReader(s, buffer, idx) {
  return new cljs.reader.StringPushbackReader(s, buffer, idx);
};
cljs.reader.push_back_reader = function push_back_reader(s) {
  return new cljs.reader.StringPushbackReader(s, [], -1);
};
cljs.reader.whitespace_QMARK_ = function whitespace_QMARK_(ch) {
  var or__10329__auto__ = goog.string.isBreakingWhitespace(ch);
  if (cljs.core.truth_(or__10329__auto__)) {
    return or__10329__auto__;
  } else {
    return "," === ch;
  }
};
cljs.reader.numeric_QMARK_ = function numeric_QMARK_(ch) {
  return goog.string.isNumeric(ch);
};
cljs.reader.comment_prefix_QMARK_ = function comment_prefix_QMARK_(ch) {
  return ";" === ch;
};
cljs.reader.number_literal_QMARK_ = function number_literal_QMARK_(reader, initch) {
  return cljs.reader.numeric_QMARK_.call(null, initch) || ("+" === initch || "-" === initch) && cljs.reader.numeric_QMARK_.call(null, function() {
    var next_ch = cljs.reader.read_char.call(null, reader);
    cljs.reader.unread.call(null, reader, next_ch);
    return next_ch;
  }());
};
cljs.reader.reader_error = function() {
  var reader_error__delegate = function(rdr, msg) {
    throw new Error(cljs.core.apply.call(null, cljs.core.str, msg));
  };
  var reader_error = function(rdr, var_args) {
    var msg = null;
    if (arguments.length > 1) {
      msg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return reader_error__delegate.call(this, rdr, msg);
  };
  reader_error.cljs$lang$maxFixedArity = 1;
  reader_error.cljs$lang$applyTo = function(arglist__20856) {
    var rdr = cljs.core.first(arglist__20856);
    var msg = cljs.core.rest(arglist__20856);
    return reader_error__delegate(rdr, msg);
  };
  reader_error.cljs$core$IFn$_invoke$arity$variadic = reader_error__delegate;
  return reader_error;
}();
cljs.reader.macro_terminating_QMARK_ = function macro_terminating_QMARK_(ch) {
  var and__10317__auto__ = !(ch === "#");
  if (and__10317__auto__) {
    var and__10317__auto____$1 = !(ch === "'");
    if (and__10317__auto____$1) {
      var and__10317__auto____$2 = !(ch === ":");
      if (and__10317__auto____$2) {
        return cljs.reader.macros.call(null, ch);
      } else {
        return and__10317__auto____$2;
      }
    } else {
      return and__10317__auto____$1;
    }
  } else {
    return and__10317__auto__;
  }
};
cljs.reader.read_token = function read_token(rdr, initch) {
  var sb = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, rdr);
  while (true) {
    if (ch == null || (cljs.reader.whitespace_QMARK_.call(null, ch) || cljs.reader.macro_terminating_QMARK_.call(null, ch))) {
      cljs.reader.unread.call(null, rdr, ch);
      return sb.toString();
    } else {
      var G__20857 = function() {
        sb.append(ch);
        return sb;
      }();
      var G__20858 = cljs.reader.read_char.call(null, rdr);
      sb = G__20857;
      ch = G__20858;
      continue;
    }
    break;
  }
};
cljs.reader.skip_line = function skip_line(reader, _) {
  while (true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if (ch === "\n" || (ch === "\r" || ch == null)) {
      return reader;
    } else {
      continue;
    }
    break;
  }
};
cljs.reader.int_pattern = cljs.core.re_pattern.call(null, "([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+)|0[0-9]+)(N)?");
cljs.reader.ratio_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+)/([0-9]+)");
cljs.reader.float_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?");
cljs.reader.symbol_pattern = cljs.core.re_pattern.call(null, "[:]?([^0-9/].*/)?([^0-9/][^/]*)");
cljs.reader.re_find_STAR_ = function re_find_STAR_(re, s) {
  var matches = re.exec(s);
  if (matches == null) {
    return null;
  } else {
    if (matches.length === 1) {
      return matches[0];
    } else {
      return matches;
    }
  }
};
cljs.reader.match_int = function match_int(s) {
  var groups = cljs.reader.re_find_STAR_.call(null, cljs.reader.int_pattern, s);
  var group3 = groups[2];
  if (!(group3 == null || group3.length < 1)) {
    return 0;
  } else {
    var negate = "-" === groups[1] ? -1 : 1;
    var a = cljs.core.truth_(groups[3]) ? [groups[3], 10] : cljs.core.truth_(groups[4]) ? [groups[4], 16] : cljs.core.truth_(groups[5]) ? [groups[5], 8] : cljs.core.truth_(groups[7]) ? [groups[7], parseInt(groups[7])] : new cljs.core.Keyword(null, "default", "default", 2558708147) ? [null, null] : null;
    var n = a[0];
    var radix = a[1];
    if (n == null) {
      return null;
    } else {
      return negate * parseInt(n, radix);
    }
  }
};
cljs.reader.match_ratio = function match_ratio(s) {
  var groups = cljs.reader.re_find_STAR_.call(null, cljs.reader.ratio_pattern, s);
  var numinator = groups[1];
  var denominator = groups[2];
  return parseInt(numinator) / parseInt(denominator);
};
cljs.reader.match_float = function match_float(s) {
  return parseFloat(s);
};
cljs.reader.re_matches_STAR_ = function re_matches_STAR_(re, s) {
  var matches = re.exec(s);
  if (!(matches == null) && matches[0] === s) {
    if (matches.length === 1) {
      return matches[0];
    } else {
      return matches;
    }
  } else {
    return null;
  }
};
cljs.reader.match_number = function match_number(s) {
  if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s))) {
    return cljs.reader.match_int.call(null, s);
  } else {
    if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s))) {
      return cljs.reader.match_ratio.call(null, s);
    } else {
      if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.float_pattern, s))) {
        return cljs.reader.match_float.call(null, s);
      } else {
        return null;
      }
    }
  }
};
cljs.reader.escape_char_map = function escape_char_map(c) {
  if (c === "t") {
    return "\t";
  } else {
    if (c === "r") {
      return "\r";
    } else {
      if (c === "n") {
        return "\n";
      } else {
        if (c === "\\") {
          return "\\";
        } else {
          if (c === '"') {
            return'"';
          } else {
            if (c === "b") {
              return "\b";
            } else {
              if (c === "f") {
                return "\f";
              } else {
                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  return null;
                } else {
                  return null;
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.read_2_chars = function read_2_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString();
};
cljs.reader.read_4_chars = function read_4_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString();
};
cljs.reader.unicode_2_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{2}");
cljs.reader.unicode_4_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{4}");
cljs.reader.validate_unicode_escape = function validate_unicode_escape(unicode_pattern, reader, escape_char, unicode_str) {
  if (cljs.core.truth_(cljs.core.re_matches.call(null, unicode_pattern, unicode_str))) {
    return unicode_str;
  } else {
    return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", escape_char, unicode_str);
  }
};
cljs.reader.make_unicode_char = function make_unicode_char(code_str) {
  var code = parseInt(code_str, 16);
  return String.fromCharCode(code);
};
cljs.reader.escape_char = function escape_char(buffer, reader) {
  var ch = cljs.reader.read_char.call(null, reader);
  var mapresult = cljs.reader.escape_char_map.call(null, ch);
  if (cljs.core.truth_(mapresult)) {
    return mapresult;
  } else {
    if (ch === "x") {
      return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_2_pattern, reader, ch, cljs.reader.read_2_chars.call(null, reader)));
    } else {
      if (ch === "u") {
        return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_4_pattern, reader, ch, cljs.reader.read_4_chars.call(null, reader)));
      } else {
        if (cljs.reader.numeric_QMARK_.call(null, ch)) {
          return String.fromCharCode(ch);
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", ch);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.reader.read_past = function read_past(pred, rdr) {
  var ch = cljs.reader.read_char.call(null, rdr);
  while (true) {
    if (cljs.core.truth_(pred.call(null, ch))) {
      var G__20859 = cljs.reader.read_char.call(null, rdr);
      ch = G__20859;
      continue;
    } else {
      return ch;
    }
    break;
  }
};
cljs.reader.read_delimited_list = function read_delimited_list(delim, rdr, recursive_QMARK_) {
  var a = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while (true) {
    var ch = cljs.reader.read_past.call(null, cljs.reader.whitespace_QMARK_, rdr);
    if (cljs.core.truth_(ch)) {
    } else {
      cljs.reader.reader_error.call(null, rdr, "EOF while reading");
    }
    if (delim === ch) {
      return cljs.core.persistent_BANG_.call(null, a);
    } else {
      var temp__4090__auto__ = cljs.reader.macros.call(null, ch);
      if (cljs.core.truth_(temp__4090__auto__)) {
        var macrofn = temp__4090__auto__;
        var mret = macrofn.call(null, rdr, ch);
        var G__20860 = mret === rdr ? a : cljs.core.conj_BANG_.call(null, a, mret);
        a = G__20860;
        continue;
      } else {
        cljs.reader.unread.call(null, rdr, ch);
        var o = cljs.reader.read.call(null, rdr, true, null, recursive_QMARK_);
        var G__20861 = o === rdr ? a : cljs.core.conj_BANG_.call(null, a, o);
        a = G__20861;
        continue;
      }
    }
    break;
  }
};
cljs.reader.not_implemented = function not_implemented(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Reader for ", ch, " not implemented yet");
};
cljs.reader.read_dispatch = function read_dispatch(rdr, _) {
  var ch = cljs.reader.read_char.call(null, rdr);
  var dm = cljs.reader.dispatch_macros.call(null, ch);
  if (cljs.core.truth_(dm)) {
    return dm.call(null, rdr, _);
  } else {
    var temp__4090__auto__ = cljs.reader.maybe_read_tagged_type.call(null, rdr, ch);
    if (cljs.core.truth_(temp__4090__auto__)) {
      var obj = temp__4090__auto__;
      return obj;
    } else {
      return cljs.reader.reader_error.call(null, rdr, "No dispatch macro for ", ch);
    }
  }
};
cljs.reader.read_unmatched_delimiter = function read_unmatched_delimiter(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Unmached delimiter ", ch);
};
cljs.reader.read_list = function read_list(rdr, _) {
  return cljs.core.apply.call(null, cljs.core.list, cljs.reader.read_delimited_list.call(null, ")", rdr, true));
};
cljs.reader.read_comment = cljs.reader.skip_line;
cljs.reader.read_vector = function read_vector(rdr, _) {
  return cljs.reader.read_delimited_list.call(null, "]", rdr, true);
};
cljs.reader.read_map = function read_map(rdr, _) {
  var l = cljs.reader.read_delimited_list.call(null, "}", rdr, true);
  if (cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, l))) {
    cljs.reader.reader_error.call(null, rdr, "Map literal must contain an even number of forms");
  } else {
  }
  return cljs.core.apply.call(null, cljs.core.hash_map, l);
};
cljs.reader.read_number = function read_number(reader, initch) {
  var buffer = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (cljs.core.truth_(function() {
      var or__10329__auto__ = ch == null;
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = cljs.reader.whitespace_QMARK_.call(null, ch);
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          return cljs.reader.macros.call(null, ch);
        }
      }
    }())) {
      cljs.reader.unread.call(null, reader, ch);
      var s = buffer.toString();
      var or__10329__auto__ = cljs.reader.match_number.call(null, s);
      if (cljs.core.truth_(or__10329__auto__)) {
        return or__10329__auto__;
      } else {
        return cljs.reader.reader_error.call(null, reader, "Invalid number format [", s, "]");
      }
    } else {
      var G__20862 = function() {
        buffer.append(ch);
        return buffer;
      }();
      var G__20863 = cljs.reader.read_char.call(null, reader);
      buffer = G__20862;
      ch = G__20863;
      continue;
    }
    break;
  }
};
cljs.reader.read_string_STAR_ = function read_string_STAR_(reader, _) {
  var buffer = new goog.string.StringBuffer;
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (ch == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading");
    } else {
      if ("\\" === ch) {
        var G__20864 = function() {
          buffer.append(cljs.reader.escape_char.call(null, buffer, reader));
          return buffer;
        }();
        var G__20865 = cljs.reader.read_char.call(null, reader);
        buffer = G__20864;
        ch = G__20865;
        continue;
      } else {
        if ('"' === ch) {
          return buffer.toString();
        } else {
          if (new cljs.core.Keyword(null, "default", "default", 2558708147)) {
            var G__20866 = function() {
              buffer.append(ch);
              return buffer;
            }();
            var G__20867 = cljs.reader.read_char.call(null, reader);
            buffer = G__20866;
            ch = G__20867;
            continue;
          } else {
            return null;
          }
        }
      }
    }
    break;
  }
};
cljs.reader.special_symbols = function special_symbols(t, not_found) {
  if (t === "nil") {
    return null;
  } else {
    if (t === "true") {
      return true;
    } else {
      if (t === "false") {
        return false;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.reader.read_symbol = function read_symbol(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, initch);
  if (cljs.core.truth_(goog.string.contains(token, "/"))) {
    return cljs.core.symbol.call(null, cljs.core.subs.call(null, token, 0, token.indexOf("/")), cljs.core.subs.call(null, token, token.indexOf("/") + 1, token.length));
  } else {
    return cljs.reader.special_symbols.call(null, token, cljs.core.symbol.call(null, token));
  }
};
cljs.reader.read_keyword = function read_keyword(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, cljs.reader.read_char.call(null, reader));
  var a = cljs.reader.re_matches_STAR_.call(null, cljs.reader.symbol_pattern, token);
  var token__$1 = a[0];
  var ns = a[1];
  var name = a[2];
  if (!(void 0 === ns) && ns.substring(ns.length - 2, ns.length) === ":/" || (name[name.length - 1] === ":" || !(token__$1.indexOf("::", 1) === -1))) {
    return cljs.reader.reader_error.call(null, reader, "Invalid token: ", token__$1);
  } else {
    if (!(ns == null) && ns.length > 0) {
      return cljs.core.keyword.call(null, ns.substring(0, ns.indexOf("/")), name);
    } else {
      return cljs.core.keyword.call(null, token__$1);
    }
  }
};
cljs.reader.desugar_meta = function desugar_meta(f) {
  if (f instanceof cljs.core.Symbol) {
    return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", 1014018828), f], null);
  } else {
    if (typeof f === "string") {
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", 1014018828), f], null);
    } else {
      if (f instanceof cljs.core.Keyword) {
        return new cljs.core.PersistentArrayMap.fromArray([f, true], true, false);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return f;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.reader.wrapping_reader = function wrapping_reader(sym) {
  return function(rdr, _) {
    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.reader.read.call(null, rdr, true, null, true)), sym);
  };
};
cljs.reader.throwing_reader = function throwing_reader(msg) {
  return function(rdr, _) {
    return cljs.reader.reader_error.call(null, rdr, msg);
  };
};
cljs.reader.read_meta = function read_meta(rdr, _) {
  var m = cljs.reader.desugar_meta.call(null, cljs.reader.read.call(null, rdr, true, null, true));
  if (cljs.core.map_QMARK_.call(null, m)) {
  } else {
    cljs.reader.reader_error.call(null, rdr, "Metadata must be Symbol,Keyword,String or Map");
  }
  var o = cljs.reader.read.call(null, rdr, true, null, true);
  if (function() {
    var G__20869 = o;
    if (G__20869) {
      var bit__10979__auto__ = G__20869.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__10979__auto__ || G__20869.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__20869.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__20869);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__20869);
    }
  }()) {
    return cljs.core.with_meta.call(null, o, cljs.core.merge.call(null, cljs.core.meta.call(null, o), m));
  } else {
    return cljs.reader.reader_error.call(null, rdr, "Metadata can only be applied to IWithMetas");
  }
};
cljs.reader.read_set = function read_set(rdr, _) {
  return cljs.core.set.call(null, cljs.reader.read_delimited_list.call(null, "}", rdr, true));
};
cljs.reader.read_regex = function read_regex(rdr, ch) {
  return cljs.core.re_pattern.call(null, cljs.reader.read_string_STAR_.call(null, rdr, ch));
};
cljs.reader.read_discard = function read_discard(rdr, _) {
  cljs.reader.read.call(null, rdr, true, null, true);
  return rdr;
};
cljs.reader.macros = function macros(c) {
  if (c === '"') {
    return cljs.reader.read_string_STAR_;
  } else {
    if (c === ":") {
      return cljs.reader.read_keyword;
    } else {
      if (c === ";") {
        return cljs.reader.read_comment;
      } else {
        if (c === "'") {
          return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "quote", "quote", -1532577739, null));
        } else {
          if (c === "@") {
            return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "deref", "deref", -1545057749, null));
          } else {
            if (c === "^") {
              return cljs.reader.read_meta;
            } else {
              if (c === "`") {
                return cljs.reader.not_implemented;
              } else {
                if (c === "~") {
                  return cljs.reader.not_implemented;
                } else {
                  if (c === "(") {
                    return cljs.reader.read_list;
                  } else {
                    if (c === ")") {
                      return cljs.reader.read_unmatched_delimiter;
                    } else {
                      if (c === "[") {
                        return cljs.reader.read_vector;
                      } else {
                        if (c === "]") {
                          return cljs.reader.read_unmatched_delimiter;
                        } else {
                          if (c === "{") {
                            return cljs.reader.read_map;
                          } else {
                            if (c === "}") {
                              return cljs.reader.read_unmatched_delimiter;
                            } else {
                              if (c === "\\") {
                                return cljs.reader.read_char;
                              } else {
                                if (c === "#") {
                                  return cljs.reader.read_dispatch;
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    return null;
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.dispatch_macros = function dispatch_macros(s) {
  if (s === "{") {
    return cljs.reader.read_set;
  } else {
    if (s === "\x3c") {
      return cljs.reader.throwing_reader.call(null, "Unreadable form");
    } else {
      if (s === '"') {
        return cljs.reader.read_regex;
      } else {
        if (s === "!") {
          return cljs.reader.read_comment;
        } else {
          if (s === "_") {
            return cljs.reader.read_discard;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return null;
            } else {
              return null;
            }
          }
        }
      }
    }
  }
};
cljs.reader.read = function read(reader, eof_is_error, sentinel, is_recursive) {
  while (true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if (ch == null) {
      if (cljs.core.truth_(eof_is_error)) {
        return cljs.reader.reader_error.call(null, reader, "EOF while reading");
      } else {
        return sentinel;
      }
    } else {
      if (cljs.reader.whitespace_QMARK_.call(null, ch)) {
        var G__20870 = reader;
        var G__20871 = eof_is_error;
        var G__20872 = sentinel;
        var G__20873 = is_recursive;
        reader = G__20870;
        eof_is_error = G__20871;
        sentinel = G__20872;
        is_recursive = G__20873;
        continue;
      } else {
        if (cljs.reader.comment_prefix_QMARK_.call(null, ch)) {
          var G__20874 = cljs.reader.read_comment.call(null, reader, ch);
          var G__20875 = eof_is_error;
          var G__20876 = sentinel;
          var G__20877 = is_recursive;
          reader = G__20874;
          eof_is_error = G__20875;
          sentinel = G__20876;
          is_recursive = G__20877;
          continue;
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var f = cljs.reader.macros.call(null, ch);
            var res = cljs.core.truth_(f) ? f.call(null, reader, ch) : cljs.reader.number_literal_QMARK_.call(null, reader, ch) ? cljs.reader.read_number.call(null, reader, ch) : new cljs.core.Keyword(null, "else", "else", 1017020587) ? cljs.reader.read_symbol.call(null, reader, ch) : null;
            if (res === reader) {
              var G__20878 = reader;
              var G__20879 = eof_is_error;
              var G__20880 = sentinel;
              var G__20881 = is_recursive;
              reader = G__20878;
              eof_is_error = G__20879;
              sentinel = G__20880;
              is_recursive = G__20881;
              continue;
            } else {
              return res;
            }
          } else {
            return null;
          }
        }
      }
    }
    break;
  }
};
cljs.reader.read_string = function read_string(s) {
  var r = cljs.reader.push_back_reader.call(null, s);
  return cljs.reader.read.call(null, r, true, null, false);
};
cljs.reader.zero_fill_right_and_truncate = function zero_fill_right_and_truncate(s, width) {
  if (cljs.core._EQ_.call(null, width, cljs.core.count.call(null, s))) {
    return s;
  } else {
    if (width < cljs.core.count.call(null, s)) {
      return cljs.core.subs.call(null, s, 0, width);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var b = new goog.string.StringBuffer(s);
        while (true) {
          if (b.getLength() < width) {
            var G__20882 = b.append("0");
            b = G__20882;
            continue;
          } else {
            return b.toString();
          }
          break;
        }
      } else {
        return null;
      }
    }
  }
};
cljs.reader.divisible_QMARK_ = function divisible_QMARK_(num, div) {
  return cljs.core.mod.call(null, num, div) === 0;
};
cljs.reader.indivisible_QMARK_ = function indivisible_QMARK_(num, div) {
  return!cljs.reader.divisible_QMARK_.call(null, num, div);
};
cljs.reader.leap_year_QMARK_ = function leap_year_QMARK_(year) {
  return cljs.reader.divisible_QMARK_.call(null, year, 4) && (cljs.reader.indivisible_QMARK_.call(null, year, 100) || cljs.reader.divisible_QMARK_.call(null, year, 400));
};
cljs.reader.days_in_month = function() {
  var dim_norm = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  var dim_leap = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  return function(month, leap_year_QMARK_) {
    return cljs.core.get.call(null, cljs.core.truth_(leap_year_QMARK_) ? dim_leap : dim_norm, month);
  };
}();
cljs.reader.timestamp_regex = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
cljs.reader.parse_int = function parse_int(s) {
  var n = parseInt(s);
  if (cljs.core.not.call(null, isNaN(n))) {
    return n;
  } else {
    return null;
  }
};
cljs.reader.check = function check(low, n, high, msg) {
  if (low <= n && n <= high) {
  } else {
    cljs.reader.reader_error.call(null, null, [cljs.core.str(msg), cljs.core.str(" Failed:  "), cljs.core.str(low), cljs.core.str("\x3c\x3d"), cljs.core.str(n), cljs.core.str("\x3c\x3d"), cljs.core.str(high)].join(""));
  }
  return n;
};
cljs.reader.parse_and_validate_timestamp = function parse_and_validate_timestamp(s) {
  var vec__20884 = cljs.core.re_matches.call(null, cljs.reader.timestamp_regex, s);
  var _ = cljs.core.nth.call(null, vec__20884, 0, null);
  var years = cljs.core.nth.call(null, vec__20884, 1, null);
  var months = cljs.core.nth.call(null, vec__20884, 2, null);
  var days = cljs.core.nth.call(null, vec__20884, 3, null);
  var hours = cljs.core.nth.call(null, vec__20884, 4, null);
  var minutes = cljs.core.nth.call(null, vec__20884, 5, null);
  var seconds = cljs.core.nth.call(null, vec__20884, 6, null);
  var fraction = cljs.core.nth.call(null, vec__20884, 7, null);
  var offset_sign = cljs.core.nth.call(null, vec__20884, 8, null);
  var offset_hours = cljs.core.nth.call(null, vec__20884, 9, null);
  var offset_minutes = cljs.core.nth.call(null, vec__20884, 10, null);
  var v = vec__20884;
  if (cljs.core.not.call(null, v)) {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(s)].join(""));
  } else {
    var years__$1 = cljs.reader.parse_int.call(null, years);
    var months__$1 = function() {
      var or__10329__auto__ = cljs.reader.parse_int.call(null, months);
      if (cljs.core.truth_(or__10329__auto__)) {
        return or__10329__auto__;
      } else {
        return 1;
      }
    }();
    var days__$1 = function() {
      var or__10329__auto__ = cljs.reader.parse_int.call(null, days);
      if (cljs.core.truth_(or__10329__auto__)) {
        return or__10329__auto__;
      } else {
        return 1;
      }
    }();
    var hours__$1 = function() {
      var or__10329__auto__ = cljs.reader.parse_int.call(null, hours);
      if (cljs.core.truth_(or__10329__auto__)) {
        return or__10329__auto__;
      } else {
        return 0;
      }
    }();
    var minutes__$1 = function() {
      var or__10329__auto__ = cljs.reader.parse_int.call(null, minutes);
      if (cljs.core.truth_(or__10329__auto__)) {
        return or__10329__auto__;
      } else {
        return 0;
      }
    }();
    var seconds__$1 = function() {
      var or__10329__auto__ = cljs.reader.parse_int.call(null, seconds);
      if (cljs.core.truth_(or__10329__auto__)) {
        return or__10329__auto__;
      } else {
        return 0;
      }
    }();
    var fraction__$1 = function() {
      var or__10329__auto__ = cljs.reader.parse_int.call(null, cljs.reader.zero_fill_right_and_truncate.call(null, fraction, 3));
      if (cljs.core.truth_(or__10329__auto__)) {
        return or__10329__auto__;
      } else {
        return 0;
      }
    }();
    var offset_sign__$1 = cljs.core._EQ_.call(null, offset_sign, "-") ? -1 : 1;
    var offset_hours__$1 = function() {
      var or__10329__auto__ = cljs.reader.parse_int.call(null, offset_hours);
      if (cljs.core.truth_(or__10329__auto__)) {
        return or__10329__auto__;
      } else {
        return 0;
      }
    }();
    var offset_minutes__$1 = function() {
      var or__10329__auto__ = cljs.reader.parse_int.call(null, offset_minutes);
      if (cljs.core.truth_(or__10329__auto__)) {
        return or__10329__auto__;
      } else {
        return 0;
      }
    }();
    var offset = offset_sign__$1 * (offset_hours__$1 * 60 + offset_minutes__$1);
    return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [years__$1, cljs.reader.check.call(null, 1, months__$1, 12, "timestamp month field must be in range 1..12"), cljs.reader.check.call(null, 1, days__$1, cljs.reader.days_in_month.call(null, months__$1, cljs.reader.leap_year_QMARK_.call(null, years__$1)), "timestamp day field must be in range 1..last day in month"), cljs.reader.check.call(null, 0, hours__$1, 23, "timestamp hour field must be in range 0..23"), 
    cljs.reader.check.call(null, 0, minutes__$1, 59, "timestamp minute field must be in range 0..59"), cljs.reader.check.call(null, 0, seconds__$1, cljs.core._EQ_.call(null, minutes__$1, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), cljs.reader.check.call(null, 0, fraction__$1, 999, "timestamp millisecond field must be in range 0..999"), offset], null);
  }
};
cljs.reader.parse_timestamp = function parse_timestamp(ts) {
  var temp__4090__auto__ = cljs.reader.parse_and_validate_timestamp.call(null, ts);
  if (cljs.core.truth_(temp__4090__auto__)) {
    var vec__20886 = temp__4090__auto__;
    var years = cljs.core.nth.call(null, vec__20886, 0, null);
    var months = cljs.core.nth.call(null, vec__20886, 1, null);
    var days = cljs.core.nth.call(null, vec__20886, 2, null);
    var hours = cljs.core.nth.call(null, vec__20886, 3, null);
    var minutes = cljs.core.nth.call(null, vec__20886, 4, null);
    var seconds = cljs.core.nth.call(null, vec__20886, 5, null);
    var ms = cljs.core.nth.call(null, vec__20886, 6, null);
    var offset = cljs.core.nth.call(null, vec__20886, 7, null);
    return new Date(Date.UTC(years, months - 1, days, hours, minutes, seconds, ms) - offset * 60 * 1E3);
  } else {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(ts)].join(""));
  }
};
cljs.reader.read_date = function read_date(s) {
  if (typeof s === "string") {
    return cljs.reader.parse_timestamp.call(null, s);
  } else {
    return cljs.reader.reader_error.call(null, null, "Instance literal expects a string for its timestamp.");
  }
};
cljs.reader.read_queue = function read_queue(elems) {
  if (cljs.core.vector_QMARK_.call(null, elems)) {
    return cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, elems);
  } else {
    return cljs.reader.reader_error.call(null, null, "Queue literal expects a vector for its elements.");
  }
};
cljs.reader.read_js = function read_js(form) {
  if (cljs.core.vector_QMARK_.call(null, form)) {
    var arr = [];
    var seq__20899_20911 = cljs.core.seq.call(null, form);
    var chunk__20900_20912 = null;
    var count__20901_20913 = 0;
    var i__20902_20914 = 0;
    while (true) {
      if (i__20902_20914 < count__20901_20913) {
        var x_20915 = cljs.core._nth.call(null, chunk__20900_20912, i__20902_20914);
        arr.push(x_20915);
        var G__20916 = seq__20899_20911;
        var G__20917 = chunk__20900_20912;
        var G__20918 = count__20901_20913;
        var G__20919 = i__20902_20914 + 1;
        seq__20899_20911 = G__20916;
        chunk__20900_20912 = G__20917;
        count__20901_20913 = G__20918;
        i__20902_20914 = G__20919;
        continue;
      } else {
        var temp__4092__auto___20920 = cljs.core.seq.call(null, seq__20899_20911);
        if (temp__4092__auto___20920) {
          var seq__20899_20921__$1 = temp__4092__auto___20920;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__20899_20921__$1)) {
            var c__11077__auto___20922 = cljs.core.chunk_first.call(null, seq__20899_20921__$1);
            var G__20923 = cljs.core.chunk_rest.call(null, seq__20899_20921__$1);
            var G__20924 = c__11077__auto___20922;
            var G__20925 = cljs.core.count.call(null, c__11077__auto___20922);
            var G__20926 = 0;
            seq__20899_20911 = G__20923;
            chunk__20900_20912 = G__20924;
            count__20901_20913 = G__20925;
            i__20902_20914 = G__20926;
            continue;
          } else {
            var x_20927 = cljs.core.first.call(null, seq__20899_20921__$1);
            arr.push(x_20927);
            var G__20928 = cljs.core.next.call(null, seq__20899_20921__$1);
            var G__20929 = null;
            var G__20930 = 0;
            var G__20931 = 0;
            seq__20899_20911 = G__20928;
            chunk__20900_20912 = G__20929;
            count__20901_20913 = G__20930;
            i__20902_20914 = G__20931;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return arr;
  } else {
    if (cljs.core.map_QMARK_.call(null, form)) {
      var obj = function() {
        var obj20904 = {};
        return obj20904;
      }();
      var seq__20905_20932 = cljs.core.seq.call(null, form);
      var chunk__20906_20933 = null;
      var count__20907_20934 = 0;
      var i__20908_20935 = 0;
      while (true) {
        if (i__20908_20935 < count__20907_20934) {
          var vec__20909_20936 = cljs.core._nth.call(null, chunk__20906_20933, i__20908_20935);
          var k_20937 = cljs.core.nth.call(null, vec__20909_20936, 0, null);
          var v_20938 = cljs.core.nth.call(null, vec__20909_20936, 1, null);
          obj[cljs.core.name.call(null, k_20937)] = v_20938;
          var G__20939 = seq__20905_20932;
          var G__20940 = chunk__20906_20933;
          var G__20941 = count__20907_20934;
          var G__20942 = i__20908_20935 + 1;
          seq__20905_20932 = G__20939;
          chunk__20906_20933 = G__20940;
          count__20907_20934 = G__20941;
          i__20908_20935 = G__20942;
          continue;
        } else {
          var temp__4092__auto___20943 = cljs.core.seq.call(null, seq__20905_20932);
          if (temp__4092__auto___20943) {
            var seq__20905_20944__$1 = temp__4092__auto___20943;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__20905_20944__$1)) {
              var c__11077__auto___20945 = cljs.core.chunk_first.call(null, seq__20905_20944__$1);
              var G__20946 = cljs.core.chunk_rest.call(null, seq__20905_20944__$1);
              var G__20947 = c__11077__auto___20945;
              var G__20948 = cljs.core.count.call(null, c__11077__auto___20945);
              var G__20949 = 0;
              seq__20905_20932 = G__20946;
              chunk__20906_20933 = G__20947;
              count__20907_20934 = G__20948;
              i__20908_20935 = G__20949;
              continue;
            } else {
              var vec__20910_20950 = cljs.core.first.call(null, seq__20905_20944__$1);
              var k_20951 = cljs.core.nth.call(null, vec__20910_20950, 0, null);
              var v_20952 = cljs.core.nth.call(null, vec__20910_20950, 1, null);
              obj[cljs.core.name.call(null, k_20951)] = v_20952;
              var G__20953 = cljs.core.next.call(null, seq__20905_20944__$1);
              var G__20954 = null;
              var G__20955 = 0;
              var G__20956 = 0;
              seq__20905_20932 = G__20953;
              chunk__20906_20933 = G__20954;
              count__20907_20934 = G__20955;
              i__20908_20935 = G__20956;
              continue;
            }
          } else {
          }
        }
        break;
      }
      return obj;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.reader.reader_error.call(null, null, [cljs.core.str("JS literal expects a vector or map containing "), cljs.core.str("only string or unqualified keyword keys")].join(""));
      } else {
        return null;
      }
    }
  }
};
cljs.reader.read_uuid = function read_uuid(uuid) {
  if (typeof uuid === "string") {
    return new cljs.core.UUID(uuid);
  } else {
    return cljs.reader.reader_error.call(null, null, "UUID literal expects a string as its representation.");
  }
};
cljs.reader._STAR_tag_table_STAR_ = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, ["inst", cljs.reader.read_date, "uuid", cljs.reader.read_uuid, "queue", cljs.reader.read_queue, "js", cljs.reader.read_js], null));
cljs.reader._STAR_default_data_reader_fn_STAR_ = cljs.core.atom.call(null, null);
cljs.reader.maybe_read_tagged_type = function maybe_read_tagged_type(rdr, initch) {
  var tag = cljs.reader.read_symbol.call(null, rdr, initch);
  var pfn = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), [cljs.core.str(tag)].join(""));
  var dfn = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  if (cljs.core.truth_(pfn)) {
    return pfn.call(null, cljs.reader.read.call(null, rdr, true, null, false));
  } else {
    if (cljs.core.truth_(dfn)) {
      return dfn.call(null, tag, cljs.reader.read.call(null, rdr, true, null, false));
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.reader.reader_error.call(null, rdr, "Could not find tag parser for ", [cljs.core.str(tag)].join(""), " in ", cljs.core.pr_str.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_))));
      } else {
        return null;
      }
    }
  }
};
cljs.reader.register_tag_parser_BANG_ = function register_tag_parser_BANG_(tag, f) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, tag__$1, f);
  return old_parser;
};
cljs.reader.deregister_tag_parser_BANG_ = function deregister_tag_parser_BANG_(tag) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.dissoc, tag__$1);
  return old_parser;
};
cljs.reader.register_default_tag_parser_BANG_ = function register_default_tag_parser_BANG_(f) {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(_) {
    return f;
  });
  return old_parser;
};
cljs.reader.deregister_default_tag_parser_BANG_ = function deregister_default_tag_parser_BANG_() {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(_) {
    return null;
  });
  return old_parser;
};
goog.provide("clojure.set");
goog.require("cljs.core");
clojure.set.bubble_max_key = function bubble_max_key(k, coll) {
  var max = cljs.core.apply.call(null, cljs.core.max_key, k, coll);
  return cljs.core.cons.call(null, max, cljs.core.remove.call(null, function(p1__20824_SHARP_) {
    return max === p1__20824_SHARP_;
  }, coll));
};
clojure.set.union = function() {
  var union = null;
  var union__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var union__1 = function(s1) {
    return s1;
  };
  var union__2 = function(s1, s2) {
    if (cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, cljs.core.conj, s2, s1);
    } else {
      return cljs.core.reduce.call(null, cljs.core.conj, s1, s2);
    }
  };
  var union__3 = function() {
    var G__20825__delegate = function(s1, s2, sets) {
      var bubbled_sets = clojure.set.bubble_max_key.call(null, cljs.core.count, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, cljs.core.into, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets));
    };
    var G__20825 = function(s1, s2, var_args) {
      var sets = null;
      if (arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__20825__delegate.call(this, s1, s2, sets);
    };
    G__20825.cljs$lang$maxFixedArity = 2;
    G__20825.cljs$lang$applyTo = function(arglist__20826) {
      var s1 = cljs.core.first(arglist__20826);
      arglist__20826 = cljs.core.next(arglist__20826);
      var s2 = cljs.core.first(arglist__20826);
      var sets = cljs.core.rest(arglist__20826);
      return G__20825__delegate(s1, s2, sets);
    };
    G__20825.cljs$core$IFn$_invoke$arity$variadic = G__20825__delegate;
    return G__20825;
  }();
  union = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 0:
        return union__0.call(this);
      case 1:
        return union__1.call(this, s1);
      case 2:
        return union__2.call(this, s1, s2);
      default:
        return union__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  union.cljs$lang$maxFixedArity = 2;
  union.cljs$lang$applyTo = union__3.cljs$lang$applyTo;
  union.cljs$core$IFn$_invoke$arity$0 = union__0;
  union.cljs$core$IFn$_invoke$arity$1 = union__1;
  union.cljs$core$IFn$_invoke$arity$2 = union__2;
  union.cljs$core$IFn$_invoke$arity$variadic = union__3.cljs$core$IFn$_invoke$arity$variadic;
  return union;
}();
clojure.set.intersection = function() {
  var intersection = null;
  var intersection__1 = function(s1) {
    return s1;
  };
  var intersection__2 = function(s1, s2) {
    while (true) {
      if (cljs.core.count.call(null, s2) < cljs.core.count.call(null, s1)) {
        var G__20828 = s2;
        var G__20829 = s1;
        s1 = G__20828;
        s2 = G__20829;
        continue;
      } else {
        return cljs.core.reduce.call(null, function(s1, s2) {
          return function(result, item) {
            if (cljs.core.contains_QMARK_.call(null, s2, item)) {
              return result;
            } else {
              return cljs.core.disj.call(null, result, item);
            }
          };
        }(s1, s2), s1, s1);
      }
      break;
    }
  };
  var intersection__3 = function() {
    var G__20830__delegate = function(s1, s2, sets) {
      var bubbled_sets = clojure.set.bubble_max_key.call(null, function(p1__20827_SHARP_) {
        return-cljs.core.count.call(null, p1__20827_SHARP_);
      }, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, intersection, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets));
    };
    var G__20830 = function(s1, s2, var_args) {
      var sets = null;
      if (arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__20830__delegate.call(this, s1, s2, sets);
    };
    G__20830.cljs$lang$maxFixedArity = 2;
    G__20830.cljs$lang$applyTo = function(arglist__20831) {
      var s1 = cljs.core.first(arglist__20831);
      arglist__20831 = cljs.core.next(arglist__20831);
      var s2 = cljs.core.first(arglist__20831);
      var sets = cljs.core.rest(arglist__20831);
      return G__20830__delegate(s1, s2, sets);
    };
    G__20830.cljs$core$IFn$_invoke$arity$variadic = G__20830__delegate;
    return G__20830;
  }();
  intersection = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return intersection__1.call(this, s1);
      case 2:
        return intersection__2.call(this, s1, s2);
      default:
        return intersection__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  intersection.cljs$lang$maxFixedArity = 2;
  intersection.cljs$lang$applyTo = intersection__3.cljs$lang$applyTo;
  intersection.cljs$core$IFn$_invoke$arity$1 = intersection__1;
  intersection.cljs$core$IFn$_invoke$arity$2 = intersection__2;
  intersection.cljs$core$IFn$_invoke$arity$variadic = intersection__3.cljs$core$IFn$_invoke$arity$variadic;
  return intersection;
}();
clojure.set.difference = function() {
  var difference = null;
  var difference__1 = function(s1) {
    return s1;
  };
  var difference__2 = function(s1, s2) {
    if (cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, function(result, item) {
        if (cljs.core.contains_QMARK_.call(null, s2, item)) {
          return cljs.core.disj.call(null, result, item);
        } else {
          return result;
        }
      }, s1, s1);
    } else {
      return cljs.core.reduce.call(null, cljs.core.disj, s1, s2);
    }
  };
  var difference__3 = function() {
    var G__20832__delegate = function(s1, s2, sets) {
      return cljs.core.reduce.call(null, difference, s1, cljs.core.conj.call(null, sets, s2));
    };
    var G__20832 = function(s1, s2, var_args) {
      var sets = null;
      if (arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__20832__delegate.call(this, s1, s2, sets);
    };
    G__20832.cljs$lang$maxFixedArity = 2;
    G__20832.cljs$lang$applyTo = function(arglist__20833) {
      var s1 = cljs.core.first(arglist__20833);
      arglist__20833 = cljs.core.next(arglist__20833);
      var s2 = cljs.core.first(arglist__20833);
      var sets = cljs.core.rest(arglist__20833);
      return G__20832__delegate(s1, s2, sets);
    };
    G__20832.cljs$core$IFn$_invoke$arity$variadic = G__20832__delegate;
    return G__20832;
  }();
  difference = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return difference__1.call(this, s1);
      case 2:
        return difference__2.call(this, s1, s2);
      default:
        return difference__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  difference.cljs$lang$maxFixedArity = 2;
  difference.cljs$lang$applyTo = difference__3.cljs$lang$applyTo;
  difference.cljs$core$IFn$_invoke$arity$1 = difference__1;
  difference.cljs$core$IFn$_invoke$arity$2 = difference__2;
  difference.cljs$core$IFn$_invoke$arity$variadic = difference__3.cljs$core$IFn$_invoke$arity$variadic;
  return difference;
}();
clojure.set.select = function select(pred, xset) {
  return cljs.core.reduce.call(null, function(s, k) {
    if (cljs.core.truth_(pred.call(null, k))) {
      return s;
    } else {
      return cljs.core.disj.call(null, s, k);
    }
  }, xset, xset);
};
clojure.set.project = function project(xrel, ks) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__20834_SHARP_) {
    return cljs.core.select_keys.call(null, p1__20834_SHARP_, ks);
  }, xrel));
};
clojure.set.rename_keys = function rename_keys(map, kmap) {
  return cljs.core.reduce.call(null, function(m, p__20837) {
    var vec__20838 = p__20837;
    var old = cljs.core.nth.call(null, vec__20838, 0, null);
    var new$ = cljs.core.nth.call(null, vec__20838, 1, null);
    if (cljs.core.not_EQ_.call(null, old, new$) && cljs.core.contains_QMARK_.call(null, m, old)) {
      return cljs.core.dissoc.call(null, cljs.core.assoc.call(null, m, new$, cljs.core.get.call(null, m, old)), old);
    } else {
      return m;
    }
  }, map, kmap);
};
clojure.set.rename = function rename(xrel, kmap) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__20839_SHARP_) {
    return clojure.set.rename_keys.call(null, p1__20839_SHARP_, kmap);
  }, xrel));
};
clojure.set.index = function index(xrel, ks) {
  return cljs.core.reduce.call(null, function(m, x) {
    var ik = cljs.core.select_keys.call(null, x, ks);
    return cljs.core.assoc.call(null, m, ik, cljs.core.conj.call(null, cljs.core.get.call(null, m, ik, cljs.core.PersistentHashSet.EMPTY), x));
  }, cljs.core.PersistentArrayMap.EMPTY, xrel);
};
clojure.set.map_invert = function map_invert(m) {
  return cljs.core.reduce.call(null, function(m__$1, p__20842) {
    var vec__20843 = p__20842;
    var k = cljs.core.nth.call(null, vec__20843, 0, null);
    var v = cljs.core.nth.call(null, vec__20843, 1, null);
    return cljs.core.assoc.call(null, m__$1, v, k);
  }, cljs.core.PersistentArrayMap.EMPTY, m);
};
clojure.set.join = function() {
  var join = null;
  var join__2 = function(xrel, yrel) {
    if (cljs.core.seq.call(null, xrel) && cljs.core.seq.call(null, yrel)) {
      var ks = clojure.set.intersection.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, xrel))), cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, yrel))));
      var vec__20850 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel], null);
      var r = cljs.core.nth.call(null, vec__20850, 0, null);
      var s = cljs.core.nth.call(null, vec__20850, 1, null);
      var idx = clojure.set.index.call(null, r, ks);
      return cljs.core.reduce.call(null, function(ret, x) {
        var found = idx.call(null, cljs.core.select_keys.call(null, x, ks));
        if (cljs.core.truth_(found)) {
          return cljs.core.reduce.call(null, function(p1__20844_SHARP_, p2__20845_SHARP_) {
            return cljs.core.conj.call(null, p1__20844_SHARP_, cljs.core.merge.call(null, p2__20845_SHARP_, x));
          }, ret, found);
        } else {
          return ret;
        }
      }, cljs.core.PersistentHashSet.EMPTY, s);
    } else {
      return cljs.core.PersistentHashSet.EMPTY;
    }
  };
  var join__3 = function(xrel, yrel, km) {
    var vec__20851 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel, clojure.set.map_invert.call(null, km)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel, km], null);
    var r = cljs.core.nth.call(null, vec__20851, 0, null);
    var s = cljs.core.nth.call(null, vec__20851, 1, null);
    var k = cljs.core.nth.call(null, vec__20851, 2, null);
    var idx = clojure.set.index.call(null, r, cljs.core.vals.call(null, k));
    return cljs.core.reduce.call(null, function(ret, x) {
      var found = idx.call(null, clojure.set.rename_keys.call(null, cljs.core.select_keys.call(null, x, cljs.core.keys.call(null, k)), k));
      if (cljs.core.truth_(found)) {
        return cljs.core.reduce.call(null, function(p1__20846_SHARP_, p2__20847_SHARP_) {
          return cljs.core.conj.call(null, p1__20846_SHARP_, cljs.core.merge.call(null, p2__20847_SHARP_, x));
        }, ret, found);
      } else {
        return ret;
      }
    }, cljs.core.PersistentHashSet.EMPTY, s);
  };
  join = function(xrel, yrel, km) {
    switch(arguments.length) {
      case 2:
        return join__2.call(this, xrel, yrel);
      case 3:
        return join__3.call(this, xrel, yrel, km);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  join.cljs$core$IFn$_invoke$arity$3 = join__3;
  return join;
}();
clojure.set.subset_QMARK_ = function subset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) <= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__20852_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set2, p1__20852_SHARP_);
  }, set1);
};
clojure.set.superset_QMARK_ = function superset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) >= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__20853_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set1, p1__20853_SHARP_);
  }, set2);
};
goog.provide("datascript");
goog.require("cljs.core");
goog.require("cljs.reader");
goog.require("cljs.reader");
goog.require("clojure.walk");
goog.require("clojure.walk");
goog.require("clojure.set");
goog.require("clojure.set");
datascript.Datom = function(e, a, v, tx, added, __meta, __extmap) {
  this.e = e;
  this.a = a;
  this.v = v;
  this.tx = tx;
  this.added = added;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 5) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
datascript.Datom.prototype.cljs$core$IHash$_hash$arity$1 = function(this__10910__auto__) {
  var self__ = this;
  var this__10910__auto____$1 = this;
  var h__10740__auto__ = self__.__hash;
  if (!(h__10740__auto__ == null)) {
    return h__10740__auto__;
  } else {
    var h__10740__auto____$1 = cljs.core.hash_imap.call(null, this__10910__auto____$1);
    self__.__hash = h__10740__auto____$1;
    return h__10740__auto____$1;
  }
};
datascript.Datom.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__10915__auto__, k__10916__auto__) {
  var self__ = this;
  var this__10915__auto____$1 = this;
  return cljs.core._lookup.call(null, this__10915__auto____$1, k__10916__auto__, null);
};
datascript.Datom.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__10917__auto__, k20603, else__10918__auto__) {
  var self__ = this;
  var this__10917__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k20603, new cljs.core.Keyword(null, "e", "e", 1013904343))) {
    return self__.e;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, k20603, new cljs.core.Keyword(null, "a", "a", 1013904339))) {
      return self__.a;
    } else {
      if (cljs.core.keyword_identical_QMARK_.call(null, k20603, new cljs.core.Keyword(null, "v", "v", 1013904360))) {
        return self__.v;
      } else {
        if (cljs.core.keyword_identical_QMARK_.call(null, k20603, new cljs.core.Keyword(null, "tx", "tx", 1013907958))) {
          return self__.tx;
        } else {
          if (cljs.core.keyword_identical_QMARK_.call(null, k20603, new cljs.core.Keyword(null, "added", "added", 1106564210))) {
            return self__.added;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.get.call(null, self__.__extmap, k20603, else__10918__auto__);
            } else {
              return null;
            }
          }
        }
      }
    }
  }
};
datascript.Datom.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__10922__auto__, k__10923__auto__, G__20602) {
  var self__ = this;
  var this__10922__auto____$1 = this;
  var pred__20605 = cljs.core.keyword_identical_QMARK_;
  var expr__20606 = k__10923__auto__;
  if (cljs.core.truth_(pred__20605.call(null, new cljs.core.Keyword(null, "e", "e", 1013904343), expr__20606))) {
    return new datascript.Datom(G__20602, self__.a, self__.v, self__.tx, self__.added, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__20605.call(null, new cljs.core.Keyword(null, "a", "a", 1013904339), expr__20606))) {
      return new datascript.Datom(self__.e, G__20602, self__.v, self__.tx, self__.added, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__20605.call(null, new cljs.core.Keyword(null, "v", "v", 1013904360), expr__20606))) {
        return new datascript.Datom(self__.e, self__.a, G__20602, self__.tx, self__.added, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__20605.call(null, new cljs.core.Keyword(null, "tx", "tx", 1013907958), expr__20606))) {
          return new datascript.Datom(self__.e, self__.a, self__.v, G__20602, self__.added, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__20605.call(null, new cljs.core.Keyword(null, "added", "added", 1106564210), expr__20606))) {
            return new datascript.Datom(self__.e, self__.a, self__.v, self__.tx, G__20602, self__.__meta, self__.__extmap, null);
          } else {
            return new datascript.Datom(self__.e, self__.a, self__.v, self__.tx, self__.added, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__10923__auto__, G__20602), null);
          }
        }
      }
    }
  }
};
datascript.Datom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__10929__auto__, writer__10930__auto__, opts__10931__auto__) {
  var self__ = this;
  var this__10929__auto____$1 = this;
  var pr_pair__10932__auto__ = function(keyval__10933__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__10930__auto__, cljs.core.pr_writer, "", " ", "", opts__10931__auto__, keyval__10933__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__10930__auto__, pr_pair__10932__auto__, "#datascript.Datom{", ", ", "}", opts__10931__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "e", "e", 1013904343), self__.e], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "a", "a", 1013904339), self__.a], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "v", "v", 1013904360), self__.v], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tx", "tx", 1013907958), self__.tx], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "added", "added", 1106564210), self__.added], 
  null)], null), self__.__extmap));
};
datascript.Datom.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__10920__auto__, entry__10921__auto__) {
  var self__ = this;
  var this__10920__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__10921__auto__)) {
    return cljs.core._assoc.call(null, this__10920__auto____$1, cljs.core._nth.call(null, entry__10921__auto__, 0), cljs.core._nth.call(null, entry__10921__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__10920__auto____$1, entry__10921__auto__);
  }
};
datascript.Datom.prototype.toString = function() {
  var self__ = this;
  var this$ = this;
  return cljs.core.pr_str.call(null, this$);
};
datascript.Datom.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__10927__auto__) {
  var self__ = this;
  var this__10927__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "e", "e", 1013904343), self__.e], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", 1013904339), self__.a], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "v", "v", 1013904360), self__.v], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tx", "tx", 1013907958), self__.tx], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "added", "added", 1106564210), self__.added], null)], null), self__.__extmap));
};
datascript.Datom.prototype.cljs$core$ICounted$_count$arity$1 = function(this__10919__auto__) {
  var self__ = this;
  var this__10919__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
datascript.Datom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__10911__auto__, other__10912__auto__) {
  var self__ = this;
  var this__10911__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__10317__auto__ = other__10912__auto__;
    if (cljs.core.truth_(and__10317__auto__)) {
      return this__10911__auto____$1.constructor === other__10912__auto__.constructor && cljs.core.equiv_map.call(null, this__10911__auto____$1, other__10912__auto__);
    } else {
      return and__10317__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
datascript.Datom.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__10914__auto__, G__20602) {
  var self__ = this;
  var this__10914__auto____$1 = this;
  return new datascript.Datom(self__.e, self__.a, self__.v, self__.tx, self__.added, G__20602, self__.__extmap, self__.__hash);
};
datascript.Datom.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__10909__auto__) {
  var self__ = this;
  var this__10909__auto____$1 = this;
  return new datascript.Datom(self__.e, self__.a, self__.v, self__.tx, self__.added, self__.__meta, self__.__extmap, self__.__hash);
};
datascript.Datom.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__10913__auto__) {
  var self__ = this;
  var this__10913__auto____$1 = this;
  return self__.__meta;
};
datascript.Datom.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__10924__auto__, k__10925__auto__) {
  var self__ = this;
  var this__10924__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "a", "a", 1013904339), null, new cljs.core.Keyword(null, "e", "e", 1013904343), null, new cljs.core.Keyword(null, "added", "added", 1106564210), null, new cljs.core.Keyword(null, "tx", "tx", 1013907958), null, new cljs.core.Keyword(null, "v", "v", 1013904360), null], null), null), k__10925__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__10924__auto____$1), self__.__meta), k__10925__auto__);
  } else {
    return new datascript.Datom(self__.e, self__.a, self__.v, self__.tx, self__.added, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__10925__auto__)), null);
  }
};
datascript.Datom.cljs$lang$type = true;
datascript.Datom.cljs$lang$ctorPrSeq = function(this__10949__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "datascript/Datom");
};
datascript.Datom.cljs$lang$ctorPrWriter = function(this__10949__auto__, writer__10950__auto__) {
  return cljs.core._write.call(null, writer__10950__auto__, "datascript/Datom");
};
datascript.__GT_Datom = function __GT_Datom(e, a, v, tx, added) {
  return new datascript.Datom(e, a, v, tx, added);
};
datascript.map__GT_Datom = function map__GT_Datom(G__20604) {
  return new datascript.Datom((new cljs.core.Keyword(null, "e", "e", 1013904343)).cljs$core$IFn$_invoke$arity$1(G__20604), (new cljs.core.Keyword(null, "a", "a", 1013904339)).cljs$core$IFn$_invoke$arity$1(G__20604), (new cljs.core.Keyword(null, "v", "v", 1013904360)).cljs$core$IFn$_invoke$arity$1(G__20604), (new cljs.core.Keyword(null, "tx", "tx", 1013907958)).cljs$core$IFn$_invoke$arity$1(G__20604), (new cljs.core.Keyword(null, "added", "added", 1106564210)).cljs$core$IFn$_invoke$arity$1(G__20604), 
  null, cljs.core.dissoc.call(null, G__20604, new cljs.core.Keyword(null, "e", "e", 1013904343), new cljs.core.Keyword(null, "a", "a", 1013904339), new cljs.core.Keyword(null, "v", "v", 1013904360), new cljs.core.Keyword(null, "tx", "tx", 1013907958), new cljs.core.Keyword(null, "added", "added", 1106564210)));
};
datascript.Datom.prototype.cljs$core$ISeqable$ = true;
datascript.Datom.prototype.cljs$core$ISeqable$_seq$arity$1 = function(d) {
  var d__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, d__$1.added), d__$1.tx), d__$1.v), d__$1.a), d__$1.e);
};
datascript.Datom.prototype.cljs$core$IEquiv$ = true;
datascript.Datom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(d, o) {
  var d__$1 = this;
  return cljs.core._EQ_.call(null, d__$1.e, o.e) && (cljs.core._EQ_.call(null, d__$1.a, o.a) && cljs.core._EQ_.call(null, d__$1.v, o.v));
};
datascript.Datom.prototype.cljs$core$IHash$ = true;
datascript.Datom.prototype.cljs$core$IHash$_hash$arity$1 = function(d) {
  var d__$1 = this;
  var or__10329__auto__ = d__$1.__hash;
  if (cljs.core.truth_(or__10329__auto__)) {
    return or__10329__auto__;
  } else {
    return d__$1.__hash = cljs.core.hash_coll.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [d__$1.e, d__$1.a, d__$1.v], null));
  }
};
datascript.ISearch = function() {
  var obj20609 = {};
  return obj20609;
}();
datascript._search = function _search(data, pattern) {
  if (function() {
    var and__10317__auto__ = data;
    if (and__10317__auto__) {
      return data.datascript$ISearch$_search$arity$2;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return data.datascript$ISearch$_search$arity$2(data, pattern);
  } else {
    var x__10956__auto__ = data == null ? null : data;
    return function() {
      var or__10329__auto__ = datascript._search[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = datascript._search["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISearch.-search", data);
        }
      }
    }().call(null, data, pattern);
  }
};
datascript.DB = function(schema, ea, av, max_eid, max_tx, __meta, __extmap) {
  this.schema = schema;
  this.ea = ea;
  this.av = av;
  this.max_eid = max_eid;
  this.max_tx = max_tx;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 5) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
datascript.DB.prototype.cljs$core$IHash$_hash$arity$1 = function(this__10910__auto__) {
  var self__ = this;
  var this__10910__auto____$1 = this;
  var h__10740__auto__ = self__.__hash;
  if (!(h__10740__auto__ == null)) {
    return h__10740__auto__;
  } else {
    var h__10740__auto____$1 = cljs.core.hash_imap.call(null, this__10910__auto____$1);
    self__.__hash = h__10740__auto____$1;
    return h__10740__auto____$1;
  }
};
datascript.DB.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__10915__auto__, k__10916__auto__) {
  var self__ = this;
  var this__10915__auto____$1 = this;
  return cljs.core._lookup.call(null, this__10915__auto____$1, k__10916__auto__, null);
};
datascript.DB.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__10917__auto__, k20614, else__10918__auto__) {
  var self__ = this;
  var this__10917__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k20614, new cljs.core.Keyword(null, "schema", "schema", 4400883987))) {
    return self__.schema;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, k20614, new cljs.core.Keyword(null, "ea", "ea", 1013907470))) {
      return self__.ea;
    } else {
      if (cljs.core.keyword_identical_QMARK_.call(null, k20614, new cljs.core.Keyword(null, "av", "av", 1013907367))) {
        return self__.av;
      } else {
        if (cljs.core.keyword_identical_QMARK_.call(null, k20614, new cljs.core.Keyword(null, "max-eid", "max-eid", 1856848841))) {
          return self__.max_eid;
        } else {
          if (cljs.core.keyword_identical_QMARK_.call(null, k20614, new cljs.core.Keyword(null, "max-tx", "max-tx", 4227685119))) {
            return self__.max_tx;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.get.call(null, self__.__extmap, k20614, else__10918__auto__);
            } else {
              return null;
            }
          }
        }
      }
    }
  }
};
datascript.DB.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__10922__auto__, k__10923__auto__, G__20613) {
  var self__ = this;
  var this__10922__auto____$1 = this;
  var pred__20616 = cljs.core.keyword_identical_QMARK_;
  var expr__20617 = k__10923__auto__;
  if (cljs.core.truth_(pred__20616.call(null, new cljs.core.Keyword(null, "schema", "schema", 4400883987), expr__20617))) {
    return new datascript.DB(G__20613, self__.ea, self__.av, self__.max_eid, self__.max_tx, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__20616.call(null, new cljs.core.Keyword(null, "ea", "ea", 1013907470), expr__20617))) {
      return new datascript.DB(self__.schema, G__20613, self__.av, self__.max_eid, self__.max_tx, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__20616.call(null, new cljs.core.Keyword(null, "av", "av", 1013907367), expr__20617))) {
        return new datascript.DB(self__.schema, self__.ea, G__20613, self__.max_eid, self__.max_tx, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__20616.call(null, new cljs.core.Keyword(null, "max-eid", "max-eid", 1856848841), expr__20617))) {
          return new datascript.DB(self__.schema, self__.ea, self__.av, G__20613, self__.max_tx, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__20616.call(null, new cljs.core.Keyword(null, "max-tx", "max-tx", 4227685119), expr__20617))) {
            return new datascript.DB(self__.schema, self__.ea, self__.av, self__.max_eid, G__20613, self__.__meta, self__.__extmap, null);
          } else {
            return new datascript.DB(self__.schema, self__.ea, self__.av, self__.max_eid, self__.max_tx, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__10923__auto__, G__20613), null);
          }
        }
      }
    }
  }
};
datascript.DB.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__10929__auto__, writer__10930__auto__, opts__10931__auto__) {
  var self__ = this;
  var this__10929__auto____$1 = this;
  var pr_pair__10932__auto__ = function(keyval__10933__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__10930__auto__, cljs.core.pr_writer, "", " ", "", opts__10931__auto__, keyval__10933__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__10930__auto__, pr_pair__10932__auto__, "#datascript.DB{", ", ", "}", opts__10931__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", 4400883987), self__.schema], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "ea", "ea", 1013907470), self__.ea], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "av", "av", 1013907367), self__.av], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "max-eid", "max-eid", 1856848841), self__.max_eid], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "max-tx", "max-tx", 4227685119), self__.max_tx], null)], null), self__.__extmap));
};
datascript.DB.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__10920__auto__, entry__10921__auto__) {
  var self__ = this;
  var this__10920__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__10921__auto__)) {
    return cljs.core._assoc.call(null, this__10920__auto____$1, cljs.core._nth.call(null, entry__10921__auto__, 0), cljs.core._nth.call(null, entry__10921__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__10920__auto____$1, entry__10921__auto__);
  }
};
datascript.DB.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__10927__auto__) {
  var self__ = this;
  var this__10927__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", 4400883987), self__.schema], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ea", "ea", 1013907470), self__.ea], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "av", "av", 1013907367), self__.av], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "max-eid", "max-eid", 1856848841), self__.max_eid], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "max-tx", "max-tx", 4227685119), self__.max_tx], null)], null), self__.__extmap));
};
datascript.DB.prototype.cljs$core$ICounted$_count$arity$1 = function(this__10919__auto__) {
  var self__ = this;
  var this__10919__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
datascript.DB.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__10911__auto__, other__10912__auto__) {
  var self__ = this;
  var this__10911__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__10317__auto__ = other__10912__auto__;
    if (cljs.core.truth_(and__10317__auto__)) {
      return this__10911__auto____$1.constructor === other__10912__auto__.constructor && cljs.core.equiv_map.call(null, this__10911__auto____$1, other__10912__auto__);
    } else {
      return and__10317__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
datascript.DB.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__10914__auto__, G__20613) {
  var self__ = this;
  var this__10914__auto____$1 = this;
  return new datascript.DB(self__.schema, self__.ea, self__.av, self__.max_eid, self__.max_tx, G__20613, self__.__extmap, self__.__hash);
};
datascript.DB.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__10909__auto__) {
  var self__ = this;
  var this__10909__auto____$1 = this;
  return new datascript.DB(self__.schema, self__.ea, self__.av, self__.max_eid, self__.max_tx, self__.__meta, self__.__extmap, self__.__hash);
};
datascript.DB.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__10913__auto__) {
  var self__ = this;
  var this__10913__auto____$1 = this;
  return self__.__meta;
};
datascript.DB.prototype.datascript$ISearch$ = true;
datascript.DB.prototype.datascript$ISearch$_search$arity$2 = function(db, p__20619) {
  var self__ = this;
  var vec__20620 = p__20619;
  var e = cljs.core.nth.call(null, vec__20620, 0, null);
  var a = cljs.core.nth.call(null, vec__20620, 1, null);
  var v = cljs.core.nth.call(null, vec__20620, 2, null);
  var tx = cljs.core.nth.call(null, vec__20620, 3, null);
  var added = cljs.core.nth.call(null, vec__20620, 4, null);
  var pattern = vec__20620;
  var db__$1 = this;
  var G__20621 = function() {
    var G__20622 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.truth_(e) ? new cljs.core.Keyword(null, "+", "+", 1013904285) : null, cljs.core.truth_(a) ? new cljs.core.Keyword(null, "+", "+", 1013904285) : null, cljs.core.truth_(v) ? new cljs.core.Keyword(null, "+", "+", 1013904285) : null], null);
    if (cljs.core._EQ_.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "+", "+", 1013904285), new cljs.core.Keyword(null, "+", "+", 1013904285), new cljs.core.Keyword(null, "+", "+", 1013904285)], null), G__20622)) {
      return cljs.core.filter.call(null, function(G__20622) {
        return function(p1__20610_SHARP_) {
          return cljs.core._EQ_.call(null, v, p1__20610_SHARP_.v);
        };
      }(G__20622), cljs.core.get_in.call(null, db__$1, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ea", "ea", 1013907470), e, a], null)));
    } else {
      if (cljs.core._EQ_.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.Keyword(null, "+", "+", 1013904285), new cljs.core.Keyword(null, "+", "+", 1013904285)], null), G__20622)) {
        return cljs.core.get_in.call(null, db__$1, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "av", "av", 1013907367), a, v], null));
      } else {
        if (cljs.core._EQ_.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "+", "+", 1013904285), new cljs.core.Keyword(null, "+", "+", 1013904285), null], null), G__20622)) {
          return cljs.core.get_in.call(null, db__$1, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ea", "ea", 1013907470), e, a], null));
        } else {
          if (cljs.core._EQ_.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.Keyword(null, "+", "+", 1013904285), null], null), G__20622)) {
            return cljs.core.apply.call(null, cljs.core.concat, cljs.core.vals.call(null, cljs.core.get_in.call(null, db__$1, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "av", "av", 1013907367), a], null))));
          } else {
            if (cljs.core._EQ_.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "+", "+", 1013904285), null, null], null), G__20622)) {
              return cljs.core.apply.call(null, cljs.core.concat, cljs.core.vals.call(null, cljs.core.get_in.call(null, db__$1, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ea", "ea", 1013907470), e], null))));
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.truth_(e) ? new cljs.core.Keyword(null, "+", "+", 1013904285) : null, cljs.core.truth_(a) ? new cljs.core.Keyword(null, "+", "+", 1013904285) : null, cljs.core.truth_(v) ? new cljs.core.Keyword(null, "+", "+", 1013904285) : null], null))].join(""));
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  }();
  var G__20621__$1 = cljs.core.truth_(tx) ? cljs.core.filter.call(null, function(G__20621) {
    return function(p1__20611_SHARP_) {
      return cljs.core._EQ_.call(null, tx, p1__20611_SHARP_.tx);
    };
  }(G__20621), G__20621) : G__20621;
  var G__20621__$2 = cljs.core.truth_(added) ? cljs.core.filter.call(null, function(G__20621, G__20621__$1) {
    return function(p1__20612_SHARP_) {
      return cljs.core._EQ_.call(null, added, p1__20612_SHARP_.added);
    };
  }(G__20621, G__20621__$1), G__20621__$1) : G__20621__$1;
  return G__20621__$2;
};
datascript.DB.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__10924__auto__, k__10925__auto__) {
  var self__ = this;
  var this__10924__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "max-tx", "max-tx", 4227685119), null, new cljs.core.Keyword(null, "av", "av", 1013907367), null, new cljs.core.Keyword(null, "max-eid", "max-eid", 1856848841), null, new cljs.core.Keyword(null, "ea", "ea", 1013907470), null, new cljs.core.Keyword(null, "schema", "schema", 4400883987), null], null), null), k__10925__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__10924__auto____$1), self__.__meta), k__10925__auto__);
  } else {
    return new datascript.DB(self__.schema, self__.ea, self__.av, self__.max_eid, self__.max_tx, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__10925__auto__)), null);
  }
};
datascript.DB.cljs$lang$type = true;
datascript.DB.cljs$lang$ctorPrSeq = function(this__10949__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "datascript/DB");
};
datascript.DB.cljs$lang$ctorPrWriter = function(this__10949__auto__, writer__10950__auto__) {
  return cljs.core._write.call(null, writer__10950__auto__, "datascript/DB");
};
datascript.__GT_DB = function __GT_DB(schema, ea, av, max_eid, max_tx) {
  return new datascript.DB(schema, ea, av, max_eid, max_tx);
};
datascript.map__GT_DB = function map__GT_DB(G__20615) {
  return new datascript.DB((new cljs.core.Keyword(null, "schema", "schema", 4400883987)).cljs$core$IFn$_invoke$arity$1(G__20615), (new cljs.core.Keyword(null, "ea", "ea", 1013907470)).cljs$core$IFn$_invoke$arity$1(G__20615), (new cljs.core.Keyword(null, "av", "av", 1013907367)).cljs$core$IFn$_invoke$arity$1(G__20615), (new cljs.core.Keyword(null, "max-eid", "max-eid", 1856848841)).cljs$core$IFn$_invoke$arity$1(G__20615), (new cljs.core.Keyword(null, "max-tx", "max-tx", 4227685119)).cljs$core$IFn$_invoke$arity$1(G__20615), 
  null, cljs.core.dissoc.call(null, G__20615, new cljs.core.Keyword(null, "schema", "schema", 4400883987), new cljs.core.Keyword(null, "ea", "ea", 1013907470), new cljs.core.Keyword(null, "av", "av", 1013907367), new cljs.core.Keyword(null, "max-eid", "max-eid", 1856848841), new cljs.core.Keyword(null, "max-tx", "max-tx", 4227685119)));
};
datascript.TxReport = function(db_before, db_after, tx_data, tempids, __meta, __extmap) {
  this.db_before = db_before;
  this.db_after = db_after;
  this.tx_data = tx_data;
  this.tempids = tempids;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 4) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
datascript.TxReport.prototype.cljs$core$IHash$_hash$arity$1 = function(this__10910__auto__) {
  var self__ = this;
  var this__10910__auto____$1 = this;
  var h__10740__auto__ = self__.__hash;
  if (!(h__10740__auto__ == null)) {
    return h__10740__auto__;
  } else {
    var h__10740__auto____$1 = cljs.core.hash_imap.call(null, this__10910__auto____$1);
    self__.__hash = h__10740__auto____$1;
    return h__10740__auto____$1;
  }
};
datascript.TxReport.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__10915__auto__, k__10916__auto__) {
  var self__ = this;
  var this__10915__auto____$1 = this;
  return cljs.core._lookup.call(null, this__10915__auto____$1, k__10916__auto__, null);
};
datascript.TxReport.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__10917__auto__, k20624, else__10918__auto__) {
  var self__ = this;
  var this__10917__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k20624, new cljs.core.Keyword(null, "db-before", "db-before", 3838846752))) {
    return self__.db_before;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, k20624, new cljs.core.Keyword(null, "db-after", "db-after", 1658340159))) {
      return self__.db_after;
    } else {
      if (cljs.core.keyword_identical_QMARK_.call(null, k20624, new cljs.core.Keyword(null, "tx-data", "tx-data", 4365248709))) {
        return self__.tx_data;
      } else {
        if (cljs.core.keyword_identical_QMARK_.call(null, k20624, new cljs.core.Keyword(null, "tempids", "tempids", 3880764886))) {
          return self__.tempids;
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return cljs.core.get.call(null, self__.__extmap, k20624, else__10918__auto__);
          } else {
            return null;
          }
        }
      }
    }
  }
};
datascript.TxReport.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__10922__auto__, k__10923__auto__, G__20623) {
  var self__ = this;
  var this__10922__auto____$1 = this;
  var pred__20626 = cljs.core.keyword_identical_QMARK_;
  var expr__20627 = k__10923__auto__;
  if (cljs.core.truth_(pred__20626.call(null, new cljs.core.Keyword(null, "db-before", "db-before", 3838846752), expr__20627))) {
    return new datascript.TxReport(G__20623, self__.db_after, self__.tx_data, self__.tempids, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__20626.call(null, new cljs.core.Keyword(null, "db-after", "db-after", 1658340159), expr__20627))) {
      return new datascript.TxReport(self__.db_before, G__20623, self__.tx_data, self__.tempids, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__20626.call(null, new cljs.core.Keyword(null, "tx-data", "tx-data", 4365248709), expr__20627))) {
        return new datascript.TxReport(self__.db_before, self__.db_after, G__20623, self__.tempids, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__20626.call(null, new cljs.core.Keyword(null, "tempids", "tempids", 3880764886), expr__20627))) {
          return new datascript.TxReport(self__.db_before, self__.db_after, self__.tx_data, G__20623, self__.__meta, self__.__extmap, null);
        } else {
          return new datascript.TxReport(self__.db_before, self__.db_after, self__.tx_data, self__.tempids, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__10923__auto__, G__20623), null);
        }
      }
    }
  }
};
datascript.TxReport.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__10929__auto__, writer__10930__auto__, opts__10931__auto__) {
  var self__ = this;
  var this__10929__auto____$1 = this;
  var pr_pair__10932__auto__ = function(keyval__10933__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__10930__auto__, cljs.core.pr_writer, "", " ", "", opts__10931__auto__, keyval__10933__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__10930__auto__, pr_pair__10932__auto__, "#datascript.TxReport{", ", ", "}", opts__10931__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "db-before", "db-before", 3838846752), self__.db_before], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "db-after", "db-after", 1658340159), self__.db_after], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tx-data", "tx-data", 4365248709), self__.tx_data], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tempids", "tempids", 3880764886), self__.tempids], null)], null), self__.__extmap));
};
datascript.TxReport.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__10920__auto__, entry__10921__auto__) {
  var self__ = this;
  var this__10920__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__10921__auto__)) {
    return cljs.core._assoc.call(null, this__10920__auto____$1, cljs.core._nth.call(null, entry__10921__auto__, 0), cljs.core._nth.call(null, entry__10921__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__10920__auto____$1, entry__10921__auto__);
  }
};
datascript.TxReport.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__10927__auto__) {
  var self__ = this;
  var this__10927__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "db-before", "db-before", 3838846752), self__.db_before], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "db-after", "db-after", 1658340159), self__.db_after], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tx-data", "tx-data", 4365248709), self__.tx_data], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tempids", "tempids", 3880764886), self__.tempids], null)], null), self__.__extmap));
};
datascript.TxReport.prototype.cljs$core$ICounted$_count$arity$1 = function(this__10919__auto__) {
  var self__ = this;
  var this__10919__auto____$1 = this;
  return 4 + cljs.core.count.call(null, self__.__extmap);
};
datascript.TxReport.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__10911__auto__, other__10912__auto__) {
  var self__ = this;
  var this__10911__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__10317__auto__ = other__10912__auto__;
    if (cljs.core.truth_(and__10317__auto__)) {
      return this__10911__auto____$1.constructor === other__10912__auto__.constructor && cljs.core.equiv_map.call(null, this__10911__auto____$1, other__10912__auto__);
    } else {
      return and__10317__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
datascript.TxReport.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__10914__auto__, G__20623) {
  var self__ = this;
  var this__10914__auto____$1 = this;
  return new datascript.TxReport(self__.db_before, self__.db_after, self__.tx_data, self__.tempids, G__20623, self__.__extmap, self__.__hash);
};
datascript.TxReport.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__10909__auto__) {
  var self__ = this;
  var this__10909__auto____$1 = this;
  return new datascript.TxReport(self__.db_before, self__.db_after, self__.tx_data, self__.tempids, self__.__meta, self__.__extmap, self__.__hash);
};
datascript.TxReport.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__10913__auto__) {
  var self__ = this;
  var this__10913__auto____$1 = this;
  return self__.__meta;
};
datascript.TxReport.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__10924__auto__, k__10925__auto__) {
  var self__ = this;
  var this__10924__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "db-before", "db-before", 3838846752), null, new cljs.core.Keyword(null, "tempids", "tempids", 3880764886), null, new cljs.core.Keyword(null, "tx-data", "tx-data", 4365248709), null, new cljs.core.Keyword(null, "db-after", "db-after", 1658340159), null], null), null), k__10925__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__10924__auto____$1), self__.__meta), k__10925__auto__);
  } else {
    return new datascript.TxReport(self__.db_before, self__.db_after, self__.tx_data, self__.tempids, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__10925__auto__)), null);
  }
};
datascript.TxReport.cljs$lang$type = true;
datascript.TxReport.cljs$lang$ctorPrSeq = function(this__10949__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "datascript/TxReport");
};
datascript.TxReport.cljs$lang$ctorPrWriter = function(this__10949__auto__, writer__10950__auto__) {
  return cljs.core._write.call(null, writer__10950__auto__, "datascript/TxReport");
};
datascript.__GT_TxReport = function __GT_TxReport(db_before, db_after, tx_data, tempids) {
  return new datascript.TxReport(db_before, db_after, tx_data, tempids);
};
datascript.map__GT_TxReport = function map__GT_TxReport(G__20625) {
  return new datascript.TxReport((new cljs.core.Keyword(null, "db-before", "db-before", 3838846752)).cljs$core$IFn$_invoke$arity$1(G__20625), (new cljs.core.Keyword(null, "db-after", "db-after", 1658340159)).cljs$core$IFn$_invoke$arity$1(G__20625), (new cljs.core.Keyword(null, "tx-data", "tx-data", 4365248709)).cljs$core$IFn$_invoke$arity$1(G__20625), (new cljs.core.Keyword(null, "tempids", "tempids", 3880764886)).cljs$core$IFn$_invoke$arity$1(G__20625), null, cljs.core.dissoc.call(null, G__20625, 
  new cljs.core.Keyword(null, "db-before", "db-before", 3838846752), new cljs.core.Keyword(null, "db-after", "db-after", 1658340159), new cljs.core.Keyword(null, "tx-data", "tx-data", 4365248709), new cljs.core.Keyword(null, "tempids", "tempids", 3880764886)));
};
datascript.multival_QMARK_ = function multival_QMARK_(db, attr) {
  return cljs.core._EQ_.call(null, cljs.core.get_in.call(null, db, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", 4400883987), attr, new cljs.core.Keyword("db", "cardinality", "db/cardinality", 1859321681)], null)), new cljs.core.Keyword("db.cardinality", "many", "db.cardinality/many", 2499141178));
};
datascript.match_tuple = function match_tuple(tuple, pattern) {
  return cljs.core.every_QMARK_.call(null, cljs.core.true_QMARK_, cljs.core.map.call(null, function(p1__20630_SHARP_, p2__20629_SHARP_) {
    return p2__20629_SHARP_ == null || cljs.core._EQ_.call(null, p1__20630_SHARP_, p2__20629_SHARP_);
  }, tuple, pattern));
};
datascript.search = function search(data, pattern) {
  if (function() {
    var G__20635 = data;
    if (G__20635) {
      var bit__10979__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__10329__auto__ = bit__10979__auto__;
        if (cljs.core.truth_(or__10329__auto__)) {
          return or__10329__auto__;
        } else {
          return G__20635.datascript$ISearch$;
        }
      }())) {
        return true;
      } else {
        if (!G__20635.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, datascript.ISearch, G__20635);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, datascript.ISearch, G__20635);
    }
  }()) {
    return datascript._search.call(null, data, pattern);
  } else {
    if (function() {
      var or__10329__auto__ = function() {
        var G__20637 = data;
        if (G__20637) {
          var bit__10979__auto__ = G__20637.cljs$lang$protocol_mask$partition0$ & 8388608;
          if (bit__10979__auto__ || G__20637.cljs$core$ISeqable$) {
            return true;
          } else {
            if (!G__20637.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__20637);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__20637);
        }
      }();
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        return data instanceof Array;
      }
    }()) {
      return cljs.core.filter.call(null, function(p1__20631_SHARP_) {
        return datascript.match_tuple.call(null, p1__20631_SHARP_, pattern);
      }, data);
    } else {
      return null;
    }
  }
};
datascript.transact_datom = function transact_datom(db, datom) {
  if (cljs.core.truth_(datom.added)) {
    return cljs.core.update_in.call(null, cljs.core.update_in.call(null, db, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ea", "ea", 1013907470), datom.e, datom.a], null), cljs.core.fnil.call(null, cljs.core.conj, cljs.core.PersistentHashSet.EMPTY), datom), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "av", "av", 1013907367), datom.a, datom.v], null), cljs.core.fnil.call(null, 
    cljs.core.conj, cljs.core.PersistentHashSet.EMPTY), datom);
  } else {
    return cljs.core.update_in.call(null, cljs.core.update_in.call(null, db, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ea", "ea", 1013907470), datom.e, datom.a], null), cljs.core.disj, datom), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "av", "av", 1013907367), datom.a, datom.v], null), cljs.core.disj, datom);
  }
};
datascript._resolve_eid = function _resolve_eid(eid, db) {
  return db.max_eid - eid;
};
datascript.resolve_eid = function resolve_eid(db, d) {
  if (d.e < 0) {
    return cljs.core.update_in.call(null, d, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "e", "e", 1013904343)], null), datascript._resolve_eid, db);
  } else {
    return d;
  }
};
datascript.entity__GT_ops = function entity__GT_ops(db, entity) {
  if (cljs.core.map_QMARK_.call(null, entity)) {
    var eid = (new cljs.core.Keyword("db", "id", "db/id", 1014111942)).cljs$core$IFn$_invoke$arity$1(entity);
    var iter__11046__auto__ = function iter__20648(s__20649) {
      return new cljs.core.LazySeq(null, function() {
        var s__20649__$1 = s__20649;
        while (true) {
          var temp__4092__auto__ = cljs.core.seq.call(null, s__20649__$1);
          if (temp__4092__auto__) {
            var xs__4579__auto__ = temp__4092__auto__;
            var vec__20655 = cljs.core.first.call(null, xs__4579__auto__);
            var a = cljs.core.nth.call(null, vec__20655, 0, null);
            var vs = cljs.core.nth.call(null, vec__20655, 1, null);
            var iterys__11042__auto__ = function(s__20649__$1, vec__20655, a, vs, xs__4579__auto__, temp__4092__auto__) {
              return function iter__20650(s__20651) {
                return new cljs.core.LazySeq(null, function(s__20649__$1, vec__20655, a, vs, xs__4579__auto__, temp__4092__auto__) {
                  return function() {
                    var s__20651__$1 = s__20651;
                    while (true) {
                      var temp__4092__auto____$1 = cljs.core.seq.call(null, s__20651__$1);
                      if (temp__4092__auto____$1) {
                        var s__20651__$2 = temp__4092__auto____$1;
                        if (cljs.core.chunked_seq_QMARK_.call(null, s__20651__$2)) {
                          var c__11044__auto__ = cljs.core.chunk_first.call(null, s__20651__$2);
                          var size__11045__auto__ = cljs.core.count.call(null, c__11044__auto__);
                          var b__20653 = cljs.core.chunk_buffer.call(null, size__11045__auto__);
                          if (function() {
                            var i__20652 = 0;
                            while (true) {
                              if (i__20652 < size__11045__auto__) {
                                var v = cljs.core._nth.call(null, c__11044__auto__, i__20652);
                                cljs.core.chunk_append.call(null, b__20653, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db", "add", "db/add", 1014207040), eid, a, v], null));
                                var G__20657 = i__20652 + 1;
                                i__20652 = G__20657;
                                continue;
                              } else {
                                return true;
                              }
                              break;
                            }
                          }()) {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20653), iter__20650.call(null, cljs.core.chunk_rest.call(null, s__20651__$2)));
                          } else {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20653), null);
                          }
                        } else {
                          var v = cljs.core.first.call(null, s__20651__$2);
                          return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db", "add", "db/add", 1014207040), eid, a, v], null), iter__20650.call(null, cljs.core.rest.call(null, s__20651__$2)));
                        }
                      } else {
                        return null;
                      }
                      break;
                    }
                  };
                }(s__20649__$1, vec__20655, a, vs, xs__4579__auto__, temp__4092__auto__), null, null);
              };
            }(s__20649__$1, vec__20655, a, vs, xs__4579__auto__, temp__4092__auto__);
            var fs__11043__auto__ = cljs.core.seq.call(null, iterys__11042__auto__.call(null, cljs.core.sequential_QMARK_.call(null, vs) && datascript.multival_QMARK_.call(null, db, a) ? vs : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [vs], null)));
            if (fs__11043__auto__) {
              return cljs.core.concat.call(null, fs__11043__auto__, iter__20648.call(null, cljs.core.rest.call(null, s__20649__$1)));
            } else {
              var G__20658 = cljs.core.rest.call(null, s__20649__$1);
              s__20649__$1 = G__20658;
              continue;
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__11046__auto__.call(null, cljs.core.dissoc.call(null, entity, new cljs.core.Keyword("db", "id", "db/id", 1014111942)));
  } else {
    if (cljs.core._EQ_.call(null, cljs.core.first.call(null, entity), new cljs.core.Keyword("db.fn", "call", "db.fn/call", 2901959894))) {
      var vec__20656 = entity;
      var _ = cljs.core.nth.call(null, vec__20656, 0, null);
      var f = cljs.core.nth.call(null, vec__20656, 1, null);
      var args = cljs.core.nthnext.call(null, vec__20656, 2);
      return cljs.core.mapcat.call(null, function(p1__20638_SHARP_) {
        return entity__GT_ops.call(null, db, p1__20638_SHARP_);
      }, cljs.core.apply.call(null, f, db, args));
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [entity], null);
      } else {
        return null;
      }
    }
  }
};
datascript.op__GT_tx_data = function op__GT_tx_data(db, p__20661) {
  var vec__20664 = p__20661;
  var op = cljs.core.nth.call(null, vec__20664, 0, null);
  var e = cljs.core.nth.call(null, vec__20664, 1, null);
  var a = cljs.core.nth.call(null, vec__20664, 2, null);
  var v = cljs.core.nth.call(null, vec__20664, 3, null);
  var tx = db.max_tx + 1;
  var G__20665 = op;
  if (cljs.core._EQ_.call(null, new cljs.core.Keyword("db.fn", "retractEntity", "db.fn/retractEntity", 4213852396), G__20665)) {
    var datoms = datascript._search.call(null, db, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [e], null));
    return cljs.core.map.call(null, function(p1__20660_SHARP_) {
      return cljs.core.assoc.call(null, p1__20660_SHARP_, new cljs.core.Keyword(null, "tx", "tx", 1013907958), tx, new cljs.core.Keyword(null, "added", "added", 1106564210), false);
    }, datoms);
  } else {
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword("db.fn", "retractAttribute", "db.fn/retractAttribute", 3416849171), G__20665)) {
      var datoms = datascript._search.call(null, db, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [e, a], null));
      return cljs.core.map.call(null, function(p1__20659_SHARP_) {
        return cljs.core.assoc.call(null, p1__20659_SHARP_, new cljs.core.Keyword(null, "tx", "tx", 1013907958), tx, new cljs.core.Keyword(null, "added", "added", 1106564210), false);
      }, datoms);
    } else {
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword("db", "retract", "db/retract", 2112480480), G__20665)) {
        var temp__4092__auto__ = cljs.core.first.call(null, datascript._search.call(null, db, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [e, a, v], null)));
        if (cljs.core.truth_(temp__4092__auto__)) {
          var old_datom = temp__4092__auto__;
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [datascript.__GT_Datom.call(null, e, a, v, tx, false)], null);
        } else {
          return null;
        }
      } else {
        if (cljs.core._EQ_.call(null, new cljs.core.Keyword("db", "add", "db/add", 1014207040), G__20665)) {
          if (cljs.core._EQ_.call(null, new cljs.core.Keyword("db.cardinality", "many", "db.cardinality/many", 2499141178), cljs.core.get_in.call(null, db, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", 4400883987), a, new cljs.core.Keyword("db", "cardinality", "db/cardinality", 1859321681)], null)))) {
            if (cljs.core.empty_QMARK_.call(null, datascript._search.call(null, db, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [e, a, v], null)))) {
              return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [datascript.__GT_Datom.call(null, e, a, v, tx, true)], null);
            } else {
              return null;
            }
          } else {
            var temp__4090__auto__ = cljs.core.first.call(null, datascript._search.call(null, db, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [e, a], null)));
            if (cljs.core.truth_(temp__4090__auto__)) {
              var old_datom = temp__4090__auto__;
              if (cljs.core.not_EQ_.call(null, old_datom.v, v)) {
                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [datascript.__GT_Datom.call(null, e, a, old_datom.v, tx, false), datascript.__GT_Datom.call(null, e, a, v, tx, true)], null);
              } else {
                return null;
              }
            } else {
              return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [datascript.__GT_Datom.call(null, e, a, v, tx, true)], null);
            }
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(op)].join(""));
          } else {
            return null;
          }
        }
      }
    }
  }
};
datascript.entity__GT_tx_data = function entity__GT_tx_data(db, entity) {
  return cljs.core.mapcat.call(null, function(p1__20666_SHARP_) {
    return datascript.op__GT_tx_data.call(null, db, p1__20666_SHARP_);
  }, datascript.entity__GT_ops.call(null, db, entity));
};
datascript._with = function _with(db, tx_data) {
  return cljs.core.assoc.call(null, cljs.core.update_in.call(null, cljs.core.reduce.call(null, datascript.transact_datom, db, tx_data), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "max-tx", "max-tx", 4227685119)], null), cljs.core.inc), new cljs.core.Keyword(null, "max-eid", "max-eid", 1856848841), cljs.core.reduce.call(null, cljs.core.max, db.max_eid, cljs.core.map.call(null, new cljs.core.Keyword(null, "e", "e", 1013904343), tx_data)));
};
datascript.parse_where = function parse_where(where) {
  var source = cljs.core.first.call(null, where);
  if (source instanceof cljs.core.Symbol && cljs.core._EQ_.call(null, "$", cljs.core.first.call(null, cljs.core.name.call(null, source)))) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, where), cljs.core.next.call(null, where)], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "$", "$", -1640531491, null), where], null);
  }
};
datascript.bind_symbol = function bind_symbol(sym, scope) {
  if (cljs.core._EQ_.call(null, new cljs.core.Symbol(null, "_", "_", -1640531432, null), sym)) {
    return null;
  } else {
    if (sym instanceof cljs.core.Symbol) {
      return cljs.core.get.call(null, scope, sym, null);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return sym;
      } else {
        return null;
      }
    }
  }
};
datascript.bind_symbols = function bind_symbols(form, scope) {
  return cljs.core.map.call(null, function(p1__20667_SHARP_) {
    return datascript.bind_symbol.call(null, p1__20667_SHARP_, scope);
  }, form);
};
datascript.search_datoms = function search_datoms(source, where, scope) {
  return datascript.search.call(null, datascript.bind_symbol.call(null, source, scope), datascript.bind_symbols.call(null, where, scope));
};
datascript.populate_scope = function populate_scope(scope, where, datom) {
  return cljs.core.into.call(null, scope, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map.call(null, function(p1__20668_SHARP_, p2__20669_SHARP_) {
    if (p1__20668_SHARP_ instanceof cljs.core.Symbol && !cljs.core.contains_QMARK_.call(null, scope, p1__20668_SHARP_)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__20668_SHARP_, p2__20669_SHARP_], null);
    } else {
      return null;
    }
  }, where, datom)));
};
datascript._differ_QMARK_ = function() {
  var _differ_QMARK___delegate = function(xs) {
    var l = cljs.core.count.call(null, xs);
    return cljs.core.not_EQ_.call(null, cljs.core.take.call(null, l / 2, xs), cljs.core.drop.call(null, l / 2, xs));
  };
  var _differ_QMARK_ = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return _differ_QMARK___delegate.call(this, xs);
  };
  _differ_QMARK_.cljs$lang$maxFixedArity = 0;
  _differ_QMARK_.cljs$lang$applyTo = function(arglist__20670) {
    var xs = cljs.core.seq(arglist__20670);
    return _differ_QMARK___delegate(xs);
  };
  _differ_QMARK_.cljs$core$IFn$_invoke$arity$variadic = _differ_QMARK___delegate;
  return _differ_QMARK_;
}();
datascript.built_ins = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Symbol(null, "false?", "false?", 1372554549, null), new cljs.core.Symbol(null, "true?", "true?", -1529891286, null), new cljs.core.Symbol(null, "rem", "rem", -1640418733, null), new cljs.core.Symbol(null, "odd?", "odd?", -1637125463, null), new cljs.core.Symbol(null, "+", "+", -1640531484, null), new cljs.core.Symbol(null, "zero?", "zero?", -1524740016, null), new cljs.core.Symbol(null, "*", "*", -1640531485, null), new cljs.core.Symbol(null, 
"-differ?", "-differ?", 1135976441, null), new cljs.core.Symbol(null, "-", "-", -1640531482, null), new cljs.core.Symbol(null, "neg?", "neg?", -1637154200, null), new cljs.core.Symbol(null, "/", "/", -1640531480, null), new cljs.core.Symbol(null, "inc", "inc", -1640427113, null), new cljs.core.Symbol(null, "quot", "quot", -1637049150, null), new cljs.core.Symbol(null, "!\x3d", "!\x3d", -1640530443, null), new cljs.core.Symbol(null, "\x3c", "\x3c", -1640531467, null), new cljs.core.Symbol(null, "\x3d", 
"\x3d", -1640531466, null), new cljs.core.Symbol(null, "max", "max", -1640423651, null), new cljs.core.Symbol(null, "\x3e", "\x3e", -1640531465, null), new cljs.core.Symbol(null, "even?", "even?", -1543640034, null), new cljs.core.Symbol(null, "\x3e\x3d", "\x3e\x3d", -1640529544, null), new cljs.core.Symbol(null, "pos?", "pos?", -1637084636, null), new cljs.core.Symbol(null, "\x3c\x3d", "\x3c\x3d", -1640529606, null), new cljs.core.Symbol(null, "dec", "dec", -1640432197, null), new cljs.core.Symbol(null, 
"mod", "mod", -1640423237, null), new cljs.core.Symbol(null, "min", "min", -1640423413, null), new cljs.core.Symbol(null, "not\x3d", "not\x3d", -1637144189, null), new cljs.core.Symbol(null, "\x3d\x3d", "\x3d\x3d", -1640529575, null), new cljs.core.Symbol(null, "nil?", "nil?", -1637150201, null)], [cljs.core.false_QMARK_, cljs.core.true_QMARK_, cljs.core.rem, cljs.core.odd_QMARK_, cljs.core._PLUS_, cljs.core.zero_QMARK_, cljs.core._STAR_, datascript._differ_QMARK_, cljs.core._, cljs.core.neg_QMARK_, 
cljs.core._SLASH_, cljs.core.inc, cljs.core.quot, cljs.core.not_EQ_, cljs.core._LT_, cljs.core._EQ_, cljs.core.max, cljs.core._GT_, cljs.core.even_QMARK_, cljs.core._GT__EQ_, cljs.core.pos_QMARK_, cljs.core._LT__EQ_, cljs.core.dec, cljs.core.mod, cljs.core.min, cljs.core.not_EQ_, cljs.core._EQ__EQ_, cljs.core.nil_QMARK_]);
datascript.call = function call(p__20671, scope) {
  var vec__20673 = p__20671;
  var f = cljs.core.nth.call(null, vec__20673, 0, null);
  var args = cljs.core.nthnext.call(null, vec__20673, 1);
  var bound_args = datascript.bind_symbols.call(null, args, scope);
  var f__$1 = function() {
    var or__10329__auto__ = datascript.built_ins.call(null, f);
    if (cljs.core.truth_(or__10329__auto__)) {
      return or__10329__auto__;
    } else {
      return scope.call(null, f);
    }
  }();
  return cljs.core.apply.call(null, f__$1, bound_args);
};
datascript.looks_like_QMARK_ = function looks_like_QMARK_(pattern, form) {
  if (cljs.core._EQ_.call(null, new cljs.core.Symbol(null, "_", "_", -1640531432, null), pattern)) {
    return true;
  } else {
    if (cljs.core._EQ_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "*", "*", -1640531485, null)], null), pattern)) {
      return cljs.core.sequential_QMARK_.call(null, form);
    } else {
      if (cljs.core.sequential_QMARK_.call(null, pattern)) {
        return cljs.core.sequential_QMARK_.call(null, form) && (cljs.core._EQ_.call(null, cljs.core.count.call(null, form), cljs.core.count.call(null, pattern)) && cljs.core.every_QMARK_.call(null, function(p__20680) {
          var vec__20681 = p__20680;
          var pattern_el = cljs.core.nth.call(null, vec__20681, 0, null);
          var form_el = cljs.core.nth.call(null, vec__20681, 1, null);
          return looks_like_QMARK_.call(null, pattern_el, form_el);
        }, cljs.core.map.call(null, cljs.core.vector, pattern, form)));
      } else {
        if (pattern instanceof cljs.core.Symbol) {
          return cljs.core._EQ_.call(null, form, pattern);
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return pattern.call(null, form);
          } else {
            return null;
          }
        }
      }
    }
  }
};
datascript.collect = function collect(f, coll) {
  return cljs.core.reduce.call(null, function(p1__20682_SHARP_, p2__20683_SHARP_) {
    return clojure.set.union.call(null, p1__20682_SHARP_, f.call(null, p2__20683_SHARP_));
  }, cljs.core.PersistentHashSet.EMPTY, coll);
};
datascript.bind_rule_branch = function bind_rule_branch(branch, call_args, context) {
  var vec__20691 = branch;
  var vec__20692 = cljs.core.nth.call(null, vec__20691, 0, null);
  var rule = cljs.core.nth.call(null, vec__20692, 0, null);
  var local_args = cljs.core.nthnext.call(null, vec__20692, 1);
  var body = cljs.core.nthnext.call(null, vec__20691, 1);
  var replacements = cljs.core.zipmap.call(null, local_args, call_args);
  var seqid = (new cljs.core.Keyword(null, "__depth", "__depth", 2242649685)).cljs$core$IFn$_invoke$arity$2(context, 0);
  var bound_body = clojure.walk.postwalk.call(null, function(vec__20691, vec__20692, rule, local_args, body, replacements, seqid) {
    return function(p1__20684_SHARP_) {
      if (p1__20684_SHARP_ instanceof cljs.core.Symbol && cljs.core._EQ_.call(null, "?", cljs.core.first.call(null, cljs.core.name.call(null, p1__20684_SHARP_)))) {
        var or__10329__auto__ = replacements.call(null, p1__20684_SHARP_);
        if (cljs.core.truth_(or__10329__auto__)) {
          return or__10329__auto__;
        } else {
          return cljs.core.symbol.call(null, [cljs.core.str(cljs.core.name.call(null, p1__20684_SHARP_)), cljs.core.str("__auto__"), cljs.core.str(seqid)].join(""));
        }
      } else {
        return p1__20684_SHARP_;
      }
    };
  }(vec__20691, vec__20692, rule, local_args, body, replacements, seqid), body);
  return cljs.core.concat.call(null, function() {
    var iter__11046__auto__ = function iter__20693(s__20694) {
      return new cljs.core.LazySeq(null, function() {
        var s__20694__$1 = s__20694;
        while (true) {
          var temp__4092__auto__ = cljs.core.seq.call(null, s__20694__$1);
          if (temp__4092__auto__) {
            var s__20694__$2 = temp__4092__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__20694__$2)) {
              var c__11044__auto__ = cljs.core.chunk_first.call(null, s__20694__$2);
              var size__11045__auto__ = cljs.core.count.call(null, c__11044__auto__);
              var b__20696 = cljs.core.chunk_buffer.call(null, size__11045__auto__);
              if (function() {
                var i__20695 = 0;
                while (true) {
                  if (i__20695 < size__11045__auto__) {
                    var prev_call_args = cljs.core._nth.call(null, c__11044__auto__, i__20695);
                    cljs.core.chunk_append.call(null, b__20696, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "-differ?", "-differ?", 1135976441, null)], null), call_args, prev_call_args)], null));
                    var G__20697 = i__20695 + 1;
                    i__20695 = G__20697;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20696), iter__20693.call(null, cljs.core.chunk_rest.call(null, s__20694__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20696), null);
              }
            } else {
              var prev_call_args = cljs.core.first.call(null, s__20694__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "-differ?", "-differ?", 1135976441, null)], null), call_args, prev_call_args)], null), iter__20693.call(null, cljs.core.rest.call(null, s__20694__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__11046__auto__.call(null, cljs.core.get.call(null, context, rule));
  }(), bound_body);
};
datascript._q = function _q(in_PLUS_sources, wheres, scope) {
  while (true) {
    if (cljs.core.truth_(cljs.core.not_empty.call(null, in_PLUS_sources))) {
      var vec__20711 = cljs.core.first.call(null, in_PLUS_sources);
      var in$ = cljs.core.nth.call(null, vec__20711, 0, null);
      var source = cljs.core.nth.call(null, vec__20711, 1, null);
      var pred__20712 = datascript.looks_like_QMARK_;
      var expr__20713 = in$;
      if (cljs.core.truth_(pred__20712.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "_", "_", -1640531432, null), new cljs.core.Symbol(null, "...", "...", -1640485849, null)], null), expr__20713))) {
        return datascript.collect.call(null, function(in_PLUS_sources, wheres, scope) {
          return function(p1__20698_SHARP_) {
            return _q.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, in$), p1__20698_SHARP_], null)], null), cljs.core.next.call(null, in_PLUS_sources)), wheres, scope);
          };
        }(in_PLUS_sources, wheres, scope), source);
      } else {
        if (cljs.core.truth_(pred__20712.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "*", "*", -1640531485, null)], null)], null), expr__20713))) {
          return datascript.collect.call(null, function(in_PLUS_sources, wheres, scope) {
            return function(p1__20699_SHARP_) {
              return _q.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, in$), p1__20699_SHARP_], null)], null), cljs.core.next.call(null, in_PLUS_sources)), wheres, scope);
            };
          }(in_PLUS_sources, wheres, scope), source);
        } else {
          if (cljs.core.truth_(pred__20712.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "*", "*", -1640531485, null)], null), expr__20713))) {
            var G__20720 = cljs.core.concat.call(null, cljs.core.zipmap.call(null, in$, source), cljs.core.next.call(null, in_PLUS_sources));
            var G__20721 = wheres;
            var G__20722 = scope;
            in_PLUS_sources = G__20720;
            wheres = G__20721;
            scope = G__20722;
            continue;
          } else {
            if (cljs.core.truth_(pred__20712.call(null, new cljs.core.Symbol(null, "%", "%", -1640531490, null), expr__20713))) {
              var rules = typeof source === "string" ? cljs.reader.read_string.call(null, source) : source;
              var G__20723 = cljs.core.next.call(null, in_PLUS_sources);
              var G__20724 = wheres;
              var G__20725 = cljs.core.assoc.call(null, scope, new cljs.core.Keyword(null, "__rules", "__rules", 2256051337), cljs.core.group_by.call(null, cljs.core.ffirst, rules));
              in_PLUS_sources = G__20723;
              wheres = G__20724;
              scope = G__20725;
              continue;
            } else {
              if (cljs.core.truth_(pred__20712.call(null, new cljs.core.Symbol(null, "_", "_", -1640531432, null), expr__20713))) {
                var G__20726 = cljs.core.next.call(null, in_PLUS_sources);
                var G__20727 = wheres;
                var G__20728 = cljs.core.assoc.call(null, scope, in$, source);
                in_PLUS_sources = G__20726;
                wheres = G__20727;
                scope = G__20728;
                continue;
              } else {
                throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__20713)].join(""));
              }
            }
          }
        }
      }
    } else {
      if (cljs.core.truth_(cljs.core.not_empty.call(null, wheres))) {
        var where = cljs.core.first.call(null, wheres);
        var temp__4090__auto__ = cljs.core.get.call(null, (new cljs.core.Keyword(null, "__rules", "__rules", 2256051337)).cljs$core$IFn$_invoke$arity$1(scope), cljs.core.first.call(null, where));
        if (cljs.core.truth_(temp__4090__auto__)) {
          var rule_branches = temp__4090__auto__;
          var vec__20715 = where;
          var rule = cljs.core.nth.call(null, vec__20715, 0, null);
          var call_args = cljs.core.nthnext.call(null, vec__20715, 1);
          var next_scope = cljs.core.update_in.call(null, cljs.core.update_in.call(null, scope, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "__rules_ctx", "__rules_ctx", 2834098801), rule], null), cljs.core.conj, call_args), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "__rules_ctx", "__rules_ctx", 2834098801), new cljs.core.Keyword(null, "__depth", "__depth", 2242649685)], 
          null), cljs.core.inc);
          var next_wheres = cljs.core.next.call(null, wheres);
          return datascript.collect.call(null, function(in_PLUS_sources, wheres, scope) {
            return function(p1__20700_SHARP_) {
              return _q.call(null, null, cljs.core.concat.call(null, datascript.bind_rule_branch.call(null, p1__20700_SHARP_, call_args, (new cljs.core.Keyword(null, "__rules_ctx", "__rules_ctx", 2834098801)).cljs$core$IFn$_invoke$arity$1(scope)), next_wheres), next_scope);
            };
          }(in_PLUS_sources, wheres, scope), rule_branches);
        } else {
          var pred__20716 = datascript.looks_like_QMARK_;
          var expr__20717 = where;
          if (cljs.core.truth_(pred__20716.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "*", "*", -1640531485, null)], null)], null), expr__20717))) {
            if (cljs.core.truth_(datascript.call.call(null, cljs.core.first.call(null, where), scope))) {
              var G__20729 = null;
              var G__20730 = cljs.core.next.call(null, wheres);
              var G__20731 = scope;
              in_PLUS_sources = G__20729;
              wheres = G__20730;
              scope = G__20731;
              continue;
            } else {
              return null;
            }
          } else {
            if (cljs.core.truth_(pred__20716.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "*", "*", -1640531485, null)], null), new cljs.core.Symbol(null, "_", "_", -1640531432, null)], null), expr__20717))) {
              var res = datascript.call.call(null, cljs.core.first.call(null, where), scope);
              var G__20732 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.second.call(null, where), res], null)], null);
              var G__20733 = cljs.core.next.call(null, wheres);
              var G__20734 = scope;
              in_PLUS_sources = G__20732;
              wheres = G__20733;
              scope = G__20734;
              continue;
            } else {
              if (cljs.core.truth_(pred__20716.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "*", "*", -1640531485, null)], null), expr__20717))) {
                var vec__20719 = datascript.parse_where.call(null, where);
                var source = cljs.core.nth.call(null, vec__20719, 0, null);
                var where__$1 = cljs.core.nth.call(null, vec__20719, 1, null);
                var found = datascript.search_datoms.call(null, source, where__$1, scope);
                return datascript.collect.call(null, function(in_PLUS_sources, wheres, scope) {
                  return function(p1__20701_SHARP_) {
                    return _q.call(null, null, cljs.core.next.call(null, wheres), datascript.populate_scope.call(null, scope, where__$1, p1__20701_SHARP_));
                  };
                }(in_PLUS_sources, wheres, scope), found);
              } else {
                throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__20717)].join(""));
              }
            }
          }
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return cljs.core.PersistentHashSet.fromArray([cljs.core.mapv.call(null, scope, (new cljs.core.Keyword(null, "__find", "__find", 3824551179)).cljs$core$IFn$_invoke$arity$1(scope))], true);
        } else {
          return null;
        }
      }
    }
    break;
  }
};
datascript.built_in_aggregates = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Symbol(null, "distinct", "distinct", -1351833419, null), cljs.core.comp.call(null, cljs.core.vec, cljs.core.distinct), new cljs.core.Symbol(null, "min", "min", -1640423413, null), function() {
  var G__20736 = null;
  var G__20736__1 = function(coll) {
    return cljs.core.reduce.call(null, cljs.core.min, coll);
  };
  var G__20736__2 = function(n, coll) {
    return cljs.core.vec.call(null, cljs.core.reduce.call(null, function(acc, x) {
      if (cljs.core.count.call(null, acc) < n) {
        return cljs.core.sort.call(null, cljs.core.conj.call(null, acc, x));
      } else {
        if (x < cljs.core.last.call(null, acc)) {
          return cljs.core.sort.call(null, cljs.core.conj.call(null, cljs.core.butlast.call(null, acc), x));
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return acc;
          } else {
            return null;
          }
        }
      }
    }, cljs.core.PersistentVector.EMPTY, coll));
  };
  G__20736 = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return G__20736__1.call(this, n);
      case 2:
        return G__20736__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__20736;
}(), new cljs.core.Symbol(null, "max", "max", -1640423651, null), function() {
  var G__20737 = null;
  var G__20737__1 = function(coll) {
    return cljs.core.reduce.call(null, cljs.core.max, coll);
  };
  var G__20737__2 = function(n, coll) {
    return cljs.core.vec.call(null, cljs.core.reduce.call(null, function(acc, x) {
      if (cljs.core.count.call(null, acc) < n) {
        return cljs.core.sort.call(null, cljs.core.conj.call(null, acc, x));
      } else {
        if (x > cljs.core.first.call(null, acc)) {
          return cljs.core.sort.call(null, cljs.core.conj.call(null, cljs.core.next.call(null, acc), x));
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return acc;
          } else {
            return null;
          }
        }
      }
    }, cljs.core.PersistentVector.EMPTY, coll));
  };
  G__20737 = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return G__20737__1.call(this, n);
      case 2:
        return G__20737__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__20737;
}(), new cljs.core.Symbol(null, "sum", "sum", -1640417276, null), function(p1__20735_SHARP_) {
  return cljs.core.reduce.call(null, cljs.core._PLUS_, 0, p1__20735_SHARP_);
}, new cljs.core.Symbol(null, "rand", "rand", -1637038626, null), function() {
  var G__20738 = null;
  var G__20738__1 = function(coll) {
    return cljs.core.rand_nth.call(null, coll);
  };
  var G__20738__2 = function(n, coll) {
    return cljs.core.vec.call(null, cljs.core.repeatedly.call(null, n, function() {
      return cljs.core.rand_nth.call(null, coll);
    }));
  };
  G__20738 = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return G__20738__1.call(this, n);
      case 2:
        return G__20738__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__20738;
}(), new cljs.core.Symbol(null, "sample", "sample", 1744760675, null), function(n, coll) {
  return cljs.core.vec.call(null, cljs.core.take.call(null, n, cljs.core.shuffle.call(null, coll)));
}, new cljs.core.Symbol(null, "count", "count", -1545680184, null), cljs.core.count], null);
datascript.aggr_group_key = function aggr_group_key(find, result) {
  return cljs.core.mapv.call(null, function(val, sym) {
    if (cljs.core.sequential_QMARK_.call(null, sym)) {
      return null;
    } else {
      return val;
    }
  }, result, find);
};
datascript._aggregate = function _aggregate(find, scope, results) {
  return cljs.core.mapv.call(null, function(sym, val, i) {
    if (cljs.core.sequential_QMARK_.call(null, sym)) {
      var vec__20741 = sym;
      var f = cljs.core.nth.call(null, vec__20741, 0, null);
      var args = cljs.core.nthnext.call(null, vec__20741, 1);
      var vals = cljs.core.map.call(null, function(vec__20741, f, args) {
        return function(p1__20739_SHARP_) {
          return cljs.core.get.call(null, p1__20739_SHARP_, i);
        };
      }(vec__20741, f, args), results);
      var args__$1 = cljs.core.concat.call(null, datascript.bind_symbols.call(null, cljs.core.butlast.call(null, args), scope), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [vals], null));
      var f__$1 = function() {
        var or__10329__auto__ = datascript.built_in_aggregates.call(null, f);
        if (cljs.core.truth_(or__10329__auto__)) {
          return or__10329__auto__;
        } else {
          return scope.call(null, f);
        }
      }();
      return cljs.core.apply.call(null, f__$1, args__$1);
    } else {
      return val;
    }
  }, find, cljs.core.first.call(null, results), cljs.core.range.call(null));
};
datascript.aggregate = function aggregate(query, scope, results) {
  var find = cljs.core.concat.call(null, (new cljs.core.Keyword(null, "find", "find", 1017047339)).cljs$core$IFn$_invoke$arity$1(query), (new cljs.core.Keyword(null, "with", "with", 1017553976)).cljs$core$IFn$_invoke$arity$1(query));
  return cljs.core.mapv.call(null, function(p__20745) {
    var vec__20746 = p__20745;
    var _ = cljs.core.nth.call(null, vec__20746, 0, null);
    var results__$1 = cljs.core.nth.call(null, vec__20746, 1, null);
    return datascript._aggregate.call(null, (new cljs.core.Keyword(null, "find", "find", 1017047339)).cljs$core$IFn$_invoke$arity$1(query), scope, results__$1);
  }, cljs.core.group_by.call(null, function(p1__20742_SHARP_) {
    return datascript.aggr_group_key.call(null, find, p1__20742_SHARP_);
  }, results));
};
datascript.parse_query = function parse_query(query) {
  var parsed = cljs.core.PersistentArrayMap.EMPTY;
  var key = null;
  var qs = query;
  while (true) {
    var temp__4090__auto__ = cljs.core.first.call(null, qs);
    if (cljs.core.truth_(temp__4090__auto__)) {
      var q = temp__4090__auto__;
      if (q instanceof cljs.core.Keyword) {
        var G__20747 = parsed;
        var G__20748 = q;
        var G__20749 = cljs.core.next.call(null, qs);
        parsed = G__20747;
        key = G__20748;
        qs = G__20749;
        continue;
      } else {
        var G__20750 = cljs.core.update_in.call(null, parsed, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [key], null), cljs.core.fnil.call(null, cljs.core.conj, cljs.core.PersistentVector.EMPTY), q);
        var G__20751 = key;
        var G__20752 = cljs.core.next.call(null, qs);
        parsed = G__20750;
        key = G__20751;
        qs = G__20752;
        continue;
      }
    } else {
      return parsed;
    }
    break;
  }
};
datascript.q = function() {
  var q__delegate = function(query, sources) {
    var query__$1 = cljs.core.sequential_QMARK_.call(null, query) ? datascript.parse_query.call(null, query) : query;
    var ins__GT_sources = cljs.core.zipmap.call(null, (new cljs.core.Keyword(null, "in", "in", 1013907607)).cljs$core$IFn$_invoke$arity$2(query__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "$", "$", -1640531491, null)], null)), sources);
    var find = cljs.core.concat.call(null, cljs.core.map.call(null, function(query__$1, ins__GT_sources) {
      return function(p1__20753_SHARP_) {
        if (cljs.core.sequential_QMARK_.call(null, p1__20753_SHARP_)) {
          return cljs.core.last.call(null, p1__20753_SHARP_);
        } else {
          return p1__20753_SHARP_;
        }
      };
    }(query__$1, ins__GT_sources), (new cljs.core.Keyword(null, "find", "find", 1017047339)).cljs$core$IFn$_invoke$arity$1(query__$1)), (new cljs.core.Keyword(null, "with", "with", 1017553976)).cljs$core$IFn$_invoke$arity$1(query__$1));
    var results = datascript._q.call(null, ins__GT_sources, (new cljs.core.Keyword(null, "where", "where", 1127002201)).cljs$core$IFn$_invoke$arity$1(query__$1), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "__find", "__find", 3824551179), find], null));
    var G__20756 = results;
    var G__20756__$1 = cljs.core.truth_((new cljs.core.Keyword(null, "with", "with", 1017553976)).cljs$core$IFn$_invoke$arity$1(query__$1)) ? cljs.core.mapv.call(null, function(G__20756) {
      return function(p1__20754_SHARP_) {
        return cljs.core.subvec.call(null, p1__20754_SHARP_, 0, cljs.core.count.call(null, (new cljs.core.Keyword(null, "find", "find", 1017047339)).cljs$core$IFn$_invoke$arity$1(query__$1)));
      };
    }(G__20756), G__20756) : G__20756;
    var G__20756__$2 = cljs.core.truth_(cljs.core.not_empty.call(null, cljs.core.filter.call(null, cljs.core.sequential_QMARK_, (new cljs.core.Keyword(null, "find", "find", 1017047339)).cljs$core$IFn$_invoke$arity$1(query__$1)))) ? datascript.aggregate.call(null, query__$1, ins__GT_sources, G__20756__$1) : G__20756__$1;
    return G__20756__$2;
  };
  var q = function(query, var_args) {
    var sources = null;
    if (arguments.length > 1) {
      sources = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return q__delegate.call(this, query, sources);
  };
  q.cljs$lang$maxFixedArity = 1;
  q.cljs$lang$applyTo = function(arglist__20757) {
    var query = cljs.core.first(arglist__20757);
    var sources = cljs.core.rest(arglist__20757);
    return q__delegate(query, sources);
  };
  q.cljs$core$IFn$_invoke$arity$variadic = q__delegate;
  return q;
}();
datascript.entity = function entity(db, eid) {
  var temp__4092__auto__ = cljs.core.not_empty.call(null, cljs.core.get_in.call(null, db, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ea", "ea", 1013907470), eid], null)));
  if (cljs.core.truth_(temp__4092__auto__)) {
    var attrs = temp__4092__auto__;
    return cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("db", "id", "db/id", 1014111942), eid], null), function() {
      var iter__11046__auto__ = function iter__20766(s__20767) {
        return new cljs.core.LazySeq(null, function() {
          var s__20767__$1 = s__20767;
          while (true) {
            var temp__4092__auto____$1 = cljs.core.seq.call(null, s__20767__$1);
            if (temp__4092__auto____$1) {
              var s__20767__$2 = temp__4092__auto____$1;
              if (cljs.core.chunked_seq_QMARK_.call(null, s__20767__$2)) {
                var c__11044__auto__ = cljs.core.chunk_first.call(null, s__20767__$2);
                var size__11045__auto__ = cljs.core.count.call(null, c__11044__auto__);
                var b__20769 = cljs.core.chunk_buffer.call(null, size__11045__auto__);
                if (function() {
                  var i__20768 = 0;
                  while (true) {
                    if (i__20768 < size__11045__auto__) {
                      var vec__20772 = cljs.core._nth.call(null, c__11044__auto__, i__20768);
                      var attr = cljs.core.nth.call(null, vec__20772, 0, null);
                      var datoms = cljs.core.nth.call(null, vec__20772, 1, null);
                      cljs.core.chunk_append.call(null, b__20769, datascript.multival_QMARK_.call(null, db, attr) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [attr, cljs.core.map.call(null, new cljs.core.Keyword(null, "v", "v", 1013904360), datoms)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [attr, cljs.core.first.call(null, datoms).v], null));
                      var G__20774 = i__20768 + 1;
                      i__20768 = G__20774;
                      continue;
                    } else {
                      return true;
                    }
                    break;
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20769), iter__20766.call(null, cljs.core.chunk_rest.call(null, s__20767__$2)));
                } else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20769), null);
                }
              } else {
                var vec__20773 = cljs.core.first.call(null, s__20767__$2);
                var attr = cljs.core.nth.call(null, vec__20773, 0, null);
                var datoms = cljs.core.nth.call(null, vec__20773, 1, null);
                return cljs.core.cons.call(null, datascript.multival_QMARK_.call(null, db, attr) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [attr, cljs.core.map.call(null, new cljs.core.Keyword(null, "v", "v", 1013904360), datoms)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [attr, cljs.core.first.call(null, datoms).v], null), iter__20766.call(null, cljs.core.rest.call(null, s__20767__$2)));
              }
            } else {
              return null;
            }
            break;
          }
        }, null, null);
      };
      return iter__11046__auto__.call(null, attrs);
    }());
  } else {
    return null;
  }
};
datascript.tx0 = 536870912;
datascript.empty_db = function() {
  var empty_db__delegate = function(p__20775) {
    var vec__20777 = p__20775;
    var schema = cljs.core.nth.call(null, vec__20777, 0, null);
    return new datascript.DB(schema, cljs.core.PersistentArrayMap.EMPTY, cljs.core.PersistentArrayMap.EMPTY, 0, datascript.tx0);
  };
  var empty_db = function(var_args) {
    var p__20775 = null;
    if (arguments.length > 0) {
      p__20775 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return empty_db__delegate.call(this, p__20775);
  };
  empty_db.cljs$lang$maxFixedArity = 0;
  empty_db.cljs$lang$applyTo = function(arglist__20778) {
    var p__20775 = cljs.core.seq(arglist__20778);
    return empty_db__delegate(p__20775);
  };
  empty_db.cljs$core$IFn$_invoke$arity$variadic = empty_db__delegate;
  return empty_db;
}();
datascript.create_conn = function() {
  var create_conn__delegate = function(p__20779) {
    var vec__20781 = p__20779;
    var schema = cljs.core.nth.call(null, vec__20781, 0, null);
    return cljs.core.atom.call(null, datascript.empty_db.call(null, schema), new cljs.core.Keyword(null, "meta", "meta", 1017252215), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "listeners", "listeners", 4090152369), cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY)], null));
  };
  var create_conn = function(var_args) {
    var p__20779 = null;
    if (arguments.length > 0) {
      p__20779 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return create_conn__delegate.call(this, p__20779);
  };
  create_conn.cljs$lang$maxFixedArity = 0;
  create_conn.cljs$lang$applyTo = function(arglist__20782) {
    var p__20779 = cljs.core.seq(arglist__20782);
    return create_conn__delegate(p__20779);
  };
  create_conn.cljs$core$IFn$_invoke$arity$variadic = create_conn__delegate;
  return create_conn;
}();
datascript.transact = function transact(db, entities) {
  var raw_datoms = cljs.core.mapcat.call(null, function(p1__20783_SHARP_) {
    return datascript.entity__GT_tx_data.call(null, db, p1__20783_SHARP_);
  }, entities);
  var datoms = cljs.core.map.call(null, function(raw_datoms) {
    return function(p1__20784_SHARP_) {
      return datascript.resolve_eid.call(null, db, p1__20784_SHARP_);
    };
  }(raw_datoms), raw_datoms);
  var tempids = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(raw_datoms, datoms) {
    return function(p1__20786_SHARP_) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__20786_SHARP_.e, datascript._resolve_eid.call(null, p1__20786_SHARP_.e, db)], null);
    };
  }(raw_datoms, datoms), cljs.core.filter.call(null, function(raw_datoms, datoms) {
    return function(p1__20785_SHARP_) {
      return p1__20785_SHARP_.e < 0;
    };
  }(raw_datoms, datoms), raw_datoms)));
  return new datascript.TxReport(db, datascript._with.call(null, db, datoms), datoms, tempids);
};
datascript.with$ = function with$(db, entities) {
  return(new cljs.core.Keyword(null, "db-after", "db-after", 1658340159)).cljs$core$IFn$_invoke$arity$1(datascript.transact.call(null, db, entities));
};
datascript._transact_BANG_ = function _transact_BANG_(conn, entities) {
  var report = cljs.core.atom.call(null, null);
  cljs.core.swap_BANG_.call(null, conn, function(db) {
    var r = datascript.transact.call(null, db, entities);
    cljs.core.reset_BANG_.call(null, report, r);
    return(new cljs.core.Keyword(null, "db-after", "db-after", 1658340159)).cljs$core$IFn$_invoke$arity$1(r);
  });
  return cljs.core.deref.call(null, report);
};
datascript.transact_BANG_ = function transact_BANG_(conn, entities) {
  var report = datascript._transact_BANG_.call(null, conn, entities);
  var seq__20793_20799 = cljs.core.seq.call(null, cljs.core.deref.call(null, (new cljs.core.Keyword(null, "listeners", "listeners", 4090152369)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, conn))));
  var chunk__20794_20800 = null;
  var count__20795_20801 = 0;
  var i__20796_20802 = 0;
  while (true) {
    if (i__20796_20802 < count__20795_20801) {
      var vec__20797_20803 = cljs.core._nth.call(null, chunk__20794_20800, i__20796_20802);
      var __20804 = cljs.core.nth.call(null, vec__20797_20803, 0, null);
      var callback_20805 = cljs.core.nth.call(null, vec__20797_20803, 1, null);
      callback_20805.call(null, report);
      var G__20806 = seq__20793_20799;
      var G__20807 = chunk__20794_20800;
      var G__20808 = count__20795_20801;
      var G__20809 = i__20796_20802 + 1;
      seq__20793_20799 = G__20806;
      chunk__20794_20800 = G__20807;
      count__20795_20801 = G__20808;
      i__20796_20802 = G__20809;
      continue;
    } else {
      var temp__4092__auto___20810 = cljs.core.seq.call(null, seq__20793_20799);
      if (temp__4092__auto___20810) {
        var seq__20793_20811__$1 = temp__4092__auto___20810;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__20793_20811__$1)) {
          var c__11077__auto___20812 = cljs.core.chunk_first.call(null, seq__20793_20811__$1);
          var G__20813 = cljs.core.chunk_rest.call(null, seq__20793_20811__$1);
          var G__20814 = c__11077__auto___20812;
          var G__20815 = cljs.core.count.call(null, c__11077__auto___20812);
          var G__20816 = 0;
          seq__20793_20799 = G__20813;
          chunk__20794_20800 = G__20814;
          count__20795_20801 = G__20815;
          i__20796_20802 = G__20816;
          continue;
        } else {
          var vec__20798_20817 = cljs.core.first.call(null, seq__20793_20811__$1);
          var __20818 = cljs.core.nth.call(null, vec__20798_20817, 0, null);
          var callback_20819 = cljs.core.nth.call(null, vec__20798_20817, 1, null);
          callback_20819.call(null, report);
          var G__20820 = cljs.core.next.call(null, seq__20793_20811__$1);
          var G__20821 = null;
          var G__20822 = 0;
          var G__20823 = 0;
          seq__20793_20799 = G__20820;
          chunk__20794_20800 = G__20821;
          count__20795_20801 = G__20822;
          i__20796_20802 = G__20823;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return report;
};
datascript.listen_BANG_ = function() {
  var listen_BANG_ = null;
  var listen_BANG___2 = function(conn, callback) {
    return listen_BANG_.call(null, conn, cljs.core.rand.call(null), callback);
  };
  var listen_BANG___3 = function(conn, key, callback) {
    cljs.core.swap_BANG_.call(null, (new cljs.core.Keyword(null, "listeners", "listeners", 4090152369)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, conn)), cljs.core.assoc, key, callback);
    return key;
  };
  listen_BANG_ = function(conn, key, callback) {
    switch(arguments.length) {
      case 2:
        return listen_BANG___2.call(this, conn, key);
      case 3:
        return listen_BANG___3.call(this, conn, key, callback);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  listen_BANG_.cljs$core$IFn$_invoke$arity$2 = listen_BANG___2;
  listen_BANG_.cljs$core$IFn$_invoke$arity$3 = listen_BANG___3;
  return listen_BANG_;
}();
datascript.unlisten_BANG_ = function unlisten_BANG_(conn, key) {
  return cljs.core.swap_BANG_.call(null, (new cljs.core.Keyword(null, "listeners", "listeners", 4090152369)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, conn)), cljs.core.dissoc, key);
};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("");
};
clojure.string.replace = function replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
      } else {
        return null;
      }
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll);
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll));
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$1 = join__1;
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  return join;
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("");
  }
};
clojure.string.pop_last_while_empty = function pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if (cljs.core._EQ_.call(null, "", cljs.core.peek.call(null, v__$1))) {
      var G__25693 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__25693;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function discard_trailing_if_needed(limit, v) {
  if (cljs.core._EQ_.call(null, 0, limit)) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__25697 = cljs.core._EQ_;
    var expr__25698 = limit;
    if (cljs.core.truth_(pred__25697.call(null, 1, expr__25698))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__25697.call(null, 2, expr__25698))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return split.call(null, s, re, 0);
  };
  var split__3 = function(s, re, limit) {
    return clojure.string.discard_trailing_if_needed.call(null, limit, cljs.core._EQ_.call(null, [cljs.core.str(re)].join(""), "/(?:)/") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re)) : function() {
      var s__$1 = s;
      var limit__$1 = limit;
      var parts = cljs.core.PersistentVector.EMPTY;
      while (true) {
        if (cljs.core._EQ_.call(null, limit__$1, 1)) {
          return cljs.core.conj.call(null, parts, s__$1);
        } else {
          var temp__4090__auto__ = cljs.core.re_find.call(null, re, s__$1);
          if (cljs.core.truth_(temp__4090__auto__)) {
            var m = temp__4090__auto__;
            var index = s__$1.indexOf(m);
            var G__25700 = s__$1.substring(index + cljs.core.count.call(null, m));
            var G__25701 = limit__$1 - 1;
            var G__25702 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
            s__$1 = G__25700;
            limit__$1 = G__25701;
            parts = G__25702;
            continue;
          } else {
            return cljs.core.conj.call(null, parts, s__$1);
          }
        }
        break;
      }
    }());
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$3 = split__3;
  return split;
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if (cljs.core._EQ_.call(null, ch, "\n") || cljs.core._EQ_.call(null, ch, "\r")) {
        var G__25703 = index - 1;
        index = G__25703;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function escape__$1(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (cljs.core._EQ_.call(null, length, index)) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var temp__4090__auto___25704 = cljs.core.get.call(null, cmap, ch);
      if (cljs.core.truth_(temp__4090__auto___25704)) {
        var replacement_25705 = temp__4090__auto___25704;
        buffer.append([cljs.core.str(replacement_25705)].join(""));
      } else {
        buffer.append(ch);
      }
      var G__25706 = index + 1;
      index = G__25706;
      continue;
    }
    break;
  }
};
goog.provide("cemerick.cljs.test");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("clojure.string");
cemerick.cljs.test._STAR_test_print_fn_STAR_ = null;
cemerick.cljs.test._STAR_entry_point_STAR_ = true;
cemerick.cljs.test._STAR_test_ctx_STAR_ = null;
cemerick.cljs.test.init_test_environment_STAR_ = function init_test_environment_STAR_(aux_data) {
  return cljs.core.atom.call(null, cljs.core.merge.call(null, cljs.core.assoc.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "test", "test", 1017460740), 0, new cljs.core.Keyword(null, "pass", "pass", 1017337731), 0, new cljs.core.Keyword(null, "fail", "fail", 1017039504), 0, new cljs.core.Keyword(null, "error", "error", 1110689146), 0], null), cljs.core.truth_(cemerick.cljs.test._STAR_test_print_fn_STAR_) ? new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword("cemerick.cljs.test", "test-print-fn", "cemerick.cljs.test/test-print-fn", 740963180), cemerick.cljs.test._STAR_test_print_fn_STAR_], null) : null), new cljs.core.Keyword("cemerick.cljs.test", "test-contexts", "cemerick.cljs.test/test-contexts", 1853176376), cljs.core.List.EMPTY), aux_data));
};
cemerick.cljs.test.init_test_environment = function init_test_environment() {
  var G__25708 = cemerick.cljs.test.init_test_environment_STAR_.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("cemerick.cljs.test", "test-functions", "cemerick.cljs.test/test-functions", 1471979159), cljs.core.List.EMPTY], null));
  cljs.core.swap_BANG_.call(null, G__25708, cljs.core.assoc, new cljs.core.Keyword(null, "async", "async", 1107031534), cemerick.cljs.test.init_test_environment_STAR_.call(null, cljs.core.PersistentArrayMap.EMPTY));
  return G__25708;
};
cemerick.cljs.test.registered_tests = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
cemerick.cljs.test.registered_test_hooks = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
cemerick.cljs.test.registered_fixtures = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
cemerick.cljs.test.register_test_BANG_ = function register_test_BANG_(ns, name, fn) {
  return cljs.core.swap_BANG_.call(null, cemerick.cljs.test.registered_tests, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns], null), cljs.core.assoc, name, fn);
};
cemerick.cljs.test.register_test_ns_hook_BANG_ = function register_test_ns_hook_BANG_(ns, name) {
  return cljs.core.swap_BANG_.call(null, cemerick.cljs.test.registered_test_hooks, cljs.core.assoc, ns, name);
};
cemerick.cljs.test.TestContext = function(test_env, test_name, __meta, __extmap) {
  this.test_env = test_env;
  this.test_name = test_name;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
cemerick.cljs.test.TestContext.prototype.cljs$core$IHash$_hash$arity$1 = function(this__10910__auto__) {
  var self__ = this;
  var this__10910__auto____$1 = this;
  var h__10740__auto__ = self__.__hash;
  if (!(h__10740__auto__ == null)) {
    return h__10740__auto__;
  } else {
    var h__10740__auto____$1 = cljs.core.hash_imap.call(null, this__10910__auto____$1);
    self__.__hash = h__10740__auto____$1;
    return h__10740__auto____$1;
  }
};
cemerick.cljs.test.TestContext.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__10915__auto__, k__10916__auto__) {
  var self__ = this;
  var this__10915__auto____$1 = this;
  return cljs.core._lookup.call(null, this__10915__auto____$1, k__10916__auto__, null);
};
cemerick.cljs.test.TestContext.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__10917__auto__, k25710, else__10918__auto__) {
  var self__ = this;
  var this__10917__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k25710, new cljs.core.Keyword(null, "test-env", "test-env", 4160920740))) {
    return self__.test_env;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, k25710, new cljs.core.Keyword(null, "test-name", "test-name", 4082390616))) {
      return self__.test_name;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.get.call(null, self__.__extmap, k25710, else__10918__auto__);
      } else {
        return null;
      }
    }
  }
};
cemerick.cljs.test.TestContext.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__10922__auto__, k__10923__auto__, G__25709) {
  var self__ = this;
  var this__10922__auto____$1 = this;
  var pred__25712 = cljs.core.keyword_identical_QMARK_;
  var expr__25713 = k__10923__auto__;
  if (cljs.core.truth_(pred__25712.call(null, new cljs.core.Keyword(null, "test-env", "test-env", 4160920740), expr__25713))) {
    return new cemerick.cljs.test.TestContext(G__25709, self__.test_name, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__25712.call(null, new cljs.core.Keyword(null, "test-name", "test-name", 4082390616), expr__25713))) {
      return new cemerick.cljs.test.TestContext(self__.test_env, G__25709, self__.__meta, self__.__extmap, null);
    } else {
      return new cemerick.cljs.test.TestContext(self__.test_env, self__.test_name, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__10923__auto__, G__25709), null);
    }
  }
};
cemerick.cljs.test.TestContext.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__10929__auto__, writer__10930__auto__, opts__10931__auto__) {
  var self__ = this;
  var this__10929__auto____$1 = this;
  var pr_pair__10932__auto__ = function(keyval__10933__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__10930__auto__, cljs.core.pr_writer, "", " ", "", opts__10931__auto__, keyval__10933__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__10930__auto__, pr_pair__10932__auto__, "#cemerick.cljs.test.TestContext{", ", ", "}", opts__10931__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "test-env", "test-env", 4160920740), self__.test_env], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "test-name", "test-name", 4082390616), self__.test_name], null)], null), self__.__extmap));
};
cemerick.cljs.test.TestContext.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__10920__auto__, entry__10921__auto__) {
  var self__ = this;
  var this__10920__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__10921__auto__)) {
    return cljs.core._assoc.call(null, this__10920__auto____$1, cljs.core._nth.call(null, entry__10921__auto__, 0), cljs.core._nth.call(null, entry__10921__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__10920__auto____$1, entry__10921__auto__);
  }
};
cemerick.cljs.test.TestContext.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__10927__auto__) {
  var self__ = this;
  var this__10927__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "test-env", "test-env", 4160920740), self__.test_env], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "test-name", "test-name", 4082390616), self__.test_name], null)], null), 
  self__.__extmap));
};
cemerick.cljs.test.TestContext.prototype.cljs$core$ICounted$_count$arity$1 = function(this__10919__auto__) {
  var self__ = this;
  var this__10919__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
cemerick.cljs.test.TestContext.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__10911__auto__, other__10912__auto__) {
  var self__ = this;
  var this__10911__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__10317__auto__ = other__10912__auto__;
    if (cljs.core.truth_(and__10317__auto__)) {
      return this__10911__auto____$1.constructor === other__10912__auto__.constructor && cljs.core.equiv_map.call(null, this__10911__auto____$1, other__10912__auto__);
    } else {
      return and__10317__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cemerick.cljs.test.TestContext.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__10914__auto__, G__25709) {
  var self__ = this;
  var this__10914__auto____$1 = this;
  return new cemerick.cljs.test.TestContext(self__.test_env, self__.test_name, G__25709, self__.__extmap, self__.__hash);
};
cemerick.cljs.test.TestContext.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__10909__auto__) {
  var self__ = this;
  var this__10909__auto____$1 = this;
  return new cemerick.cljs.test.TestContext(self__.test_env, self__.test_name, self__.__meta, self__.__extmap, self__.__hash);
};
cemerick.cljs.test.TestContext.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__10913__auto__) {
  var self__ = this;
  var this__10913__auto____$1 = this;
  return self__.__meta;
};
cemerick.cljs.test.TestContext.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__10924__auto__, k__10925__auto__) {
  var self__ = this;
  var this__10924__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "test-name", "test-name", 4082390616), null, new cljs.core.Keyword(null, "test-env", "test-env", 4160920740), null], null), null), k__10925__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__10924__auto____$1), self__.__meta), k__10925__auto__);
  } else {
    return new cemerick.cljs.test.TestContext(self__.test_env, self__.test_name, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__10925__auto__)), null);
  }
};
cemerick.cljs.test.TestContext.cljs$lang$type = true;
cemerick.cljs.test.TestContext.cljs$lang$ctorPrSeq = function(this__10949__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cemerick.cljs.test/TestContext");
};
cemerick.cljs.test.TestContext.cljs$lang$ctorPrWriter = function(this__10949__auto__, writer__10950__auto__) {
  return cljs.core._write.call(null, writer__10950__auto__, "cemerick.cljs.test/TestContext");
};
cemerick.cljs.test.__GT_TestContext = function __GT_TestContext(test_env, test_name) {
  return new cemerick.cljs.test.TestContext(test_env, test_name);
};
cemerick.cljs.test.map__GT_TestContext = function map__GT_TestContext(G__25711) {
  return new cemerick.cljs.test.TestContext((new cljs.core.Keyword(null, "test-env", "test-env", 4160920740)).cljs$core$IFn$_invoke$arity$1(G__25711), (new cljs.core.Keyword(null, "test-name", "test-name", 4082390616)).cljs$core$IFn$_invoke$arity$1(G__25711), null, cljs.core.dissoc.call(null, G__25711, new cljs.core.Keyword(null, "test-env", "test-env", 4160920740), new cljs.core.Keyword(null, "test-name", "test-name", 4082390616)));
};
cemerick.cljs.test.maybe_deref = function maybe_deref(x) {
  if (function() {
    var G__25716 = x;
    if (G__25716) {
      var bit__10979__auto__ = G__25716.cljs$lang$protocol_mask$partition0$ & 32768;
      if (bit__10979__auto__ || G__25716.cljs$core$IDeref$) {
        return true;
      } else {
        if (!G__25716.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, G__25716);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, G__25716);
    }
  }()) {
    return cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cemerick.cljs.test.testing_complete_QMARK_ = function testing_complete_QMARK_(test_env) {
  var map__25718 = cemerick.cljs.test.maybe_deref.call(null, test_env);
  var map__25718__$1 = cljs.core.seq_QMARK_.call(null, map__25718) ? cljs.core.apply.call(null, cljs.core.hash_map, map__25718) : map__25718;
  var remaining = cljs.core.get.call(null, map__25718__$1, new cljs.core.Keyword("cemerick.cljs.test", "remaining", "cemerick.cljs.test/remaining", 3842781245));
  var running = cljs.core.get.call(null, map__25718__$1, new cljs.core.Keyword("cemerick.cljs.test", "running", "cemerick.cljs.test/running", 1286908024));
  var async = cljs.core.get.call(null, map__25718__$1, new cljs.core.Keyword(null, "async", "async", 1107031534));
  var and__10317__auto__ = cljs.core.empty_QMARK_.call(null, remaining);
  if (and__10317__auto__) {
    var and__10317__auto____$1 = cljs.core.empty_QMARK_.call(null, running);
    if (and__10317__auto____$1) {
      var or__10329__auto__ = async == null;
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        return testing_complete_QMARK_.call(null, async);
      }
    } else {
      return and__10317__auto____$1;
    }
  } else {
    return and__10317__auto__;
  }
};
cemerick.cljs.test.on_async_progress = function on_async_progress(test_env, callback) {
  if (cljs.core.truth_(cemerick.cljs.test.testing_complete_QMARK_.call(null, test_env))) {
    setTimeout(function() {
      return callback.call(null, test_env);
    }, 1);
  } else {
    cljs.core.add_watch.call(null, (new cljs.core.Keyword(null, "async", "async", 1107031534)).cljs$core$IFn$_invoke$arity$1(cemerick.cljs.test.maybe_deref.call(null, test_env)), cljs.core.gensym.call(null, "on-progress"), function(key, ref, old, new$) {
      var vec__25721 = cljs.core.map.call(null, function(p1__25719_SHARP_) {
        return cljs.core.select_keys.call(null, p1__25719_SHARP_, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "test", "test", 1017460740), new cljs.core.Keyword(null, "pass", "pass", 1017337731), new cljs.core.Keyword(null, "fail", "fail", 1017039504), new cljs.core.Keyword(null, "error", "error", 1110689146)], null));
      }, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [old, new$], null));
      var oldv = cljs.core.nth.call(null, vec__25721, 0, null);
      var newv = cljs.core.nth.call(null, vec__25721, 1, null);
      var complete_QMARK_ = cemerick.cljs.test.testing_complete_QMARK_.call(null, new$);
      if (cljs.core.truth_(function() {
        var or__10329__auto__ = complete_QMARK_;
        if (cljs.core.truth_(or__10329__auto__)) {
          return or__10329__auto__;
        } else {
          return cljs.core.not_EQ_.call(null, oldv, newv);
        }
      }())) {
        callback.call(null, cemerick.cljs.test.maybe_deref.call(null, test_env));
      } else {
      }
      if (cljs.core.truth_(complete_QMARK_)) {
        return cljs.core.remove_watch.call(null, ref, key);
      } else {
        return null;
      }
    });
  }
  return test_env;
};
goog.exportSymbol("cemerick.cljs.test.on_async_progress", cemerick.cljs.test.on_async_progress);
cemerick.cljs.test.on_testing_complete = function on_testing_complete(test_env, callback) {
  return cemerick.cljs.test.on_async_progress.call(null, test_env, function(test_env__$1) {
    if (cljs.core.truth_(cemerick.cljs.test.testing_complete_QMARK_.call(null, test_env__$1))) {
      return callback.call(null, test_env__$1);
    } else {
      return null;
    }
  });
};
goog.exportSymbol("cemerick.cljs.test.on_testing_complete", cemerick.cljs.test.on_testing_complete);
cemerick.cljs.test.testing_vars_str = function testing_vars_str(p__25722) {
  var map__25724 = p__25722;
  var map__25724__$1 = cljs.core.seq_QMARK_.call(null, map__25724) ? cljs.core.apply.call(null, cljs.core.hash_map, map__25724) : map__25724;
  var m = map__25724__$1;
  var test_name = cljs.core.get.call(null, map__25724__$1, new cljs.core.Keyword(null, "test-name", "test-name", 4082390616));
  var test_env = cljs.core.get.call(null, map__25724__$1, new cljs.core.Keyword(null, "test-env", "test-env", 4160920740));
  var line = cljs.core.get.call(null, map__25724__$1, new cljs.core.Keyword(null, "line", "line", 1017226086));
  var file = cljs.core.get.call(null, map__25724__$1, new cljs.core.Keyword(null, "file", "file", 1017047278));
  return[cljs.core.str(cljs.core.pr_str.call(null, function() {
    var or__10329__auto__ = cljs.core.seq.call(null, cljs.core.reverse.call(null, (new cljs.core.Keyword("cemerick.cljs.test", "test-functions", "cemerick.cljs.test/test-functions", 1471979159)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env))));
    if (or__10329__auto__) {
      return or__10329__auto__;
    } else {
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, test_name);
    }
  }())), cljs.core.str(" ("), cljs.core.str(file), cljs.core.str(":"), cljs.core.str(line), cljs.core.str(")")].join("");
};
cemerick.cljs.test.testing_contexts_str = function testing_contexts_str(test_env) {
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, " ", cljs.core.reverse.call(null, (new cljs.core.Keyword("cemerick.cljs.test", "test-contexts", "cemerick.cljs.test/test-contexts", 1853176376)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env)))));
};
cemerick.cljs.test.inc_report_counter = function inc_report_counter(test_env, name) {
  return cljs.core.swap_BANG_.call(null, test_env, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [name], null), cljs.core.fnil.call(null, cljs.core.inc, 0));
};
cemerick.cljs.test.report = function() {
  var method_table__11187__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var prefer_table__11188__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var method_cache__11189__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var cached_hierarchy__11190__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var hierarchy__11191__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", 3129050535), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn("report", new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "default", "default", 2558708147), hierarchy__11191__auto__, method_table__11187__auto__, prefer_table__11188__auto__, method_cache__11189__auto__, cached_hierarchy__11190__auto__);
}();
cemerick.cljs.test.file_and_line = function file_and_line(error) {
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "file", "file", 1017047278), error.fileName, new cljs.core.Keyword(null, "line", "line", 1017226086), error.lineNumber], null);
};
cemerick.cljs.test.do_report = function() {
  var do_report = null;
  var do_report__1 = function(m) {
    return cemerick.cljs.test.report.call(null, function() {
      var G__25729 = (new cljs.core.Keyword(null, "type", "type", 1017479852)).cljs$core$IFn$_invoke$arity$1(m);
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "error", "error", 1110689146), G__25729)) {
        return cljs.core.merge.call(null, cemerick.cljs.test.file_and_line.call(null, (new cljs.core.Keyword(null, "actual", "actual", 3885931776)).cljs$core$IFn$_invoke$arity$1(m)), m);
      } else {
        if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "fail", "fail", 1017039504), G__25729)) {
          return cljs.core.merge.call(null, cemerick.cljs.test.file_and_line.call(null, Error()), m);
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return m;
          } else {
            return null;
          }
        }
      }
    }());
  };
  var do_report__2 = function(p__25725, m) {
    var map__25728 = p__25725;
    var map__25728__$1 = cljs.core.seq_QMARK_.call(null, map__25728) ? cljs.core.apply.call(null, cljs.core.hash_map, map__25728) : map__25728;
    var test_ctx = map__25728__$1;
    var test_name = cljs.core.get.call(null, map__25728__$1, new cljs.core.Keyword(null, "test-name", "test-name", 4082390616));
    var test_env = cljs.core.get.call(null, map__25728__$1, new cljs.core.Keyword(null, "test-env", "test-env", 4160920740));
    if (test_ctx instanceof cemerick.cljs.test.TestContext) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "instance?", "instance?", -1611433981, null), new cljs.core.Symbol(null, "TestContext", "TestContext", 586269270, null), new cljs.core.Symbol(null, "test-ctx", "test-ctx", 1506483237, null))))].join(""));
    }
    return do_report.call(null, cljs.core.merge.call(null, m, test_ctx));
  };
  do_report = function(p__25725, m) {
    switch(arguments.length) {
      case 1:
        return do_report__1.call(this, p__25725);
      case 2:
        return do_report__2.call(this, p__25725, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  do_report.cljs$core$IFn$_invoke$arity$1 = do_report__1;
  do_report.cljs$core$IFn$_invoke$arity$2 = do_report__2;
  return do_report;
}();
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "default", "default", 2558708147), function(p__25730) {
  var map__25731 = p__25730;
  var map__25731__$1 = cljs.core.seq_QMARK_.call(null, map__25731) ? cljs.core.apply.call(null, cljs.core.hash_map, map__25731) : map__25731;
  var m = map__25731__$1;
  var test_env = cljs.core.get.call(null, map__25731__$1, new cljs.core.Keyword(null, "test-env", "test-env", 4160920740));
  var _STAR_print_fn_STAR_25732 = cljs.core._STAR_print_fn_STAR_;
  try {
    cljs.core._STAR_print_fn_STAR_ = function() {
      var or__10329__auto__ = (new cljs.core.Keyword("cemerick.cljs.test", "test-print-fn", "cemerick.cljs.test/test-print-fn", 740963180)).cljs$core$IFn$_invoke$arity$1(test_env);
      if (cljs.core.truth_(or__10329__auto__)) {
        return or__10329__auto__;
      } else {
        return cljs.core._STAR_print_fn_STAR_;
      }
    }();
    return cljs.core.prn.call(null, m);
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_25732;
  }
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "pass", "pass", 1017337731), function(p__25733) {
  var map__25734 = p__25733;
  var map__25734__$1 = cljs.core.seq_QMARK_.call(null, map__25734) ? cljs.core.apply.call(null, cljs.core.hash_map, map__25734) : map__25734;
  var m = map__25734__$1;
  var test_env = cljs.core.get.call(null, map__25734__$1, new cljs.core.Keyword(null, "test-env", "test-env", 4160920740));
  var _STAR_print_fn_STAR_25735 = cljs.core._STAR_print_fn_STAR_;
  try {
    cljs.core._STAR_print_fn_STAR_ = function() {
      var or__10329__auto__ = (new cljs.core.Keyword("cemerick.cljs.test", "test-print-fn", "cemerick.cljs.test/test-print-fn", 740963180)).cljs$core$IFn$_invoke$arity$1(test_env);
      if (cljs.core.truth_(or__10329__auto__)) {
        return or__10329__auto__;
      } else {
        return cljs.core._STAR_print_fn_STAR_;
      }
    }();
    return cemerick.cljs.test.inc_report_counter.call(null, test_env, new cljs.core.Keyword(null, "pass", "pass", 1017337731));
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_25735;
  }
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "fail", "fail", 1017039504), function(p__25736) {
  var map__25737 = p__25736;
  var map__25737__$1 = cljs.core.seq_QMARK_.call(null, map__25737) ? cljs.core.apply.call(null, cljs.core.hash_map, map__25737) : map__25737;
  var m = map__25737__$1;
  var test_env = cljs.core.get.call(null, map__25737__$1, new cljs.core.Keyword(null, "test-env", "test-env", 4160920740));
  var _STAR_print_fn_STAR_25738 = cljs.core._STAR_print_fn_STAR_;
  try {
    cljs.core._STAR_print_fn_STAR_ = function() {
      var or__10329__auto__ = (new cljs.core.Keyword("cemerick.cljs.test", "test-print-fn", "cemerick.cljs.test/test-print-fn", 740963180)).cljs$core$IFn$_invoke$arity$1(test_env);
      if (cljs.core.truth_(or__10329__auto__)) {
        return or__10329__auto__;
      } else {
        return cljs.core._STAR_print_fn_STAR_;
      }
    }();
    cemerick.cljs.test.inc_report_counter.call(null, test_env, new cljs.core.Keyword(null, "fail", "fail", 1017039504));
    cljs.core.println.call(null, "\nFAIL in", cemerick.cljs.test.testing_vars_str.call(null, m));
    if (cljs.core.seq.call(null, (new cljs.core.Keyword("cemerick.cljs.test", "test-contexts", "cemerick.cljs.test/test-contexts", 1853176376)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env)))) {
      cljs.core.println.call(null, cemerick.cljs.test.testing_contexts_str.call(null, test_env));
    } else {
    }
    var temp__4092__auto___25739 = (new cljs.core.Keyword(null, "message", "message", 1968829305)).cljs$core$IFn$_invoke$arity$1(m);
    if (cljs.core.truth_(temp__4092__auto___25739)) {
      var message_25740 = temp__4092__auto___25739;
      cljs.core.println.call(null, message_25740);
    } else {
    }
    cljs.core.println.call(null, "expected:", cljs.core.pr_str.call(null, (new cljs.core.Keyword(null, "expected", "expected", 3373152810)).cljs$core$IFn$_invoke$arity$1(m)));
    return cljs.core.println.call(null, "  actual:", cljs.core.pr_str.call(null, (new cljs.core.Keyword(null, "actual", "actual", 3885931776)).cljs$core$IFn$_invoke$arity$1(m)));
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_25738;
  }
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "error", "error", 1110689146), function(p__25741) {
  var map__25742 = p__25741;
  var map__25742__$1 = cljs.core.seq_QMARK_.call(null, map__25742) ? cljs.core.apply.call(null, cljs.core.hash_map, map__25742) : map__25742;
  var m = map__25742__$1;
  var test_env = cljs.core.get.call(null, map__25742__$1, new cljs.core.Keyword(null, "test-env", "test-env", 4160920740));
  var _STAR_print_fn_STAR_25743 = cljs.core._STAR_print_fn_STAR_;
  try {
    cljs.core._STAR_print_fn_STAR_ = function() {
      var or__10329__auto__ = (new cljs.core.Keyword("cemerick.cljs.test", "test-print-fn", "cemerick.cljs.test/test-print-fn", 740963180)).cljs$core$IFn$_invoke$arity$1(test_env);
      if (cljs.core.truth_(or__10329__auto__)) {
        return or__10329__auto__;
      } else {
        return cljs.core._STAR_print_fn_STAR_;
      }
    }();
    cemerick.cljs.test.inc_report_counter.call(null, test_env, new cljs.core.Keyword(null, "error", "error", 1110689146));
    cljs.core.println.call(null, "\nERROR in", cemerick.cljs.test.testing_vars_str.call(null, m));
    if (cljs.core.seq.call(null, (new cljs.core.Keyword("cemerick.cljs.test", "test-contexts", "cemerick.cljs.test/test-contexts", 1853176376)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env)))) {
      cljs.core.println.call(null, cemerick.cljs.test.testing_contexts_str.call(null, test_env));
    } else {
    }
    var temp__4092__auto___25744 = (new cljs.core.Keyword(null, "message", "message", 1968829305)).cljs$core$IFn$_invoke$arity$1(m);
    if (cljs.core.truth_(temp__4092__auto___25744)) {
      var message_25745 = temp__4092__auto___25744;
      cljs.core.println.call(null, message_25745);
    } else {
    }
    cljs.core.println.call(null, "expected:", cljs.core.pr_str.call(null, (new cljs.core.Keyword(null, "expected", "expected", 3373152810)).cljs$core$IFn$_invoke$arity$1(m)));
    cljs.core.print.call(null, "  actual: ");
    var actual = (new cljs.core.Keyword(null, "actual", "actual", 3885931776)).cljs$core$IFn$_invoke$arity$1(m);
    if (actual instanceof Error) {
      return cljs.core.println.call(null, actual.stack);
    } else {
      return cljs.core.prn.call(null, actual);
    }
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_25743;
  }
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "multiple-async-done", "multiple-async-done", 4521901954), function(p__25746) {
  var map__25747 = p__25746;
  var map__25747__$1 = cljs.core.seq_QMARK_.call(null, map__25747) ? cljs.core.apply.call(null, cljs.core.hash_map, map__25747) : map__25747;
  var m = map__25747__$1;
  var test_env = cljs.core.get.call(null, map__25747__$1, new cljs.core.Keyword(null, "test-env", "test-env", 4160920740));
  var _STAR_print_fn_STAR_25748 = cljs.core._STAR_print_fn_STAR_;
  try {
    cljs.core._STAR_print_fn_STAR_ = function() {
      var or__10329__auto__ = (new cljs.core.Keyword("cemerick.cljs.test", "test-print-fn", "cemerick.cljs.test/test-print-fn", 740963180)).cljs$core$IFn$_invoke$arity$1(test_env);
      if (cljs.core.truth_(or__10329__auto__)) {
        return or__10329__auto__;
      } else {
        return cljs.core._STAR_print_fn_STAR_;
      }
    }();
    cemerick.cljs.test.inc_report_counter.call(null, test_env, new cljs.core.Keyword(null, "multiple-async-done", "multiple-async-done", 4521901954));
    cljs.core.println.call(null, "\nWARNING in", cemerick.cljs.test.testing_vars_str.call(null, m));
    if (cljs.core.seq.call(null, (new cljs.core.Keyword("cemerick.cljs.test", "test-contexts", "cemerick.cljs.test/test-contexts", 1853176376)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env)))) {
      cljs.core.println.call(null, cemerick.cljs.test.testing_contexts_str.call(null, test_env));
    } else {
    }
    var temp__4092__auto__ = (new cljs.core.Keyword(null, "message", "message", 1968829305)).cljs$core$IFn$_invoke$arity$1(m);
    if (cljs.core.truth_(temp__4092__auto__)) {
      var message = temp__4092__auto__;
      return cljs.core.println.call(null, message);
    } else {
      return null;
    }
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_25748;
  }
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "summary", "summary", 3451231E3), function(p__25749) {
  var map__25750 = p__25749;
  var map__25750__$1 = cljs.core.seq_QMARK_.call(null, map__25750) ? cljs.core.apply.call(null, cljs.core.hash_map, map__25750) : map__25750;
  var test_env = map__25750__$1;
  var error = cljs.core.get.call(null, map__25750__$1, new cljs.core.Keyword(null, "error", "error", 1110689146));
  var fail = cljs.core.get.call(null, map__25750__$1, new cljs.core.Keyword(null, "fail", "fail", 1017039504));
  var pass = cljs.core.get.call(null, map__25750__$1, new cljs.core.Keyword(null, "pass", "pass", 1017337731));
  var test = cljs.core.get.call(null, map__25750__$1, new cljs.core.Keyword(null, "test", "test", 1017460740));
  var _STAR_print_fn_STAR_25751 = cljs.core._STAR_print_fn_STAR_;
  try {
    cljs.core._STAR_print_fn_STAR_ = function() {
      var or__10329__auto__ = (new cljs.core.Keyword("cemerick.cljs.test", "test-print-fn", "cemerick.cljs.test/test-print-fn", 740963180)).cljs$core$IFn$_invoke$arity$1(test_env);
      if (cljs.core.truth_(or__10329__auto__)) {
        return or__10329__auto__;
      } else {
        return cljs.core._STAR_print_fn_STAR_;
      }
    }();
    cljs.core.println.call(null, "\nRan", test, "tests containing", pass + fail + error, "assertions.");
    var temp__4090__auto__ = function() {
      var and__10317__auto__ = cljs.core.not.call(null, cemerick.cljs.test.testing_complete_QMARK_.call(null, test_env));
      if (and__10317__auto__) {
        return cljs.core.apply.call(null, cljs.core._PLUS_, cljs.core.map.call(null, cljs.core.count, cljs.core.juxt.call(null, new cljs.core.Keyword("cemerick.cljs.test", "remaining", "cemerick.cljs.test/remaining", 3842781245), new cljs.core.Keyword("cemerick.cljs.test", "running", "cemerick.cljs.test/running", 1286908024)).call(null, cljs.core.deref.call(null, (new cljs.core.Keyword(null, "async", "async", 1107031534)).cljs$core$IFn$_invoke$arity$1(test_env)))));
      } else {
        return and__10317__auto__;
      }
    }();
    if (cljs.core.truth_(temp__4090__auto__)) {
      var pending_count = temp__4090__auto__;
      return cljs.core.println.call(null, "Waiting on", pending_count, [cljs.core.str("asynchronous test"), cljs.core.str(pending_count > 1 ? "s" : null), cljs.core.str(" to complete.")].join(""));
    } else {
      return cljs.core.println.call(null, "Testing complete:", fail, "failures,", error, "errors.");
    }
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_25751;
  }
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", 1359210286), function(p__25752) {
  var map__25753 = p__25752;
  var map__25753__$1 = cljs.core.seq_QMARK_.call(null, map__25753) ? cljs.core.apply.call(null, cljs.core.hash_map, map__25753) : map__25753;
  var m = map__25753__$1;
  var async = cljs.core.get.call(null, map__25753__$1, new cljs.core.Keyword(null, "async", "async", 1107031534));
  var test_env = cljs.core.get.call(null, map__25753__$1, new cljs.core.Keyword(null, "test-env", "test-env", 4160920740));
  var ns = cljs.core.get.call(null, map__25753__$1, new cljs.core.Keyword(null, "ns", "ns", 1013907767));
  var _STAR_print_fn_STAR_25754 = cljs.core._STAR_print_fn_STAR_;
  try {
    cljs.core._STAR_print_fn_STAR_ = function() {
      var or__10329__auto__ = (new cljs.core.Keyword("cemerick.cljs.test", "test-print-fn", "cemerick.cljs.test/test-print-fn", 740963180)).cljs$core$IFn$_invoke$arity$1(test_env);
      if (cljs.core.truth_(or__10329__auto__)) {
        return or__10329__auto__;
      } else {
        return cljs.core._STAR_print_fn_STAR_;
      }
    }();
    return cljs.core.println.call(null, "\nTesting", ns, cljs.core.truth_(async) ? "(async)" : "");
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_25754;
  }
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 3401491808), function(p__25755) {
  var map__25756 = p__25755;
  var map__25756__$1 = cljs.core.seq_QMARK_.call(null, map__25756) ? cljs.core.apply.call(null, cljs.core.hash_map, map__25756) : map__25756;
  var m = map__25756__$1;
  var test_env = cljs.core.get.call(null, map__25756__$1, new cljs.core.Keyword(null, "test-env", "test-env", 4160920740));
  return null;
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "begin-test-var", "begin-test-var", 3128464258), function(p__25757) {
  var map__25758 = p__25757;
  var map__25758__$1 = cljs.core.seq_QMARK_.call(null, map__25758) ? cljs.core.apply.call(null, cljs.core.hash_map, map__25758) : map__25758;
  var m = map__25758__$1;
  var test_env = cljs.core.get.call(null, map__25758__$1, new cljs.core.Keyword(null, "test-env", "test-env", 4160920740));
  return null;
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "end-test-var", "end-test-var", 2014682E3), function(p__25759) {
  var map__25760 = p__25759;
  var map__25760__$1 = cljs.core.seq_QMARK_.call(null, map__25760) ? cljs.core.apply.call(null, cljs.core.hash_map, map__25760) : map__25760;
  var m = map__25760__$1;
  var test_env = cljs.core.get.call(null, map__25760__$1, new cljs.core.Keyword(null, "test-env", "test-env", 4160920740));
  return null;
});
cemerick.cljs.test.register_fixtures_BANG_ = function() {
  var register_fixtures_BANG___delegate = function(ns_sym, fixture_type, fixture_fns) {
    return cljs.core.swap_BANG_.call(null, cemerick.cljs.test.registered_fixtures, cljs.core.update_in, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns_sym, fixture_type], null), cljs.core.constantly.call(null, fixture_fns));
  };
  var register_fixtures_BANG_ = function(ns_sym, fixture_type, var_args) {
    var fixture_fns = null;
    if (arguments.length > 2) {
      fixture_fns = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return register_fixtures_BANG___delegate.call(this, ns_sym, fixture_type, fixture_fns);
  };
  register_fixtures_BANG_.cljs$lang$maxFixedArity = 2;
  register_fixtures_BANG_.cljs$lang$applyTo = function(arglist__25761) {
    var ns_sym = cljs.core.first(arglist__25761);
    arglist__25761 = cljs.core.next(arglist__25761);
    var fixture_type = cljs.core.first(arglist__25761);
    var fixture_fns = cljs.core.rest(arglist__25761);
    return register_fixtures_BANG___delegate(ns_sym, fixture_type, fixture_fns);
  };
  register_fixtures_BANG_.cljs$core$IFn$_invoke$arity$variadic = register_fixtures_BANG___delegate;
  return register_fixtures_BANG_;
}();
cemerick.cljs.test.default_fixture = function default_fixture(f) {
  return f.call(null);
};
cemerick.cljs.test.compose_fixtures = function compose_fixtures(f1, f2) {
  return function(g) {
    return f1.call(null, function() {
      return f2.call(null, g);
    });
  };
};
cemerick.cljs.test.join_fixtures = function join_fixtures(fixtures) {
  return cljs.core.reduce.call(null, cemerick.cljs.test.compose_fixtures, cemerick.cljs.test.default_fixture, fixtures);
};
cemerick.cljs.test.async_test_QMARK_ = function async_test_QMARK_(test_fn) {
  return cljs.core.boolean$.call(null, (new cljs.core.Keyword(null, "async", "async", 1107031534)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, test_fn)));
};
cemerick.cljs.test.test_async_fn = function test_async_fn(async_test_env, test_name, test_fn) {
  cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "begin-test-var", "begin-test-var", 3128464258), new cljs.core.Keyword(null, "var", "var", 1014020761), test_fn, new cljs.core.Keyword(null, "test-env", "test-env", 4160920740), async_test_env, new cljs.core.Keyword(null, "test-name", "test-name", 4082390616), test_name], null));
  cemerick.cljs.test.inc_report_counter.call(null, async_test_env, new cljs.core.Keyword(null, "test", "test", 1017460740));
  return test_fn.call(null, new cemerick.cljs.test.TestContext(async_test_env, test_name));
};
cemerick.cljs.test.start_next_async_test = function start_next_async_test(async_test_env) {
  var next_test = cljs.core.atom.call(null, function() {
    return null;
  });
  cljs.core.swap_BANG_.call(null, async_test_env, function(env) {
    var temp__4090__auto__ = function() {
      var and__10317__auto__ = cljs.core.not.call(null, (new cljs.core.Keyword(null, "stop", "stop", 1017445236)).cljs$core$IFn$_invoke$arity$1(env));
      if (and__10317__auto__) {
        return cljs.core.first.call(null, (new cljs.core.Keyword("cemerick.cljs.test", "remaining", "cemerick.cljs.test/remaining", 3842781245)).cljs$core$IFn$_invoke$arity$1(env));
      } else {
        return and__10317__auto__;
      }
    }();
    if (cljs.core.truth_(temp__4090__auto__)) {
      var vec__25763 = temp__4090__auto__;
      var name = cljs.core.nth.call(null, vec__25763, 0, null);
      var testfn = cljs.core.nth.call(null, vec__25763, 1, null);
      cljs.core.reset_BANG_.call(null, next_test, testfn);
      var ns_25764 = cljs.core.namespace.call(null, name);
      if (cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "namespaces", "namespaces", 1177962986)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, async_test_env)), ns_25764)) {
      } else {
        cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", 1359210286), new cljs.core.Keyword(null, "ns", "ns", 1013907767), ns_25764, new cljs.core.Keyword(null, "test-env", "test-env", 4160920740), async_test_env, new cljs.core.Keyword(null, "async", "async", 1107031534), true], null));
        cljs.core.alter_meta_BANG_.call(null, async_test_env, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "namespaces", "namespaces", 1177962986)], null), cljs.core.fnil.call(null, cljs.core.conj, cljs.core.PersistentHashSet.EMPTY), ns_25764);
      }
      return cljs.core.update_in.call(null, cljs.core.update_in.call(null, env, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cemerick.cljs.test", "remaining", "cemerick.cljs.test/remaining", 3842781245)], null), cljs.core.dissoc, name), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cemerick.cljs.test", "running", "cemerick.cljs.test/running", 1286908024)], null), cljs.core.assoc, 
      name, new Date);
    } else {
      return env;
    }
  });
  setTimeout(function() {
    return cljs.core.deref.call(null, next_test).call(null);
  }, 1);
  return async_test_env;
};
cemerick.cljs.test.squelch_internals = function squelch_internals(test_env) {
  var G__25769 = test_env;
  cljs.core.swap_BANG_.call(null, G__25769, function(p1__25765_SHARP_) {
    return cljs.core.reduce.call(null, function(env, p__25770) {
      var vec__25771 = p__25770;
      var k = cljs.core.nth.call(null, vec__25771, 0, null);
      var v = cljs.core.nth.call(null, vec__25771, 1, null);
      if (cljs.core._EQ_.call(null, cljs.core.namespace.call(null, k), cljs.core.namespace.call(null, new cljs.core.Keyword("cemerick.cljs.test", "foo", "cemerick.cljs.test/foo", 4582478189)))) {
        return env;
      } else {
        return cljs.core.assoc.call(null, env, k, v);
      }
    }, cljs.core.PersistentArrayMap.EMPTY, p1__25765_SHARP_);
  });
  return G__25769;
};
cemerick.cljs.test.finish_test_entry_point = function finish_test_entry_point(entry_point_QMARK_, test_env) {
  if (cljs.core.truth_(entry_point_QMARK_)) {
    if (cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword("cemerick.cljs.test", "remaining", "cemerick.cljs.test/remaining", 3842781245)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, (new cljs.core.Keyword(null, "async", "async", 1107031534)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env)))))) {
      cljs.core.swap_BANG_.call(null, test_env, cljs.core.dissoc, new cljs.core.Keyword(null, "async", "async", 1107031534));
    } else {
      cemerick.cljs.test.start_next_async_test.call(null, (new cljs.core.Keyword(null, "async", "async", 1107031534)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env)));
    }
    return cljs.core.deref.call(null, cemerick.cljs.test.squelch_internals.call(null, test_env));
  } else {
    return test_env;
  }
};
cemerick.cljs.test.schedule_async_test = function schedule_async_test(async_test_env, test_name, test_fn) {
  cljs.core.swap_BANG_.call(null, async_test_env, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cemerick.cljs.test", "remaining", "cemerick.cljs.test/remaining", 3842781245)], null), cljs.core.fnil.call(null, cljs.core.assoc, cljs.core.sorted_map.call(null)), test_name, cljs.core.with_meta.call(null, function() {
    return cemerick.cljs.test.test_async_fn.call(null, async_test_env, test_name, test_fn);
  }, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "name", "name", 1017277949), test_name], null)));
  return async_test_env;
};
cemerick.cljs.test.done_STAR_ = function() {
  var done_STAR_ = null;
  var done_STAR___1 = function(p__25773) {
    var map__25777 = p__25773;
    var map__25777__$1 = cljs.core.seq_QMARK_.call(null, map__25777) ? cljs.core.apply.call(null, cljs.core.hash_map, map__25777) : map__25777;
    var test_ctx = map__25777__$1;
    var test_name = cljs.core.get.call(null, map__25777__$1, new cljs.core.Keyword(null, "test-name", "test-name", 4082390616));
    var async_test_env = cljs.core.get.call(null, map__25777__$1, new cljs.core.Keyword(null, "test-env", "test-env", 4160920740));
    if (test_ctx instanceof cemerick.cljs.test.TestContext) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "instance?", "instance?", -1611433981, null), new cljs.core.Symbol(null, "TestContext", "TestContext", 586269270, null), new cljs.core.Symbol(null, "test-ctx", "test-ctx", 1506483237, null))))].join(""));
    }
    var first_call_QMARK_ = cljs.core.atom.call(null, false);
    cljs.core.swap_BANG_.call(null, async_test_env, function(env) {
      cljs.core.reset_BANG_.call(null, first_call_QMARK_, cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword("cemerick.cljs.test", "running", "cemerick.cljs.test/running", 1286908024)).cljs$core$IFn$_invoke$arity$1(env), test_name));
      return cljs.core.update_in.call(null, env, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cemerick.cljs.test", "running", "cemerick.cljs.test/running", 1286908024)], null), cljs.core.dissoc, test_name);
    });
    if (cljs.core.truth_(cljs.core.deref.call(null, first_call_QMARK_))) {
      cemerick.cljs.test.do_report.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "end-test-var", "end-test-var", 2014682E3), new cljs.core.Keyword(null, "var", "var", 1014020761), test_name], null), test_ctx));
      if (cljs.core.truth_(cemerick.cljs.test.testing_complete_QMARK_.call(null, async_test_env))) {
        cemerick.cljs.test.squelch_internals.call(null, async_test_env);
      } else {
        cemerick.cljs.test.start_next_async_test.call(null, async_test_env);
      }
    } else {
      cemerick.cljs.test.do_report.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "multiple-async-done", "multiple-async-done", 4521901954), new cljs.core.Keyword(null, "message", "message", 1968829305), "`(done)` called multiple times to signal end-of-test"], null), test_ctx));
    }
    return async_test_env;
  };
  var done_STAR___2 = function(p__25772, error) {
    var map__25776 = p__25772;
    var map__25776__$1 = cljs.core.seq_QMARK_.call(null, map__25776) ? cljs.core.apply.call(null, cljs.core.hash_map, map__25776) : map__25776;
    var test_ctx = map__25776__$1;
    var test_name = cljs.core.get.call(null, map__25776__$1, new cljs.core.Keyword(null, "test-name", "test-name", 4082390616));
    var test_env = cljs.core.get.call(null, map__25776__$1, new cljs.core.Keyword(null, "test-env", "test-env", 4160920740));
    if (test_ctx instanceof cemerick.cljs.test.TestContext) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "instance?", "instance?", -1611433981, null), new cljs.core.Symbol(null, "TestContext", "TestContext", 586269270, null), new cljs.core.Symbol(null, "test-ctx", "test-ctx", 1506483237, null))))].join(""));
    }
    cemerick.cljs.test.do_report.call(null, cemerick.cljs.test.do_report.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "error", "error", 1110689146), new cljs.core.Keyword(null, "message", "message", 1968829305), "Uncaught exception, not in assertion.", new cljs.core.Keyword(null, "expected", "expected", 3373152810), null, new cljs.core.Keyword(null, "actual", "actual", 3885931776), 
    error], null), test_ctx)));
    return done_STAR_.call(null, test_ctx);
  };
  done_STAR_ = function(p__25772, error) {
    switch(arguments.length) {
      case 1:
        return done_STAR___1.call(this, p__25772);
      case 2:
        return done_STAR___2.call(this, p__25772, error);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  done_STAR_.cljs$core$IFn$_invoke$arity$1 = done_STAR___1;
  done_STAR_.cljs$core$IFn$_invoke$arity$2 = done_STAR___2;
  return done_STAR_;
}();
cemerick.cljs.test.stop = function stop(async_test_env) {
  return cljs.core.swap_BANG_.call(null, async_test_env, cljs.core.assoc, new cljs.core.Keyword(null, "stop", "stop", 1017445236), true);
};
cemerick.cljs.test.test_function = function() {
  var test_function = null;
  var test_function__1 = function(v) {
    return test_function.call(null, cemerick.cljs.test.init_test_environment.call(null), v);
  };
  var test_function__2 = function(test_env, v) {
    var entry_point_QMARK___20467__auto__ = cemerick.cljs.test._STAR_entry_point_STAR_;
    var _STAR_entry_point_STAR_25781 = cemerick.cljs.test._STAR_entry_point_STAR_;
    try {
      cemerick.cljs.test._STAR_entry_point_STAR_ = false;
      if (cljs.core.fn_QMARK_.call(null, v)) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("test-var must be passed the function to be tested (not a symbol naming it)"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "fn?", "fn?", -1640430032, null), new cljs.core.Symbol(null, "v", "v", -1640531409, null))))].join(""));
      }
      var map__25782_25784 = cljs.core.meta.call(null, v);
      var map__25782_25785__$1 = cljs.core.seq_QMARK_.call(null, map__25782_25784) ? cljs.core.apply.call(null, cljs.core.hash_map, map__25782_25784) : map__25782_25784;
      var t_25786 = cljs.core.get.call(null, map__25782_25785__$1, new cljs.core.Keyword(null, "test", "test", 1017460740));
      var test_name_25787 = cljs.core.get.call(null, map__25782_25785__$1, new cljs.core.Keyword(null, "name", "name", 1017277949));
      var async_QMARK__25788 = cljs.core.get.call(null, map__25782_25785__$1, new cljs.core.Keyword(null, "async", "async", 1107031534));
      if (cljs.core.truth_(t_25786)) {
        if (cljs.core.truth_(async_QMARK__25788)) {
          cemerick.cljs.test.schedule_async_test.call(null, (new cljs.core.Keyword(null, "async", "async", 1107031534)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env)), test_name_25787, t_25786);
        } else {
          try {
            cljs.core.swap_BANG_.call(null, test_env, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cemerick.cljs.test", "test-functions", "cemerick.cljs.test/test-functions", 1471979159)], null), cljs.core.conj, function() {
              var or__10329__auto__ = test_name_25787;
              if (cljs.core.truth_(or__10329__auto__)) {
                return or__10329__auto__;
              } else {
                return v;
              }
            }());
            cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "begin-test-var", "begin-test-var", 3128464258), new cljs.core.Keyword(null, "var", "var", 1014020761), v, new cljs.core.Keyword(null, "test-env", "test-env", 4160920740), test_env, new cljs.core.Keyword(null, "test-name", "test-name", 4082390616), test_name_25787], null));
            cemerick.cljs.test.inc_report_counter.call(null, test_env, new cljs.core.Keyword(null, "test", "test", 1017460740));
            try {
              t_25786.call(null, new cemerick.cljs.test.TestContext(test_env, test_name_25787));
            } catch (e25783) {
              if (e25783 instanceof Error) {
                var e_25789 = e25783;
                cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "error", "error", 1110689146), new cljs.core.Keyword(null, "message", "message", 1968829305), "Uncaught exception, not in assertion.", new cljs.core.Keyword(null, "test-env", "test-env", 4160920740), test_env, new cljs.core.Keyword(null, "test-name", "test-name", 4082390616), test_name_25787, new cljs.core.Keyword(null, 
                "expected", "expected", 3373152810), null, new cljs.core.Keyword(null, "actual", "actual", 3885931776), e_25789], null));
              } else {
                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  throw e25783;
                } else {
                }
              }
            }
            cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "end-test-var", "end-test-var", 2014682E3), new cljs.core.Keyword(null, "var", "var", 1014020761), v, new cljs.core.Keyword(null, "test-env", "test-env", 4160920740), test_env, new cljs.core.Keyword(null, "test-name", "test-name", 4082390616), test_name_25787], null));
          } finally {
            cljs.core.swap_BANG_.call(null, test_env, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cemerick.cljs.test", "test-functions", "cemerick.cljs.test/test-functions", 1471979159)], null), cljs.core.pop);
          }
        }
      } else {
      }
      return cemerick.cljs.test.finish_test_entry_point.call(null, entry_point_QMARK___20467__auto__, test_env);
    } finally {
      cemerick.cljs.test._STAR_entry_point_STAR_ = _STAR_entry_point_STAR_25781;
    }
  };
  test_function = function(test_env, v) {
    switch(arguments.length) {
      case 1:
        return test_function__1.call(this, test_env);
      case 2:
        return test_function__2.call(this, test_env, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  test_function.cljs$core$IFn$_invoke$arity$1 = test_function__1;
  test_function.cljs$core$IFn$_invoke$arity$2 = test_function__2;
  return test_function;
}();
cemerick.cljs.test.test_all_vars = function() {
  var test_all_vars = null;
  var test_all_vars__1 = function(ns_sym) {
    return test_all_vars.call(null, cemerick.cljs.test.init_test_environment.call(null), ns_sym);
  };
  var test_all_vars__2 = function(test_env, ns_sym) {
    var entry_point_QMARK___20467__auto__ = cemerick.cljs.test._STAR_entry_point_STAR_;
    var _STAR_entry_point_STAR_25798 = cemerick.cljs.test._STAR_entry_point_STAR_;
    try {
      cemerick.cljs.test._STAR_entry_point_STAR_ = false;
      var tests_25803 = cljs.core.filter.call(null, function(p1__25790_SHARP_) {
        return(new cljs.core.Keyword(null, "test", "test", 1017460740)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, p1__25790_SHARP_));
      }, cljs.core.vals.call(null, cljs.core.get.call(null, cljs.core.deref.call(null, cemerick.cljs.test.registered_tests), ns_sym)));
      var once_fixture_fn_25804 = cemerick.cljs.test.join_fixtures.call(null, (new cljs.core.Keyword(null, "once", "once", 1017319923)).cljs$core$IFn$_invoke$arity$1(ns_sym.call(null, cljs.core.deref.call(null, cemerick.cljs.test.registered_fixtures))));
      var each_fixture_fn_25805 = cemerick.cljs.test.join_fixtures.call(null, (new cljs.core.Keyword(null, "each", "each", 1017009523)).cljs$core$IFn$_invoke$arity$1(ns_sym.call(null, cljs.core.deref.call(null, cemerick.cljs.test.registered_fixtures))));
      once_fixture_fn_25804.call(null, function() {
        var seq__25799 = cljs.core.seq.call(null, cljs.core.remove.call(null, cemerick.cljs.test.async_test_QMARK_, tests_25803));
        var chunk__25800 = null;
        var count__25801 = 0;
        var i__25802 = 0;
        while (true) {
          if (i__25802 < count__25801) {
            var v = cljs.core._nth.call(null, chunk__25800, i__25802);
            each_fixture_fn_25805.call(null, function(seq__25799, chunk__25800, count__25801, i__25802, v) {
              return function() {
                return cemerick.cljs.test.test_function.call(null, test_env, v);
              };
            }(seq__25799, chunk__25800, count__25801, i__25802, v));
            var G__25806 = seq__25799;
            var G__25807 = chunk__25800;
            var G__25808 = count__25801;
            var G__25809 = i__25802 + 1;
            seq__25799 = G__25806;
            chunk__25800 = G__25807;
            count__25801 = G__25808;
            i__25802 = G__25809;
            continue;
          } else {
            var temp__4092__auto__ = cljs.core.seq.call(null, seq__25799);
            if (temp__4092__auto__) {
              var seq__25799__$1 = temp__4092__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__25799__$1)) {
                var c__11077__auto__ = cljs.core.chunk_first.call(null, seq__25799__$1);
                var G__25810 = cljs.core.chunk_rest.call(null, seq__25799__$1);
                var G__25811 = c__11077__auto__;
                var G__25812 = cljs.core.count.call(null, c__11077__auto__);
                var G__25813 = 0;
                seq__25799 = G__25810;
                chunk__25800 = G__25811;
                count__25801 = G__25812;
                i__25802 = G__25813;
                continue;
              } else {
                var v = cljs.core.first.call(null, seq__25799__$1);
                each_fixture_fn_25805.call(null, function(seq__25799, chunk__25800, count__25801, i__25802, v, seq__25799__$1, temp__4092__auto__) {
                  return function() {
                    return cemerick.cljs.test.test_function.call(null, test_env, v);
                  };
                }(seq__25799, chunk__25800, count__25801, i__25802, v, seq__25799__$1, temp__4092__auto__));
                var G__25814 = cljs.core.next.call(null, seq__25799__$1);
                var G__25815 = null;
                var G__25816 = 0;
                var G__25817 = 0;
                seq__25799 = G__25814;
                chunk__25800 = G__25815;
                count__25801 = G__25816;
                i__25802 = G__25817;
                continue;
              }
            } else {
              return null;
            }
          }
          break;
        }
      });
      cljs.core.reduce.call(null, function(p1__25791_SHARP_, p2__25792_SHARP_) {
        return cljs.core.apply.call(null, cemerick.cljs.test.schedule_async_test, p1__25791_SHARP_, p2__25792_SHARP_);
      }, (new cljs.core.Keyword(null, "async", "async", 1107031534)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env)), cljs.core.map.call(null, cljs.core.comp.call(null, cljs.core.juxt.call(null, new cljs.core.Keyword(null, "name", "name", 1017277949), new cljs.core.Keyword(null, "test", "test", 1017460740)), cljs.core.meta), cljs.core.filter.call(null, cemerick.cljs.test.async_test_QMARK_, tests_25803)));
      return cemerick.cljs.test.finish_test_entry_point.call(null, entry_point_QMARK___20467__auto__, test_env);
    } finally {
      cemerick.cljs.test._STAR_entry_point_STAR_ = _STAR_entry_point_STAR_25798;
    }
  };
  test_all_vars = function(test_env, ns_sym) {
    switch(arguments.length) {
      case 1:
        return test_all_vars__1.call(this, test_env);
      case 2:
        return test_all_vars__2.call(this, test_env, ns_sym);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  test_all_vars.cljs$core$IFn$_invoke$arity$1 = test_all_vars__1;
  test_all_vars.cljs$core$IFn$_invoke$arity$2 = test_all_vars__2;
  return test_all_vars;
}();
cemerick.cljs.test.test_ns = function() {
  var test_ns = null;
  var test_ns__1 = function(ns_sym) {
    return test_ns.call(null, cemerick.cljs.test.init_test_environment.call(null), ns_sym);
  };
  var test_ns__2 = function(test_env, ns_sym) {
    var entry_point_QMARK___20467__auto__ = cemerick.cljs.test._STAR_entry_point_STAR_;
    var _STAR_entry_point_STAR_25819 = cemerick.cljs.test._STAR_entry_point_STAR_;
    try {
      cemerick.cljs.test._STAR_entry_point_STAR_ = false;
      cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", 1359210286), new cljs.core.Keyword(null, "ns", "ns", 1013907767), ns_sym, new cljs.core.Keyword(null, "test-env", "test-env", 4160920740), test_env], null));
      var temp__4090__auto___25820 = cljs.core.get.call(null, cljs.core.deref.call(null, cemerick.cljs.test.registered_test_hooks), ns_sym);
      if (cljs.core.truth_(temp__4090__auto___25820)) {
        var test_hook_25821 = temp__4090__auto___25820;
        test_hook_25821.call(null, test_env);
      } else {
        cemerick.cljs.test.test_all_vars.call(null, test_env, ns_sym);
      }
      cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 3401491808), new cljs.core.Keyword(null, "ns", "ns", 1013907767), ns_sym, new cljs.core.Keyword(null, "test-env", "test-env", 4160920740), test_env], null));
      return cemerick.cljs.test.finish_test_entry_point.call(null, entry_point_QMARK___20467__auto__, test_env);
    } finally {
      cemerick.cljs.test._STAR_entry_point_STAR_ = _STAR_entry_point_STAR_25819;
    }
  };
  test_ns = function(test_env, ns_sym) {
    switch(arguments.length) {
      case 1:
        return test_ns__1.call(this, test_env);
      case 2:
        return test_ns__2.call(this, test_env, ns_sym);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  test_ns.cljs$core$IFn$_invoke$arity$1 = test_ns__1;
  test_ns.cljs$core$IFn$_invoke$arity$2 = test_ns__2;
  return test_ns;
}();
cemerick.cljs.test.test_summary = function test_summary(test_env) {
  var test_env__$1 = cemerick.cljs.test.maybe_deref.call(null, test_env);
  return cemerick.cljs.test.do_report.call(null, cljs.core.assoc.call(null, cljs.core.merge_with.call(null, cljs.core._PLUS_, test_env__$1, cemerick.cljs.test.maybe_deref.call(null, (new cljs.core.Keyword(null, "async", "async", 1107031534)).cljs$core$IFn$_invoke$arity$1(test_env__$1))), new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "summary", "summary", 3451231E3)));
};
cemerick.cljs.test.run_tests_STAR_ = function() {
  var run_tests_STAR___delegate = function(namespaces) {
    var vec__25828 = cljs.core.first.call(null, namespaces) instanceof cljs.core.Atom ? namespaces : cljs.core.cons.call(null, cemerick.cljs.test.init_test_environment.call(null), namespaces);
    var test_env = cljs.core.nth.call(null, vec__25828, 0, null);
    var namespaces__$1 = cljs.core.nthnext.call(null, vec__25828, 1);
    var entry_point_QMARK___20467__auto__ = cemerick.cljs.test._STAR_entry_point_STAR_;
    var _STAR_entry_point_STAR_25829 = cemerick.cljs.test._STAR_entry_point_STAR_;
    try {
      cemerick.cljs.test._STAR_entry_point_STAR_ = false;
      var seq__25830_25834 = cljs.core.seq.call(null, cljs.core.distinct.call(null, namespaces__$1));
      var chunk__25831_25835 = null;
      var count__25832_25836 = 0;
      var i__25833_25837 = 0;
      while (true) {
        if (i__25833_25837 < count__25832_25836) {
          var ns_25838 = cljs.core._nth.call(null, chunk__25831_25835, i__25833_25837);
          cemerick.cljs.test.test_ns.call(null, test_env, ns_25838);
          var G__25839 = seq__25830_25834;
          var G__25840 = chunk__25831_25835;
          var G__25841 = count__25832_25836;
          var G__25842 = i__25833_25837 + 1;
          seq__25830_25834 = G__25839;
          chunk__25831_25835 = G__25840;
          count__25832_25836 = G__25841;
          i__25833_25837 = G__25842;
          continue;
        } else {
          var temp__4092__auto___25843 = cljs.core.seq.call(null, seq__25830_25834);
          if (temp__4092__auto___25843) {
            var seq__25830_25844__$1 = temp__4092__auto___25843;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__25830_25844__$1)) {
              var c__11077__auto___25845 = cljs.core.chunk_first.call(null, seq__25830_25844__$1);
              var G__25846 = cljs.core.chunk_rest.call(null, seq__25830_25844__$1);
              var G__25847 = c__11077__auto___25845;
              var G__25848 = cljs.core.count.call(null, c__11077__auto___25845);
              var G__25849 = 0;
              seq__25830_25834 = G__25846;
              chunk__25831_25835 = G__25847;
              count__25832_25836 = G__25848;
              i__25833_25837 = G__25849;
              continue;
            } else {
              var ns_25850 = cljs.core.first.call(null, seq__25830_25844__$1);
              cemerick.cljs.test.test_ns.call(null, test_env, ns_25850);
              var G__25851 = cljs.core.next.call(null, seq__25830_25844__$1);
              var G__25852 = null;
              var G__25853 = 0;
              var G__25854 = 0;
              seq__25830_25834 = G__25851;
              chunk__25831_25835 = G__25852;
              count__25832_25836 = G__25853;
              i__25833_25837 = G__25854;
              continue;
            }
          } else {
          }
        }
        break;
      }
      cemerick.cljs.test.on_testing_complete.call(null, test_env, cemerick.cljs.test.test_summary);
      cemerick.cljs.test.test_summary.call(null, test_env);
      return cemerick.cljs.test.finish_test_entry_point.call(null, entry_point_QMARK___20467__auto__, test_env);
    } finally {
      cemerick.cljs.test._STAR_entry_point_STAR_ = _STAR_entry_point_STAR_25829;
    }
  };
  var run_tests_STAR_ = function(var_args) {
    var namespaces = null;
    if (arguments.length > 0) {
      namespaces = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return run_tests_STAR___delegate.call(this, namespaces);
  };
  run_tests_STAR_.cljs$lang$maxFixedArity = 0;
  run_tests_STAR_.cljs$lang$applyTo = function(arglist__25855) {
    var namespaces = cljs.core.seq(arglist__25855);
    return run_tests_STAR___delegate(namespaces);
  };
  run_tests_STAR_.cljs$core$IFn$_invoke$arity$variadic = run_tests_STAR___delegate;
  return run_tests_STAR_;
}();
goog.exportSymbol("cemerick.cljs.test.run_tests_STAR_", cemerick.cljs.test.run_tests_STAR_);
cemerick.cljs.test.run_all_tests = function() {
  var run_all_tests = null;
  var run_all_tests__0 = function() {
    return cljs.core.apply.call(null, cemerick.cljs.test.run_tests_STAR_, cljs.core.keys.call(null, cljs.core.deref.call(null, cemerick.cljs.test.registered_tests)));
  };
  var run_all_tests__1 = function(re) {
    return cljs.core.apply.call(null, cemerick.cljs.test.run_tests_STAR_, cljs.core.filter.call(null, function(p1__25856_SHARP_) {
      return cljs.core.re_matches.call(null, re, cljs.core.name.call(null, p1__25856_SHARP_));
    }, cljs.core.keys.call(null, cljs.core.deref.call(null, cemerick.cljs.test.registered_tests))));
  };
  run_all_tests = function(re) {
    switch(arguments.length) {
      case 0:
        return run_all_tests__0.call(this);
      case 1:
        return run_all_tests__1.call(this, re);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  run_all_tests.cljs$core$IFn$_invoke$arity$0 = run_all_tests__0;
  run_all_tests.cljs$core$IFn$_invoke$arity$1 = run_all_tests__1;
  return run_all_tests;
}();
goog.exportSymbol("cemerick.cljs.test.run_all_tests", cemerick.cljs.test.run_all_tests);
cemerick.cljs.test.successful_QMARK_ = function successful_QMARK_(test_env) {
  var map__25858 = cemerick.cljs.test.maybe_deref.call(null, test_env);
  var map__25858__$1 = cljs.core.seq_QMARK_.call(null, map__25858) ? cljs.core.apply.call(null, cljs.core.hash_map, map__25858) : map__25858;
  var async = cljs.core.get.call(null, map__25858__$1, new cljs.core.Keyword(null, "async", "async", 1107031534));
  var error = cljs.core.get.call(null, map__25858__$1, new cljs.core.Keyword(null, "error", "error", 1110689146));
  var fail = cljs.core.get.call(null, map__25858__$1, new cljs.core.Keyword(null, "fail", "fail", 1017039504));
  var and__10317__auto__ = cemerick.cljs.test.testing_complete_QMARK_.call(null, test_env);
  if (cljs.core.truth_(and__10317__auto__)) {
    var and__10317__auto____$1 = function() {
      var or__10329__auto__ = fail;
      if (cljs.core.truth_(or__10329__auto__)) {
        return or__10329__auto__;
      } else {
        return 0;
      }
    }() === 0;
    if (and__10317__auto____$1) {
      var and__10317__auto____$2 = function() {
        var or__10329__auto__ = error;
        if (cljs.core.truth_(or__10329__auto__)) {
          return or__10329__auto__;
        } else {
          return 0;
        }
      }() === 0;
      if (and__10317__auto____$2) {
        var or__10329__auto__ = async == null;
        if (or__10329__auto__) {
          return or__10329__auto__;
        } else {
          return successful_QMARK_.call(null, async);
        }
      } else {
        return and__10317__auto____$2;
      }
    } else {
      return and__10317__auto____$1;
    }
  } else {
    return and__10317__auto__;
  }
};
goog.exportSymbol("cemerick.cljs.test.successful_QMARK_", cemerick.cljs.test.successful_QMARK_);
cemerick.cljs.test.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
goog.exportSymbol("cemerick.cljs.test.set_print_fn_BANG_", cemerick.cljs.test.set_print_fn_BANG_);
goog.provide("clj_crud.datascript_test");
goog.require("cljs.core");
goog.require("datascript");
goog.require("datascript");
goog.require("cemerick.cljs.test");
goog.require("cemerick.cljs.test");
cljs.core.enable_console_print_BANG_.call(null);
clj_crud.datascript_test.inc_age = function inc_age(db, name) {
  var vec__20591 = cljs.core.first.call(null, datascript.q.call(null, new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "find", "find", 1017047339), new cljs.core.Symbol(null, "?e", "?e", -1640529473, null), new cljs.core.Symbol(null, "?a", "?a", -1640529477, null), new cljs.core.Keyword(null, "in", "in", 1013907607), new cljs.core.Symbol(null, "$", "$", -1640531491, null), new cljs.core.Symbol(null, "?n", "?n", -1640529464, null), new cljs.core.Keyword(null, 
  "where", "where", 1127002201), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?e", "?e", -1640529473, null), new cljs.core.Keyword(null, "name", "name", 1017277949), new cljs.core.Symbol(null, "?n", "?n", -1640529464, null)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?e", "?e", -1640529473, null), new cljs.core.Keyword(null, "age", "age", 1014000753), new cljs.core.Symbol(null, 
  "?a", "?a", -1640529477, null)], null)], null), db, name));
  var e = cljs.core.nth.call(null, vec__20591, 0, null);
  var a = cljs.core.nth.call(null, vec__20591, 1, null);
  cljs.core.println.call(null, "[e a]", new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [e, a], null));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db", "add", "db/add", 1014207040), e, new cljs.core.Keyword(null, "age", "age", 1014000753), a + 1], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db", "add", "db/add", 1014207040), e, new cljs.core.Keyword(null, "aka", "aka", 1014000873), 
  "By db.fn!"], null)], null);
};
clj_crud.datascript_test.hello_world = function hello_world() {
  return cemerick.cljs.test.test_function.call(null, cemerick.cljs.test.init_test_environment.call(null), clj_crud.datascript_test.hello_world);
};
clj_crud.datascript_test.hello_world = cljs.core.with_meta.call(null, clj_crud.datascript_test.hello_world, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "async", "async", 1107031534), true, new cljs.core.Keyword(null, "line", "line", 1017226086), 19, new cljs.core.Keyword(null, "column", "column", 3954034376), 18, new cljs.core.Keyword(null, "end-line", "end-line", 2693041432), 19, new cljs.core.Keyword(null, "end-column", "end-column", 3799845882), 
29], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "test", "test", 1017460740), function hello_world_test(test_ctx__20430__auto__) {
  var _test_ctx = test_ctx__20430__auto__;
  var async_QMARK___20345__auto__ = (new cljs.core.Keyword(null, "async", "async", 1107031534)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, (new cljs.core.Keyword(null, "test-name", "test-name", 4082390616)).cljs$core$IFn$_invoke$arity$1(_test_ctx)));
  var _STAR_test_ctx_STAR_20597 = cemerick.cljs.test._STAR_test_ctx_STAR_;
  try {
    cemerick.cljs.test._STAR_test_ctx_STAR_ = cljs.core.truth_(async_QMARK___20345__auto__) ? null : _test_ctx;
    try {
      var _test_ctx__$1 = _test_ctx;
      var async_QMARK___20345__auto____$1 = (new cljs.core.Keyword(null, "async", "async", 1107031534)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, (new cljs.core.Keyword(null, "test-name", "test-name", 4082390616)).cljs$core$IFn$_invoke$arity$1(_test_ctx__$1)));
      var _STAR_test_ctx_STAR_20599 = cemerick.cljs.test._STAR_test_ctx_STAR_;
      try {
        cemerick.cljs.test._STAR_test_ctx_STAR_ = cljs.core.truth_(async_QMARK___20345__auto____$1) ? null : _test_ctx__$1;
        try {
          try {
            var values__20365__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.PersistentHashSet.fromArray([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Maksim", 46], null)], true)), function() {
              var schema = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "aka", "aka", 1014000873), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "cardinality", "cardinality", 1859117312), new cljs.core.Keyword(null, "many", "many", 1017248209)], null)], null);
              var conn = datascript.create_conn.call(null, schema);
              var seen = cljs.core.atom.call(null, 0);
              var key = datascript.listen_BANG_.call(null, conn, new cljs.core.Keyword(null, "test", "test", 1017460740), function(schema, conn, seen) {
                return function(report) {
                  cljs.core.println.call(null, "Listen heard report: ", report);
                  cljs.core.swap_BANG_.call(null, seen, cljs.core.inc);
                  if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, seen), 2)) {
                    return cemerick.cljs.test.done_STAR_.call(null, _test_ctx__$1);
                  } else {
                    return null;
                  }
                };
              }(schema, conn, seen));
              cljs.core.println.call(null, "RES:", datascript.transact_BANG_.call(null, conn, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword("db", "id", "db/id", 1014111942), -1, new cljs.core.Keyword(null, "name", "name", 1017277949), "Maksim", new cljs.core.Keyword(null, "age", "age", 1014000753), 45, new cljs.core.Keyword(null, "aka", "aka", 1014000873), new cljs.core.PersistentVector(null, 2, 
              5, cljs.core.PersistentVector.EMPTY_NODE, ["Maks Otto von Stirlitz", "Jack Ryan"], null)], null)], null)));
              cljs.core.println.call(null, "inc RES:", datascript.transact_BANG_.call(null, conn, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword("db", "id", "db/id", 1014111942), -2, new cljs.core.Keyword(null, "name", "name", 1017277949), "Bruce Wayne", new cljs.core.Keyword(null, "age", "age", 1014000753), 35, new cljs.core.Keyword(null, "aka", "aka", 1014000873), new cljs.core.PersistentVector(null, 
              1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Batman"], null)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db.fn", "call", "db.fn/call", 2901959894), clj_crud.datascript_test.inc_age, "Maksim"], null)], null)));
              return datascript.q.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "find", "find", 1017047339), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?n", "?n", -1640529464, null), new cljs.core.Symbol(null, "?a", "?a", -1640529477, null)], null), new cljs.core.Keyword(null, "where", "where", 1127002201), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 
              3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?e", "?e", -1640529473, null), new cljs.core.Keyword(null, "aka", "aka", 1014000873), "Maks Otto von Stirlitz"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?e", "?e", -1640529473, null), new cljs.core.Keyword(null, "name", "name", 1017277949), new cljs.core.Symbol(null, "?n", "?n", -1640529464, null)], null), new cljs.core.PersistentVector(null, 
              3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?e", "?e", -1640529473, null), new cljs.core.Keyword(null, "age", "age", 1014000753), new cljs.core.Symbol(null, "?a", "?a", -1640529477, null)], null)], null)], null), cljs.core.deref.call(null, conn));
            }());
            var result__20366__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__20365__auto__);
            if (result__20366__auto__ instanceof cemerick.cljs.test.TestContext) {
              throw new Error("TestContext provided as [form] in `is` assertion. If using `is` with an explicit test context, use the 3-arg arity.");
            } else {
            }
            if (cljs.core.truth_(result__20366__auto__)) {
              cemerick.cljs.test.do_report.call(null, _test_ctx__$1, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "actual", "actual", 3885931776), cljs.core.cons.call(null, cljs.core._EQ_, values__20365__auto__), new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "pass", "pass", 1017337731), new cljs.core.Keyword(null, "message", "message", 1968829305), null, new cljs.core.Keyword(null, "expected", "expected", 3373152810), cljs.core.list(new cljs.core.Symbol(null, 
              "\x3d", "\x3d", -1640531466, null), cljs.core.list(new cljs.core.Symbol(null, "let", "let", -1640424492, null), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "schema", "schema", 1746448218, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "aka", "aka", 1014000873), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "cardinality", "cardinality", 1859117312), new cljs.core.Keyword(null, 
              "many", "many", 1017248209)], null)], null), new cljs.core.Symbol(null, "conn", "conn", -1637472027, null), cljs.core.list(new cljs.core.Symbol("d", "create-conn", "d/create-conn", 2114191435, null), new cljs.core.Symbol(null, "schema", "schema", 1746448218, null)), new cljs.core.Symbol(null, "seen", "seen", -1637005260, null), cljs.core.list(new cljs.core.Symbol(null, "atom", "atom", -1637526774, null), 0), new cljs.core.Symbol(null, "key", "key", -1640425448, null), cljs.core.list(new cljs.core.Symbol("d", 
              "listen!", "d/listen!", -1458553240, null), new cljs.core.Symbol(null, "conn", "conn", -1637472027, null), new cljs.core.Keyword(null, "test", "test", 1017460740), cljs.core.list(new cljs.core.Symbol(null, "fn", "fn", -1640528255, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "report", "report", 1719914221, null)], null), cljs.core.list(new cljs.core.Symbol(null, "println", "println", -1955249496, null), "Listen heard report: ", 
              new cljs.core.Symbol(null, "report", "report", 1719914221, null)), cljs.core.list(new cljs.core.Symbol(null, "swap!", "swap!", -1530684761, null), new cljs.core.Symbol(null, "seen", "seen", -1637005260, null), new cljs.core.Symbol(null, "inc", "inc", -1640427113, null)), cljs.core.list(new cljs.core.Symbol(null, "when", "when", -1636883213, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", 
              "clojure.core/deref", -564909588, null), new cljs.core.Symbol(null, "seen", "seen", -1637005260, null)), 2), cljs.core.list(new cljs.core.Symbol(null, "done", "done", -1637442245, null)))))], null), cljs.core.list(new cljs.core.Symbol(null, "println", "println", -1955249496, null), "RES:", cljs.core.list(new cljs.core.Symbol("d", "transact!", "d/transact!", -588018899, null), new cljs.core.Symbol(null, "conn", "conn", -1637472027, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
              [new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword("db", "id", "db/id", 1014111942), -1, new cljs.core.Keyword(null, "name", "name", 1017277949), "Maksim", new cljs.core.Keyword(null, "age", "age", 1014000753), 45, new cljs.core.Keyword(null, "aka", "aka", 1014000873), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Maks Otto von Stirlitz", "Jack Ryan"], null)], null)], null))), cljs.core.list(new cljs.core.Symbol(null, "println", "println", 
              -1955249496, null), "inc RES:", cljs.core.list(new cljs.core.Symbol("d", "transact!", "d/transact!", -588018899, null), new cljs.core.Symbol(null, "conn", "conn", -1637472027, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword("db", "id", "db/id", 1014111942), -2, new cljs.core.Keyword(null, "name", "name", 1017277949), "Bruce Wayne", new cljs.core.Keyword(null, "age", "age", 1014000753), 
              35, new cljs.core.Keyword(null, "aka", "aka", 1014000873), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Batman"], null)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db.fn", "call", "db.fn/call", 2901959894), new cljs.core.Symbol(null, "inc-age", "inc-age", 300146761, null), "Maksim"], null)], null))), cljs.core.list(new cljs.core.Symbol("d", "q", "d/q", -1640525017, null), cljs.core.list(new cljs.core.Symbol(null, 
              "quote", "quote", -1532577739, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "find", "find", 1017047339), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?n", "?n", -1640529464, null), new cljs.core.Symbol(null, "?a", "?a", -1640529477, null)], null), new cljs.core.Keyword(null, "where", "where", 1127002201), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, 
              [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?e", "?e", -1640529473, null), new cljs.core.Keyword(null, "aka", "aka", 1014000873), "Maks Otto von Stirlitz"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?e", "?e", -1640529473, null), new cljs.core.Keyword(null, "name", "name", 1017277949), new cljs.core.Symbol(null, "?n", "?n", -1640529464, null)], 
              null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?e", "?e", -1640529473, null), new cljs.core.Keyword(null, "age", "age", 1014000753), new cljs.core.Symbol(null, "?a", "?a", -1640529477, null)], null)], null)], null)), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", -564909588, null), new cljs.core.Symbol(null, "conn", "conn", -1637472027, null)))), cljs.core.PersistentHashSet.fromArray([new cljs.core.PersistentVector(null, 
              2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Maksim", 46], null)], true))], null));
            } else {
              cemerick.cljs.test.do_report.call(null, _test_ctx__$1, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "actual", "actual", 3885931776), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), values__20365__auto__)), new cljs.core.Symbol(null, "not", "not", -1640422260, null)), new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, 
              "fail", "fail", 1017039504), new cljs.core.Keyword(null, "message", "message", 1968829305), null, new cljs.core.Keyword(null, "expected", "expected", 3373152810), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), cljs.core.list(new cljs.core.Symbol(null, "let", "let", -1640424492, null), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "schema", "schema", 1746448218, null), new cljs.core.PersistentArrayMap(null, 
              1, [new cljs.core.Keyword(null, "aka", "aka", 1014000873), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "cardinality", "cardinality", 1859117312), new cljs.core.Keyword(null, "many", "many", 1017248209)], null)], null), new cljs.core.Symbol(null, "conn", "conn", -1637472027, null), cljs.core.list(new cljs.core.Symbol("d", "create-conn", "d/create-conn", 2114191435, null), new cljs.core.Symbol(null, "schema", "schema", 1746448218, null)), new cljs.core.Symbol(null, 
              "seen", "seen", -1637005260, null), cljs.core.list(new cljs.core.Symbol(null, "atom", "atom", -1637526774, null), 0), new cljs.core.Symbol(null, "key", "key", -1640425448, null), cljs.core.list(new cljs.core.Symbol("d", "listen!", "d/listen!", -1458553240, null), new cljs.core.Symbol(null, "conn", "conn", -1637472027, null), new cljs.core.Keyword(null, "test", "test", 1017460740), cljs.core.list(new cljs.core.Symbol(null, "fn", "fn", -1640528255, null), new cljs.core.PersistentVector(null, 
              1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "report", "report", 1719914221, null)], null), cljs.core.list(new cljs.core.Symbol(null, "println", "println", -1955249496, null), "Listen heard report: ", new cljs.core.Symbol(null, "report", "report", 1719914221, null)), cljs.core.list(new cljs.core.Symbol(null, "swap!", "swap!", -1530684761, null), new cljs.core.Symbol(null, "seen", "seen", -1637005260, null), new cljs.core.Symbol(null, "inc", "inc", -1640427113, 
              null)), cljs.core.list(new cljs.core.Symbol(null, "when", "when", -1636883213, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", -564909588, null), new cljs.core.Symbol(null, "seen", "seen", -1637005260, null)), 2), cljs.core.list(new cljs.core.Symbol(null, "done", "done", -1637442245, null)))))], null), cljs.core.list(new cljs.core.Symbol(null, "println", "println", 
              -1955249496, null), "RES:", cljs.core.list(new cljs.core.Symbol("d", "transact!", "d/transact!", -588018899, null), new cljs.core.Symbol(null, "conn", "conn", -1637472027, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword("db", "id", "db/id", 1014111942), -1, new cljs.core.Keyword(null, "name", "name", 1017277949), "Maksim", new cljs.core.Keyword(null, "age", "age", 1014000753), 
              45, new cljs.core.Keyword(null, "aka", "aka", 1014000873), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Maks Otto von Stirlitz", "Jack Ryan"], null)], null)], null))), cljs.core.list(new cljs.core.Symbol(null, "println", "println", -1955249496, null), "inc RES:", cljs.core.list(new cljs.core.Symbol("d", "transact!", "d/transact!", -588018899, null), new cljs.core.Symbol(null, "conn", "conn", -1637472027, null), new cljs.core.PersistentVector(null, 
              2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword("db", "id", "db/id", 1014111942), -2, new cljs.core.Keyword(null, "name", "name", 1017277949), "Bruce Wayne", new cljs.core.Keyword(null, "age", "age", 1014000753), 35, new cljs.core.Keyword(null, "aka", "aka", 1014000873), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Batman"], null)], null), new cljs.core.PersistentVector(null, 3, 5, 
              cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db.fn", "call", "db.fn/call", 2901959894), new cljs.core.Symbol(null, "inc-age", "inc-age", 300146761, null), "Maksim"], null)], null))), cljs.core.list(new cljs.core.Symbol("d", "q", "d/q", -1640525017, null), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", -1532577739, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "find", "find", 1017047339), new cljs.core.PersistentVector(null, 
              2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?n", "?n", -1640529464, null), new cljs.core.Symbol(null, "?a", "?a", -1640529477, null)], null), new cljs.core.Keyword(null, "where", "where", 1127002201), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?e", "?e", -1640529473, null), new cljs.core.Keyword(null, "aka", 
              "aka", 1014000873), "Maks Otto von Stirlitz"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?e", "?e", -1640529473, null), new cljs.core.Keyword(null, "name", "name", 1017277949), new cljs.core.Symbol(null, "?n", "?n", -1640529464, null)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?e", "?e", -1640529473, null), new cljs.core.Keyword(null, 
              "age", "age", 1014000753), new cljs.core.Symbol(null, "?a", "?a", -1640529477, null)], null)], null)], null)), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", -564909588, null), new cljs.core.Symbol(null, "conn", "conn", -1637472027, null)))), cljs.core.PersistentHashSet.fromArray([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Maksim", 46], null)], true))], null));
            }
            return result__20366__auto__;
          } catch (e20601) {
            if (e20601 instanceof Error) {
              var t__20402__auto__ = e20601;
              return cemerick.cljs.test.do_report.call(null, _test_ctx__$1, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "actual", "actual", 3885931776), t__20402__auto__, new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "error", "error", 1110689146), new cljs.core.Keyword(null, "message", "message", 1968829305), null, new cljs.core.Keyword(null, "expected", "expected", 3373152810), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", 
              -1640531466, null), cljs.core.list(new cljs.core.Symbol(null, "let", "let", -1640424492, null), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "schema", "schema", 1746448218, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "aka", "aka", 1014000873), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "cardinality", "cardinality", 1859117312), new cljs.core.Keyword(null, "many", 
              "many", 1017248209)], null)], null), new cljs.core.Symbol(null, "conn", "conn", -1637472027, null), cljs.core.list(new cljs.core.Symbol("d", "create-conn", "d/create-conn", 2114191435, null), new cljs.core.Symbol(null, "schema", "schema", 1746448218, null)), new cljs.core.Symbol(null, "seen", "seen", -1637005260, null), cljs.core.list(new cljs.core.Symbol(null, "atom", "atom", -1637526774, null), 0), new cljs.core.Symbol(null, "key", "key", -1640425448, null), cljs.core.list(new cljs.core.Symbol("d", 
              "listen!", "d/listen!", -1458553240, null), new cljs.core.Symbol(null, "conn", "conn", -1637472027, null), new cljs.core.Keyword(null, "test", "test", 1017460740), cljs.core.list(new cljs.core.Symbol(null, "fn", "fn", -1640528255, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "report", "report", 1719914221, null)], null), cljs.core.list(new cljs.core.Symbol(null, "println", "println", -1955249496, null), "Listen heard report: ", 
              new cljs.core.Symbol(null, "report", "report", 1719914221, null)), cljs.core.list(new cljs.core.Symbol(null, "swap!", "swap!", -1530684761, null), new cljs.core.Symbol(null, "seen", "seen", -1637005260, null), new cljs.core.Symbol(null, "inc", "inc", -1640427113, null)), cljs.core.list(new cljs.core.Symbol(null, "when", "when", -1636883213, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", 
              "clojure.core/deref", -564909588, null), new cljs.core.Symbol(null, "seen", "seen", -1637005260, null)), 2), cljs.core.list(new cljs.core.Symbol(null, "done", "done", -1637442245, null)))))], null), cljs.core.list(new cljs.core.Symbol(null, "println", "println", -1955249496, null), "RES:", cljs.core.list(new cljs.core.Symbol("d", "transact!", "d/transact!", -588018899, null), new cljs.core.Symbol(null, "conn", "conn", -1637472027, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
              [new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword("db", "id", "db/id", 1014111942), -1, new cljs.core.Keyword(null, "name", "name", 1017277949), "Maksim", new cljs.core.Keyword(null, "age", "age", 1014000753), 45, new cljs.core.Keyword(null, "aka", "aka", 1014000873), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Maks Otto von Stirlitz", "Jack Ryan"], null)], null)], null))), cljs.core.list(new cljs.core.Symbol(null, "println", "println", 
              -1955249496, null), "inc RES:", cljs.core.list(new cljs.core.Symbol("d", "transact!", "d/transact!", -588018899, null), new cljs.core.Symbol(null, "conn", "conn", -1637472027, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword("db", "id", "db/id", 1014111942), -2, new cljs.core.Keyword(null, "name", "name", 1017277949), "Bruce Wayne", new cljs.core.Keyword(null, "age", "age", 1014000753), 
              35, new cljs.core.Keyword(null, "aka", "aka", 1014000873), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Batman"], null)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db.fn", "call", "db.fn/call", 2901959894), new cljs.core.Symbol(null, "inc-age", "inc-age", 300146761, null), "Maksim"], null)], null))), cljs.core.list(new cljs.core.Symbol("d", "q", "d/q", -1640525017, null), cljs.core.list(new cljs.core.Symbol(null, 
              "quote", "quote", -1532577739, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "find", "find", 1017047339), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?n", "?n", -1640529464, null), new cljs.core.Symbol(null, "?a", "?a", -1640529477, null)], null), new cljs.core.Keyword(null, "where", "where", 1127002201), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, 
              [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?e", "?e", -1640529473, null), new cljs.core.Keyword(null, "aka", "aka", 1014000873), "Maks Otto von Stirlitz"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?e", "?e", -1640529473, null), new cljs.core.Keyword(null, "name", "name", 1017277949), new cljs.core.Symbol(null, "?n", "?n", -1640529464, null)], 
              null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?e", "?e", -1640529473, null), new cljs.core.Keyword(null, "age", "age", 1014000753), new cljs.core.Symbol(null, "?a", "?a", -1640529477, null)], null)], null)], null)), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", -564909588, null), new cljs.core.Symbol(null, "conn", "conn", -1637472027, null)))), cljs.core.PersistentHashSet.fromArray([new cljs.core.PersistentVector(null, 
              2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Maksim", 46], null)], true))], null));
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e20601;
              } else {
                return null;
              }
            }
          }
        } catch (e20600) {
          if (e20600 instanceof Error) {
            var e__20346__auto__ = e20600;
            if (cljs.core.truth_(async_QMARK___20345__auto____$1)) {
              return cemerick.cljs.test.done_STAR_.call(null, _test_ctx__$1, e__20346__auto__);
            } else {
              throw e__20346__auto__;
            }
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              throw e20600;
            } else {
              return null;
            }
          }
        }
      } finally {
        cemerick.cljs.test._STAR_test_ctx_STAR_ = _STAR_test_ctx_STAR_20599;
      }
    } catch (e20598) {
      if (e20598 instanceof Error) {
        var e__20346__auto__ = e20598;
        if (cljs.core.truth_(async_QMARK___20345__auto__)) {
          return cemerick.cljs.test.done_STAR_.call(null, _test_ctx, e__20346__auto__);
        } else {
          throw e__20346__auto__;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw e20598;
        } else {
          return null;
        }
      }
    }
  } finally {
    cemerick.cljs.test._STAR_test_ctx_STAR_ = _STAR_test_ctx_STAR_20597;
  }
}, new cljs.core.Keyword(null, "name", "name", 1017277949), cljs.core.with_meta.call(null, new cljs.core.Symbol("clj-crud.datascript-test", "hello-world", "clj-crud.datascript-test/hello-world", -818648401, null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "async", "async", 1107031534), true, new cljs.core.Keyword(null, "line", "line", 1017226086), 19, new cljs.core.Keyword(null, "column", "column", 3954034376), 18, new cljs.core.Keyword(null, "end-line", "end-line", 2693041432), 
19, new cljs.core.Keyword(null, "end-column", "end-column", 3799845882), 29], null))], null)));
cemerick.cljs.test.register_test_BANG_.call(null, new cljs.core.Symbol(null, "clj-crud.datascript-test", "clj-crud.datascript-test", -344651105, null), new cljs.core.Symbol("clj-crud.datascript-test", "hello-world", "clj-crud.datascript-test/hello-world", -818648401, null), clj_crud.datascript_test.hello_world);
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose;
goog.disposable.IDisposable.prototype.isDisposed;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
    this.creationStack = (new Error).stack;
    goog.Disposable.instances_[goog.getUid(this)] = this;
  }
};
goog.Disposable.MonitoringMode = {OFF:0, PERMANENT:1, INTERACTIVE:2};
goog.Disposable.MONITORING_MODE = 0;
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for (var id in goog.Disposable.instances_) {
    if (goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)]);
    }
  }
  return ret;
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {};
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.onDisposeCallbacks_;
goog.Disposable.prototype.creationStack;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_;
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if (!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
      var uid = goog.getUid(this);
      if (goog.Disposable.MONITORING_MODE == goog.Disposable.MonitoringMode.PERMANENT && !goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid];
    }
  }
};
goog.Disposable.prototype.registerDisposable = function(disposable) {
  this.addOnDisposeCallback(goog.partial(goog.dispose, disposable));
};
goog.Disposable.prototype.addOnDisposeCallback = function(callback, opt_scope) {
  if (!this.onDisposeCallbacks_) {
    this.onDisposeCallbacks_ = [];
  }
  this.onDisposeCallbacks_.push(goog.bind(callback, opt_scope));
};
goog.Disposable.prototype.disposeInternal = function() {
  if (this.onDisposeCallbacks_) {
    while (this.onDisposeCallbacks_.length) {
      this.onDisposeCallbacks_.shift()();
    }
  }
};
goog.Disposable.isDisposed = function(obj) {
  if (obj && typeof obj.isDisposed == "function") {
    return obj.isDisposed();
  }
  return false;
};
goog.dispose = function(obj) {
  if (obj && typeof obj.dispose == "function") {
    obj.dispose();
  }
};
goog.disposeAll = function(var_args) {
  for (var i = 0, len = arguments.length;i < len;++i) {
    var disposable = arguments[i];
    if (goog.isArrayLike(disposable)) {
      goog.disposeAll.apply(null, disposable);
    } else {
      goog.dispose(disposable);
    }
  }
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if (goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for (var i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]));
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor);
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  monitors.length--;
};
goog.provide("goog.debug.errorHandlerWeakDep");
goog.debug.errorHandlerWeakDep = {protectEntryPoint:function(fn, opt_tracers) {
  return fn;
}};
goog.provide("goog.userAgent");
goog.require("goog.string");
goog.userAgent.ASSUME_IE = false;
goog.userAgent.ASSUME_GECKO = false;
goog.userAgent.ASSUME_WEBKIT = false;
goog.userAgent.ASSUME_MOBILE_WEBKIT = false;
goog.userAgent.ASSUME_OPERA = false;
goog.userAgent.ASSUME_ANY_VERSION = false;
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || (goog.userAgent.ASSUME_GECKO || (goog.userAgent.ASSUME_MOBILE_WEBKIT || (goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA)));
goog.userAgent.getUserAgentString = function() {
  return goog.global["navigator"] ? goog.global["navigator"].userAgent : null;
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"];
};
goog.userAgent.init_ = function() {
  goog.userAgent.detectedOpera_ = false;
  goog.userAgent.detectedIe_ = false;
  goog.userAgent.detectedWebkit_ = false;
  goog.userAgent.detectedMobile_ = false;
  goog.userAgent.detectedGecko_ = false;
  var ua;
  if (!goog.userAgent.BROWSER_KNOWN_ && (ua = goog.userAgent.getUserAgentString())) {
    var navigator = goog.userAgent.getNavigator();
    goog.userAgent.detectedOpera_ = ua.indexOf("Opera") == 0;
    goog.userAgent.detectedIe_ = !goog.userAgent.detectedOpera_ && ua.indexOf("MSIE") != -1;
    goog.userAgent.detectedWebkit_ = !goog.userAgent.detectedOpera_ && ua.indexOf("WebKit") != -1;
    goog.userAgent.detectedMobile_ = goog.userAgent.detectedWebkit_ && ua.indexOf("Mobile") != -1;
    goog.userAgent.detectedGecko_ = !goog.userAgent.detectedOpera_ && (!goog.userAgent.detectedWebkit_ && navigator.product == "Gecko");
  }
};
if (!goog.userAgent.BROWSER_KNOWN_) {
  goog.userAgent.init_();
}
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.userAgent.detectedOpera_;
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.userAgent.detectedIe_;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.userAgent.detectedGecko_;
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.userAgent.detectedWebkit_;
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.detectedMobile_;
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || "";
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.userAgent.ASSUME_MAC = false;
goog.userAgent.ASSUME_WINDOWS = false;
goog.userAgent.ASSUME_LINUX = false;
goog.userAgent.ASSUME_X11 = false;
goog.userAgent.ASSUME_ANDROID = false;
goog.userAgent.ASSUME_IPHONE = false;
goog.userAgent.ASSUME_IPAD = false;
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || (goog.userAgent.ASSUME_WINDOWS || (goog.userAgent.ASSUME_LINUX || (goog.userAgent.ASSUME_X11 || (goog.userAgent.ASSUME_ANDROID || (goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD)))));
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11");
  var ua = goog.userAgent.getUserAgentString();
  goog.userAgent.detectedAndroid_ = !!ua && ua.indexOf("Android") >= 0;
  goog.userAgent.detectedIPhone_ = !!ua && ua.indexOf("iPhone") >= 0;
  goog.userAgent.detectedIPad_ = !!ua && ua.indexOf("iPad") >= 0;
};
if (!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_();
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_ANDROID : goog.userAgent.detectedAndroid_;
goog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE : goog.userAgent.detectedIPhone_;
goog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPAD : goog.userAgent.detectedIPad_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if (goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    version = typeof operaVersion == "function" ? operaVersion() : operaVersion;
  } else {
    if (goog.userAgent.GECKO) {
      re = /rv\:([^\);]+)(\)|;)/;
    } else {
      if (goog.userAgent.IE) {
        re = /MSIE\s+([^\);]+)(\)|;)/;
      } else {
        if (goog.userAgent.WEBKIT) {
          re = /WebKit\/(\S+)/;
        }
      }
    }
    if (re) {
      var arr = re.exec(goog.userAgent.getUserAgentString());
      version = arr ? arr[1] : "";
    }
  }
  if (goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if (docMode > parseFloat(version)) {
      return String(docMode);
    }
  }
  return version;
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined;
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2);
};
goog.userAgent.isVersionCache_ = {};
goog.userAgent.isVersion = function(version) {
  return goog.userAgent.ASSUME_ANY_VERSION || (goog.userAgent.isVersionCache_[version] || (goog.userAgent.isVersionCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0));
};
goog.userAgent.isDocumentMode = function(documentMode) {
  return goog.userAgent.IE && goog.userAgent.DOCUMENT_MODE >= documentMode;
};
goog.userAgent.DOCUMENT_MODE = function() {
  var doc = goog.global["document"];
  if (!doc || !goog.userAgent.IE) {
    return undefined;
  }
  var mode = goog.userAgent.getDocumentMode_();
  return mode || (doc["compatMode"] == "CSS1Compat" ? parseInt(goog.userAgent.VERSION, 10) : 5);
}();
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), HAS_W3C_EVENT_SUPPORT:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersion("9"), HAS_NAVIGATOR_ONLINE_PROPERTY:!goog.userAgent.WEBKIT || goog.userAgent.isVersion("528"), HAS_HTML5_NETWORK_EVENT_SUPPORT:goog.userAgent.GECKO && goog.userAgent.isVersion("1.9b") || (goog.userAgent.IE && goog.userAgent.isVersion("8") || (goog.userAgent.OPERA && 
goog.userAgent.isVersion("9.5") || goog.userAgent.WEBKIT && goog.userAgent.isVersion("528"))), HTML5_NETWORK_EVENTS_FIRE_ON_BODY:goog.userAgent.GECKO && !goog.userAgent.isVersion("8") || goog.userAgent.IE && !goog.userAgent.isVersion("9"), TOUCH_ENABLED:"ontouchstart" in goog.global || (!!(goog.global["document"] && (document.documentElement && "ontouchstart" in document.documentElement)) || !!(goog.global["navigator"] && goog.global["navigator"]["msMaxTouchPoints"]))};
goog.provide("goog.events.Event");
goog.provide("goog.events.EventLike");
goog.require("goog.Disposable");
goog.events.EventLike;
goog.events.Event = function(type, opt_target) {
  this.type = type;
  this.target = opt_target;
  this.currentTarget = this.target;
};
goog.events.Event.prototype.disposeInternal = function() {
};
goog.events.Event.prototype.dispose = function() {
};
goog.events.Event.prototype.propagationStopped_ = false;
goog.events.Event.prototype.defaultPrevented = false;
goog.events.Event.prototype.returnValue_ = true;
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true;
};
goog.events.Event.prototype.preventDefault = function() {
  this.defaultPrevented = true;
  this.returnValue_ = false;
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation();
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault();
};
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.EventType = {CLICK:"click", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", SELECTSTART:"selectstart", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", CHANGE:"change", SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", 
DRAGSTART:"dragstart", DRAG:"drag", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", DRAGEND:"dragend", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", BEFOREUNLOAD:"beforeunload", CONTEXTMENU:"contextmenu", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", 
POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", BEFORECOPY:"beforecopy", BEFORECUT:"beforecut", BEFOREPASTE:"beforepaste", ONLINE:"online", OFFLINE:"offline", MESSAGE:"message", CONNECT:"connect", TRANSITIONEND:goog.userAgent.WEBKIT ? "webkitTransitionEnd" : goog.userAgent.OPERA ? "oTransitionEnd" : "transitionend", MSGESTURECHANGE:"MSGestureChange", MSGESTUREEND:"MSGestureEnd", MSGESTUREHOLD:"MSGestureHold", MSGESTURESTART:"MSGestureStart", MSGESTURETAP:"MSGestureTap", MSGOTPOINTERCAPTURE:"MSGotPointerCapture", 
MSINERTIASTART:"MSInertiaStart", MSLOSTPOINTERCAPTURE:"MSLostPointerCapture", MSPOINTERCANCEL:"MSPointerCancel", MSPOINTERDOWN:"MSPointerDown", MSPOINTERMOVE:"MSPointerMove", MSPOINTEROVER:"MSPointerOver", MSPOINTEROUT:"MSPointerOut", MSPOINTERUP:"MSPointerUp", TEXTINPUT:"textinput", COMPOSITIONSTART:"compositionstart", COMPOSITIONUPDATE:"compositionupdate", COMPOSITIONEND:"compositionend"};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object;
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x;
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    goog.reflect.sinkValue(obj[prop]);
    return true;
  } catch (e) {
  }
  return false;
};
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  if (opt_e) {
    this.init(opt_e, opt_currentTarget);
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.target = null;
goog.events.BrowserEvent.prototype.currentTarget;
goog.events.BrowserEvent.prototype.relatedTarget = null;
goog.events.BrowserEvent.prototype.offsetX = 0;
goog.events.BrowserEvent.prototype.offsetY = 0;
goog.events.BrowserEvent.prototype.clientX = 0;
goog.events.BrowserEvent.prototype.clientY = 0;
goog.events.BrowserEvent.prototype.screenX = 0;
goog.events.BrowserEvent.prototype.screenY = 0;
goog.events.BrowserEvent.prototype.button = 0;
goog.events.BrowserEvent.prototype.keyCode = 0;
goog.events.BrowserEvent.prototype.charCode = 0;
goog.events.BrowserEvent.prototype.ctrlKey = false;
goog.events.BrowserEvent.prototype.altKey = false;
goog.events.BrowserEvent.prototype.shiftKey = false;
goog.events.BrowserEvent.prototype.metaKey = false;
goog.events.BrowserEvent.prototype.state;
goog.events.BrowserEvent.prototype.platformModifierKey = false;
goog.events.BrowserEvent.prototype.event_ = null;
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  goog.events.Event.call(this, type);
  this.target = (e.target) || e.srcElement;
  this.currentTarget = (opt_currentTarget);
  var relatedTarget = (e.relatedTarget);
  if (relatedTarget) {
    if (goog.userAgent.GECKO) {
      if (!goog.reflect.canAccessProperty(relatedTarget, "nodeName")) {
        relatedTarget = null;
      }
    }
  } else {
    if (type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement;
    } else {
      if (type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement;
      }
    }
  }
  this.relatedTarget = relatedTarget;
  this.offsetX = goog.userAgent.WEBKIT || e.offsetX !== undefined ? e.offsetX : e.layerX;
  this.offsetY = goog.userAgent.WEBKIT || e.offsetY !== undefined ? e.offsetY : e.layerY;
  this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
  this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
  this.screenX = e.screenX || 0;
  this.screenY = e.screenY || 0;
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  if (e.defaultPrevented) {
    this.preventDefault();
  }
  delete this.propagationStopped_;
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if (!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if (this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT;
    } else {
      return!!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button]);
    }
  } else {
    return this.event_.button == button;
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && (goog.userAgent.MAC && this.ctrlKey));
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if (this.event_.stopPropagation) {
    this.event_.stopPropagation();
  } else {
    this.event_.cancelBubble = true;
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if (!be.preventDefault) {
    be.returnValue = false;
    if (goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if (be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1;
        }
      } catch (ex) {
      }
    }
  } else {
    be.preventDefault();
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_;
};
goog.events.BrowserEvent.prototype.disposeInternal = function() {
};
goog.provide("goog.events.EventWrapper");
goog.events.EventWrapper = function() {
};
goog.events.EventWrapper.prototype.listen = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.events.EventWrapper.prototype.unlisten = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.provide("goog.events.Listenable");
goog.provide("goog.events.ListenableKey");
goog.require("goog.events.EventLike");
goog.events.Listenable = function() {
};
goog.events.Listenable.USE_LISTENABLE_INTERFACE = false;
goog.events.Listenable.IMPLEMENTED_BY_PROP_ = "__closure_listenable";
goog.events.Listenable.addImplementation = function(cls) {
  cls.prototype[goog.events.Listenable.IMPLEMENTED_BY_PROP_] = true;
};
goog.events.Listenable.isImplementedBy = function(obj) {
  return!!(obj && obj[goog.events.Listenable.IMPLEMENTED_BY_PROP_]);
};
goog.events.Listenable.prototype.listen;
goog.events.Listenable.prototype.listenOnce;
goog.events.Listenable.prototype.unlisten;
goog.events.Listenable.prototype.unlistenByKey;
goog.events.Listenable.prototype.dispatchEvent;
goog.events.Listenable.prototype.removeAllListeners;
goog.events.Listenable.prototype.fireListeners;
goog.events.Listenable.prototype.getListeners;
goog.events.Listenable.prototype.getListener;
goog.events.Listenable.prototype.hasListener;
goog.events.ListenableKey = function() {
};
goog.events.ListenableKey.counter_ = 0;
goog.events.ListenableKey.reserveKey = function() {
  return++goog.events.ListenableKey.counter_;
};
goog.events.ListenableKey.prototype.src;
goog.events.ListenableKey.prototype.type;
goog.events.ListenableKey.prototype.listener;
goog.events.ListenableKey.prototype.capture;
goog.events.ListenableKey.prototype.handler;
goog.events.ListenableKey.prototype.key;
goog.provide("goog.events.Listener");
goog.require("goog.events.ListenableKey");
goog.events.Listener = function() {
  if (goog.events.Listener.ENABLE_MONITORING) {
    this.creationStack = (new Error).stack;
  }
};
goog.events.Listener.ENABLE_MONITORING = false;
goog.events.Listener.prototype.isFunctionListener_;
goog.events.Listener.prototype.listener;
goog.events.Listener.prototype.proxy;
goog.events.Listener.prototype.src;
goog.events.Listener.prototype.type;
goog.events.Listener.prototype.capture;
goog.events.Listener.prototype.handler;
goog.events.Listener.prototype.key = 0;
goog.events.Listener.prototype.removed = false;
goog.events.Listener.prototype.callOnce = false;
goog.events.Listener.prototype.creationStack;
goog.events.Listener.prototype.init = function(listener, proxy, src, type, capture, opt_handler) {
  if (goog.isFunction(listener)) {
    this.isFunctionListener_ = true;
  } else {
    if (listener && (listener.handleEvent && goog.isFunction(listener.handleEvent))) {
      this.isFunctionListener_ = false;
    } else {
      throw Error("Invalid listener argument");
    }
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.callOnce = false;
  this.key = goog.events.ListenableKey.reserveKey();
  this.removed = false;
};
goog.events.Listener.prototype.handleEvent = function(eventObject) {
  if (this.isFunctionListener_) {
    return this.listener.call(this.handler || this.src, eventObject);
  }
  return this.listener.handleEvent.call(this.listener, eventObject);
};
goog.provide("goog.events");
goog.provide("goog.events.Key");
goog.require("goog.array");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventWrapper");
goog.require("goog.events.Listenable");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.require("goog.userAgent");
goog.events.Key;
goog.events.ListenableType;
goog.events.listeners_ = {};
goog.events.listenerTree_ = {};
goog.events.sources_ = {};
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.keySeparator_ = "_";
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.listen(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  var listenableKey;
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(src)) {
    listenableKey = src.listen((type), goog.events.wrapListener_(listener), opt_capt, opt_handler);
  } else {
    listenableKey = goog.events.listen_((src), type, listener, false, opt_capt, opt_handler);
  }
  var key = listenableKey.key;
  goog.events.listeners_[key] = listenableKey;
  return key;
};
goog.events.listen_ = function(src, type, listener, callOnce, opt_capt, opt_handler) {
  if (!type) {
    throw Error("Invalid event type");
  }
  var capture = !!opt_capt;
  var map = goog.events.listenerTree_;
  if (!(type in map)) {
    map[type] = {count_:0, remaining_:0};
  }
  map = map[type];
  if (!(capture in map)) {
    map[capture] = {count_:0, remaining_:0};
    map.count_++;
  }
  map = map[capture];
  var srcUid = goog.getUid(src);
  var listenerArray, listenerObj;
  map.remaining_++;
  if (!map[srcUid]) {
    listenerArray = map[srcUid] = [];
    map.count_++;
  } else {
    listenerArray = map[srcUid];
    for (var i = 0;i < listenerArray.length;i++) {
      listenerObj = listenerArray[i];
      if (listenerObj.listener == listener && listenerObj.handler == opt_handler) {
        if (listenerObj.removed) {
          break;
        }
        if (!callOnce) {
          listenerArray[i].callOnce = false;
        }
        return listenerArray[i];
      }
    }
  }
  var proxy = goog.events.getProxy();
  listenerObj = new goog.events.Listener;
  listenerObj.init(listener, proxy, src, type, capture, opt_handler);
  listenerObj.callOnce = callOnce;
  proxy.src = src;
  proxy.listener = listenerObj;
  listenerArray.push(listenerObj);
  if (!goog.events.sources_[srcUid]) {
    goog.events.sources_[srcUid] = [];
  }
  goog.events.sources_[srcUid].push(listenerObj);
  if (src.addEventListener) {
    if (src == goog.global || !src.customEvent_) {
      src.addEventListener(type, proxy, capture);
    }
  } else {
    src.attachEvent(goog.events.getOnString_(type), proxy);
  }
  return listenerObj;
};
goog.events.getProxy = function() {
  var proxyCallbackFunction = goog.events.handleBrowserEvent_;
  var f = goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT ? function(eventObject) {
    return proxyCallbackFunction.call(f.src, f.listener, eventObject);
  } : function(eventObject) {
    var v = proxyCallbackFunction.call(f.src, f.listener, eventObject);
    if (!v) {
      return v;
    }
  };
  return f;
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  var listenableKey;
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(src)) {
    listenableKey = src.listenOnce((type), goog.events.wrapListener_(listener), opt_capt, opt_handler);
  } else {
    listenableKey = goog.events.listen_((src), type, listener, true, opt_capt, opt_handler);
  }
  var key = listenableKey.key;
  goog.events.listeners_[key] = listenableKey;
  return key;
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler);
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(src)) {
    return src.unlisten((type), goog.events.wrapListener_(listener), opt_capt, opt_handler);
  }
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if (!listenerArray) {
    return false;
  }
  for (var i = 0;i < listenerArray.length;i++) {
    if (listenerArray[i].listener == listener && (listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler)) {
      return goog.events.unlistenByKey(listenerArray[i].key);
    }
  }
  return false;
};
goog.events.unlistenByKey = function(key) {
  var listener = goog.events.listeners_[key];
  if (!listener) {
    return false;
  }
  if (listener.removed) {
    return false;
  }
  var src = listener.src;
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(src)) {
    return src.unlistenByKey(listener);
  }
  var type = listener.type;
  var proxy = listener.proxy;
  var capture = listener.capture;
  if (src.removeEventListener) {
    if (src == goog.global || !src.customEvent_) {
      src.removeEventListener(type, proxy, capture);
    }
  } else {
    if (src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy);
    }
  }
  var srcUid = goog.getUid(src);
  if (goog.events.sources_[srcUid]) {
    var sourcesArray = goog.events.sources_[srcUid];
    goog.array.remove(sourcesArray, listener);
    if (sourcesArray.length == 0) {
      delete goog.events.sources_[srcUid];
    }
  }
  listener.removed = true;
  var listenerArray = goog.events.listenerTree_[type][capture][srcUid];
  if (listenerArray) {
    listenerArray.needsCleanup_ = true;
    goog.events.cleanUp_(type, capture, srcUid, listenerArray);
  }
  delete goog.events.listeners_[key];
  return true;
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler);
};
goog.events.cleanUp = function(listenableKey) {
  delete goog.events.listeners_[listenableKey.key];
};
goog.events.cleanUp_ = function(type, capture, srcUid, listenerArray) {
  if (!listenerArray.locked_) {
    if (listenerArray.needsCleanup_) {
      for (var oldIndex = 0, newIndex = 0;oldIndex < listenerArray.length;oldIndex++) {
        if (listenerArray[oldIndex].removed) {
          var proxy = listenerArray[oldIndex].proxy;
          proxy.src = null;
          continue;
        }
        if (oldIndex != newIndex) {
          listenerArray[newIndex] = listenerArray[oldIndex];
        }
        newIndex++;
      }
      listenerArray.length = newIndex;
      listenerArray.needsCleanup_ = false;
      if (newIndex == 0) {
        delete goog.events.listenerTree_[type][capture][srcUid];
        goog.events.listenerTree_[type][capture].count_--;
        if (goog.events.listenerTree_[type][capture].count_ == 0) {
          delete goog.events.listenerTree_[type][capture];
          goog.events.listenerTree_[type].count_--;
        }
        if (goog.events.listenerTree_[type].count_ == 0) {
          delete goog.events.listenerTree_[type];
        }
      }
    }
  }
};
goog.events.removeAll = function(opt_obj, opt_type) {
  var count = 0;
  var noObj = opt_obj == null;
  var noType = opt_type == null;
  if (!noObj) {
    if (goog.events.Listenable.USE_LISTENABLE_INTERFACE && (opt_obj && goog.events.Listenable.isImplementedBy(opt_obj))) {
      return opt_obj.removeAllListeners(opt_type);
    }
    var srcUid = goog.getUid((opt_obj));
    if (goog.events.sources_[srcUid]) {
      var sourcesArray = goog.events.sources_[srcUid];
      for (var i = sourcesArray.length - 1;i >= 0;i--) {
        var listener = sourcesArray[i];
        if (noType || opt_type == listener.type) {
          goog.events.unlistenByKey(listener.key);
          count++;
        }
      }
    }
  } else {
    goog.object.forEach(goog.events.listeners_, function(listener, key) {
      goog.events.unlistenByKey(key);
      count++;
    });
  }
  return count;
};
goog.events.getListeners = function(obj, type, capture) {
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(obj)) {
    return obj.getListeners(type, capture);
  } else {
    return goog.events.getListeners_(obj, type, capture) || [];
  }
};
goog.events.getListeners_ = function(obj, type, capture) {
  var map = goog.events.listenerTree_;
  if (type in map) {
    map = map[type];
    if (capture in map) {
      map = map[capture];
      var objUid = goog.getUid(obj);
      if (map[objUid]) {
        return map[objUid];
      }
    }
  }
  return null;
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  var capture = !!opt_capt;
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(src)) {
    return src.getListener((type), goog.events.wrapListener_(listener), capture, opt_handler);
  }
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if (listenerArray) {
    for (var i = 0;i < listenerArray.length;i++) {
      if (!listenerArray[i].removed && (listenerArray[i].listener == listener && (listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler))) {
        return listenerArray[i];
      }
    }
  }
  return null;
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(obj)) {
    return obj.hasListener(opt_type, opt_capture);
  }
  var objUid = goog.getUid(obj);
  var listeners = goog.events.sources_[objUid];
  if (listeners) {
    var hasType = goog.isDef(opt_type);
    var hasCapture = goog.isDef(opt_capture);
    if (hasType && hasCapture) {
      var map = goog.events.listenerTree_[opt_type];
      return!!map && (!!map[opt_capture] && objUid in map[opt_capture]);
    } else {
      if (!(hasType || hasCapture)) {
        return true;
      } else {
        return goog.array.some(listeners, function(listener) {
          return hasType && listener.type == opt_type || hasCapture && listener.capture == opt_capture;
        });
      }
    }
  }
  return false;
};
goog.events.expose = function(e) {
  var str = [];
  for (var key in e) {
    if (e[key] && e[key].id) {
      str.push(key + " \x3d " + e[key] + " (" + e[key].id + ")");
    } else {
      str.push(key + " \x3d " + e[key]);
    }
  }
  return str.join("\n");
};
goog.events.getOnString_ = function(type) {
  if (type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type];
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type;
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(obj)) {
    return obj.fireListeners(type, capture, eventObject);
  }
  var map = goog.events.listenerTree_;
  if (type in map) {
    map = map[type];
    if (capture in map) {
      return goog.events.fireListeners_(map[capture], obj, type, capture, eventObject);
    }
  }
  return true;
};
goog.events.fireListeners_ = function(map, obj, type, capture, eventObject) {
  var retval = 1;
  var objUid = goog.getUid(obj);
  if (map[objUid]) {
    var remaining = --map.remaining_;
    var listenerArray = map[objUid];
    if (!listenerArray.locked_) {
      listenerArray.locked_ = 1;
    } else {
      listenerArray.locked_++;
    }
    try {
      var length = listenerArray.length;
      for (var i = 0;i < length;i++) {
        var listener = listenerArray[i];
        if (listener && !listener.removed) {
          retval &= goog.events.fireListener(listener, eventObject) !== false;
        }
      }
    } finally {
      map.remaining_ = Math.max(remaining, map.remaining_);
      listenerArray.locked_--;
      goog.events.cleanUp_(type, capture, objUid, listenerArray);
    }
  }
  return Boolean(retval);
};
goog.events.fireListener = function(listener, eventObject) {
  if (listener.callOnce) {
    goog.events.unlistenByKey(listener.key);
  }
  return listener.handleEvent(eventObject);
};
goog.events.getTotalListenerCount = function() {
  return goog.object.getCount(goog.events.listeners_);
};
goog.events.dispatchEvent = function(src, e) {
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
    return src.dispatchEvent(e);
  }
  var type = e.type || e;
  var map = goog.events.listenerTree_;
  if (!(type in map)) {
    return true;
  }
  if (goog.isString(e)) {
    e = new goog.events.Event(e, src);
  } else {
    if (!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event((type), src);
      goog.object.extend(e, oldEvent);
    } else {
      e.target = e.target || src;
    }
  }
  var rv = 1, ancestors;
  map = map[type];
  var hasCapture = true in map;
  var targetsMap;
  if (hasCapture) {
    ancestors = [];
    for (var parent = src;parent;parent = parent.getParentEventTarget()) {
      ancestors.push(parent);
    }
    targetsMap = map[true];
    targetsMap.remaining_ = targetsMap.count_;
    for (var i = ancestors.length - 1;!e.propagationStopped_ && (i >= 0 && targetsMap.remaining_);i--) {
      e.currentTarget = ancestors[i];
      rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, true, e) && e.returnValue_ != false;
    }
  }
  var hasBubble = false in map;
  if (hasBubble) {
    targetsMap = map[false];
    targetsMap.remaining_ = targetsMap.count_;
    if (hasCapture) {
      for (var i = 0;!e.propagationStopped_ && (i < ancestors.length && targetsMap.remaining_);i++) {
        e.currentTarget = ancestors[i];
        rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, false, e) && e.returnValue_ != false;
      }
    } else {
      for (var current = src;!e.propagationStopped_ && (current && targetsMap.remaining_);current = current.getParentEventTarget()) {
        e.currentTarget = current;
        rv &= goog.events.fireListeners_(targetsMap, current, e.type, false, e) && e.returnValue_ != false;
      }
    }
  }
  return Boolean(rv);
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_);
};
goog.events.handleBrowserEvent_ = function(listener, opt_evt) {
  if (listener.removed) {
    return true;
  }
  var type = listener.type;
  var map = goog.events.listenerTree_;
  if (!(type in map)) {
    return true;
  }
  map = map[type];
  var retval, targetsMap;
  if (!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    var ieEvent = opt_evt || (goog.getObjectByName("window.event"));
    var hasCapture = true in map;
    var hasBubble = false in map;
    if (hasCapture) {
      if (goog.events.isMarkedIeEvent_(ieEvent)) {
        return true;
      }
      goog.events.markIeEvent_(ieEvent);
    }
    var evt = new goog.events.BrowserEvent;
    evt.init(ieEvent, (this));
    retval = true;
    try {
      if (hasCapture) {
        var ancestors = [];
        for (var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent);
        }
        targetsMap = map[true];
        targetsMap.remaining_ = targetsMap.count_;
        for (var i = ancestors.length - 1;!evt.propagationStopped_ && (i >= 0 && targetsMap.remaining_);i--) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, true, evt);
        }
        if (hasBubble) {
          targetsMap = map[false];
          targetsMap.remaining_ = targetsMap.count_;
          for (var i = 0;!evt.propagationStopped_ && (i < ancestors.length && targetsMap.remaining_);i++) {
            evt.currentTarget = ancestors[i];
            retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, false, evt);
          }
        }
      } else {
        retval = goog.events.fireListener(listener, evt);
      }
    } finally {
      if (ancestors) {
        ancestors.length = 0;
      }
    }
    return retval;
  }
  var be = new goog.events.BrowserEvent(opt_evt, (this));
  retval = goog.events.fireListener(listener, be);
  return retval;
};
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if (e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return;
    } catch (ex) {
      useReturnValue = true;
    }
  }
  if (useReturnValue || (e.returnValue) == undefined) {
    e.returnValue = true;
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined;
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++;
};
goog.events.LISTENER_WRAPPER_PROP_ = "__closure_events_fn_" + (Math.random() * 1E9 >>> 0);
goog.events.wrapListener_ = function(listener) {
  if (goog.isFunction(listener)) {
    return listener;
  }
  return listener[goog.events.LISTENER_WRAPPER_PROP_] || (listener[goog.events.LISTENER_WRAPPER_PROP_] = function(e) {
    return listener.handleEvent(e);
  });
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_);
});
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.require("goog.events.Event");
goog.require("goog.events.Listenable");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.events.EventTarget = function() {
  goog.Disposable.call(this);
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
    this.eventTargetListeners_ = {};
    this.reallyDisposed_ = false;
    this.actualEventTarget_ = this;
  }
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
if (goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
  goog.events.Listenable.addImplementation(goog.events.EventTarget);
}
goog.events.EventTarget.MAX_ANCESTORS_ = 1E3;
goog.events.EventTarget.prototype.customEvent_ = true;
goog.events.EventTarget.prototype.parentEventTarget_ = null;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_;
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent;
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope);
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope);
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
    if (this.reallyDisposed_) {
      return true;
    }
    var ancestorsTree, ancestor = this.getParentEventTarget();
    if (ancestor) {
      ancestorsTree = [];
      var ancestorCount = 1;
      for (;ancestor;ancestor = ancestor.getParentEventTarget()) {
        ancestorsTree.push(ancestor);
        goog.asserts.assert(++ancestorCount < goog.events.EventTarget.MAX_ANCESTORS_, "infinite loop");
      }
    }
    return goog.events.EventTarget.dispatchEventInternal_(this.actualEventTarget_, e, ancestorsTree);
  } else {
    return goog.events.dispatchEvent(this, e);
  }
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
    this.removeAllListeners();
    this.reallyDisposed_ = true;
  } else {
    goog.events.removeAll(this);
  }
  this.parentEventTarget_ = null;
};
if (goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
  goog.events.EventTarget.prototype.listen = function(type, listener, opt_useCapture, opt_listenerScope) {
    return this.listenInternal_(type, listener, false, opt_useCapture, opt_listenerScope);
  };
  goog.events.EventTarget.prototype.listenOnce = function(type, listener, opt_useCapture, opt_listenerScope) {
    return this.listenInternal_(type, listener, true, opt_useCapture, opt_listenerScope);
  };
  goog.events.EventTarget.prototype.listenInternal_ = function(type, listener, callOnce, opt_useCapture, opt_listenerScope) {
    goog.asserts.assert(!this.reallyDisposed_, "Can not listen on disposed object.");
    var listenerArray = this.eventTargetListeners_[type] || (this.eventTargetListeners_[type] = []);
    var listenerObj;
    var index = goog.events.EventTarget.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
    if (index > -1) {
      listenerObj = listenerArray[index];
      if (!callOnce) {
        listenerObj.callOnce = false;
      }
      return listenerObj;
    }
    listenerObj = new goog.events.Listener;
    listenerObj.init(listener, null, this, type, !!opt_useCapture, opt_listenerScope);
    listenerObj.callOnce = callOnce;
    listenerArray.push(listenerObj);
    return listenerObj;
  };
  goog.events.EventTarget.prototype.unlisten = function(type, listener, opt_useCapture, opt_listenerScope) {
    if (!(type in this.eventTargetListeners_)) {
      return false;
    }
    var listenerArray = this.eventTargetListeners_[type];
    var index = goog.events.EventTarget.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
    if (index > -1) {
      var listenerObj = listenerArray[index];
      goog.events.cleanUp(listenerObj);
      listenerObj.removed = true;
      return goog.array.removeAt(listenerArray, index);
    }
    return false;
  };
  goog.events.EventTarget.prototype.unlistenByKey = function(key) {
    var type = key.type;
    if (!(type in this.eventTargetListeners_)) {
      return false;
    }
    var removed = goog.array.remove(this.eventTargetListeners_[type], key);
    if (removed) {
      goog.events.cleanUp(key);
      key.removed = true;
    }
    return removed;
  };
  goog.events.EventTarget.prototype.removeAllListeners = function(opt_type, opt_capture) {
    var count = 0;
    for (var type in this.eventTargetListeners_) {
      if (!opt_type || type == opt_type) {
        var listenerArray = this.eventTargetListeners_[type];
        for (var i = 0;i < listenerArray.length;i++) {
          ++count;
          goog.events.cleanUp(listenerArray[i]);
          listenerArray[i].removed = true;
        }
        listenerArray.length = 0;
      }
    }
    return count;
  };
  goog.events.EventTarget.prototype.fireListeners = function(type, capture, eventObject) {
    goog.asserts.assert(!this.reallyDisposed_, "Can not fire listeners after dispose() completed.");
    if (!(type in this.eventTargetListeners_)) {
      return true;
    }
    var rv = true;
    var listenerArray = goog.array.clone(this.eventTargetListeners_[type]);
    for (var i = 0;i < listenerArray.length;++i) {
      var listener = listenerArray[i];
      if (listener && (!listener.removed && listener.capture == capture)) {
        if (listener.callOnce) {
          this.unlistenByKey(listener);
        }
        rv = listener.handleEvent(eventObject) !== false && rv;
      }
    }
    return rv && eventObject.returnValue_ != false;
  };
  goog.events.EventTarget.prototype.getListeners = function(type, capture) {
    var listenerArray = this.eventTargetListeners_[type];
    var rv = [];
    if (listenerArray) {
      for (var i = 0;i < listenerArray.length;++i) {
        var listenerObj = listenerArray[i];
        if (listenerObj.capture == capture) {
          rv.push(listenerObj);
        }
      }
    }
    return rv;
  };
  goog.events.EventTarget.prototype.getListener = function(type, listener, capture, opt_listenerScope) {
    var listenerArray = this.eventTargetListeners_[type];
    var i = -1;
    if (listenerArray) {
      i = goog.events.EventTarget.findListenerIndex_(listenerArray, listener, capture, opt_listenerScope);
    }
    return i > -1 ? listenerArray[i] : null;
  };
  goog.events.EventTarget.prototype.hasListener = function(opt_type, opt_capture) {
    var hasType = goog.isDef(opt_type);
    var hasCapture = goog.isDef(opt_capture);
    return goog.object.some(this.eventTargetListeners_, function(listenersArray, type) {
      for (var i = 0;i < listenersArray.length;++i) {
        if ((!hasType || listenersArray[i].type == opt_type) && (!hasCapture || listenersArray[i].capture == opt_capture)) {
          return true;
        }
      }
      return false;
    });
  };
  goog.events.EventTarget.prototype.setTargetForTesting = function(target) {
    this.actualEventTarget_ = target;
  };
  goog.events.EventTarget.dispatchEventInternal_ = function(target, e, opt_ancestorsTree) {
    var type = e.type || (e);
    if (goog.isString(e)) {
      e = new goog.events.Event(e, target);
    } else {
      if (!(e instanceof goog.events.Event)) {
        var oldEvent = e;
        e = new goog.events.Event(type, target);
        goog.object.extend(e, oldEvent);
      } else {
        e.target = e.target || target;
      }
    }
    var rv = true, currentTarget;
    if (opt_ancestorsTree) {
      for (var i = opt_ancestorsTree.length - 1;!e.propagationStopped_ && i >= 0;i--) {
        currentTarget = e.currentTarget = opt_ancestorsTree[i];
        rv = currentTarget.fireListeners(type, true, e) && rv;
      }
    }
    if (!e.propagationStopped_) {
      currentTarget = e.currentTarget = target;
      rv = currentTarget.fireListeners(type, true, e) && rv;
      if (!e.propagationStopped_) {
        rv = currentTarget.fireListeners(type, false, e) && rv;
      }
    }
    if (opt_ancestorsTree) {
      for (i = 0;!e.propagationStopped_ && i < opt_ancestorsTree.length;i++) {
        currentTarget = e.currentTarget = opt_ancestorsTree[i];
        rv = currentTarget.fireListeners(type, false, e) && rv;
      }
    }
    return rv;
  };
  goog.events.EventTarget.findListenerIndex_ = function(listenerArray, listener, opt_useCapture, opt_listenerScope) {
    for (var i = 0;i < listenerArray.length;++i) {
      var listenerObj = listenerArray[i];
      if (listenerObj.listener == listener && (listenerObj.capture == !!opt_useCapture && listenerObj.handler == opt_listenerScope)) {
        return i;
      }
    }
    return-1;
  };
}
;goog.provide("goog.Timer");
goog.require("goog.events.EventTarget");
goog.Timer = function(opt_interval, opt_timerObject) {
  goog.events.EventTarget.call(this);
  this.interval_ = opt_interval || 1;
  this.timerObject_ = opt_timerObject || goog.Timer.defaultTimerObject;
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now();
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.prototype.enabled = false;
goog.Timer.defaultTimerObject = goog.global;
goog.Timer.intervalScale = 0.8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.getInterval = function() {
  return this.interval_;
};
goog.Timer.prototype.setInterval = function(interval) {
  this.interval_ = interval;
  if (this.timer_ && this.enabled) {
    this.stop();
    this.start();
  } else {
    if (this.timer_) {
      this.stop();
    }
  }
};
goog.Timer.prototype.tick_ = function() {
  if (this.enabled) {
    var elapsed = goog.now() - this.last_;
    if (elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed);
      return;
    }
    this.dispatchTick();
    if (this.enabled) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
      this.last_ = goog.now();
    }
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK);
};
goog.Timer.prototype.start = function() {
  this.enabled = true;
  if (!this.timer_) {
    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
    this.last_ = goog.now();
  }
};
goog.Timer.prototype.stop = function() {
  this.enabled = false;
  if (this.timer_) {
    this.timerObject_.clearTimeout(this.timer_);
    this.timer_ = null;
  }
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_;
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(listener, opt_delay, opt_handler) {
  if (goog.isFunction(listener)) {
    if (opt_handler) {
      listener = goog.bind(listener, opt_handler);
    }
  } else {
    if (listener && typeof listener.handleEvent == "function") {
      listener = goog.bind(listener.handleEvent, listener);
    } else {
      throw Error("Invalid listener argument");
    }
  }
  if (opt_delay > goog.Timer.MAX_TIMEOUT_) {
    return-1;
  } else {
    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0);
  }
};
goog.Timer.clear = function(timerId) {
  goog.Timer.defaultTimerObject.clearTimeout(timerId);
};
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if (typeof col.getCount == "function") {
    return col.getCount();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return col.length;
  }
  return goog.object.getCount(col);
};
goog.structs.getValues = function(col) {
  if (typeof col.getValues == "function") {
    return col.getValues();
  }
  if (goog.isString(col)) {
    return col.split("");
  }
  if (goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0;i < l;i++) {
      rv.push(col[i]);
    }
    return rv;
  }
  return goog.object.getValues(col);
};
goog.structs.getKeys = function(col) {
  if (typeof col.getKeys == "function") {
    return col.getKeys();
  }
  if (typeof col.getValues == "function") {
    return undefined;
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0;i < l;i++) {
      rv.push(i);
    }
    return rv;
  }
  return goog.object.getKeys(col);
};
goog.structs.contains = function(col, val) {
  if (typeof col.contains == "function") {
    return col.contains(val);
  }
  if (typeof col.containsValue == "function") {
    return col.containsValue(val);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains((col), val);
  }
  return goog.object.containsValue(col, val);
};
goog.structs.isEmpty = function(col) {
  if (typeof col.isEmpty == "function") {
    return col.isEmpty();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty((col));
  }
  return goog.object.isEmpty(col);
};
goog.structs.clear = function(col) {
  if (typeof col.clear == "function") {
    col.clear();
  } else {
    if (goog.isArrayLike(col)) {
      goog.array.clear((col));
    } else {
      goog.object.clear(col);
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if (typeof col.forEach == "function") {
    col.forEach(f, opt_obj);
  } else {
    if (goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach((col), f, opt_obj);
    } else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for (var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col);
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if (typeof col.filter == "function") {
    return col.filter(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter((col), f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0;i < l;i++) {
      if (f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i];
      }
    }
  } else {
    rv = [];
    for (var i = 0;i < l;i++) {
      if (f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i]);
      }
    }
  }
  return rv;
};
goog.structs.map = function(col, f, opt_obj) {
  if (typeof col.map == "function") {
    return col.map(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map((col), f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col);
    }
  } else {
    rv = [];
    for (var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col);
    }
  }
  return rv;
};
goog.structs.some = function(col, f, opt_obj) {
  if (typeof col.some == "function") {
    return col.some(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some((col), f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    if (f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true;
    }
  }
  return false;
};
goog.structs.every = function(col, f, opt_obj) {
  if (typeof col.every == "function") {
    return col.every(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every((col), f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    if (!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false;
    }
  }
  return true;
};
goog.provide("goog.structs.Collection");
goog.structs.Collection = function() {
};
goog.structs.Collection.prototype.add;
goog.structs.Collection.prototype.remove;
goog.structs.Collection.prototype.contains;
goog.structs.Collection.prototype.getCount;
goog.provide("goog.iter");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.iter.Iterable;
if ("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"];
} else {
  goog.iter.StopIteration = Error("StopIteration");
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this;
};
goog.iter.toIterator = function(iterable) {
  if (iterable instanceof goog.iter.Iterator) {
    return iterable;
  }
  if (typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false);
  }
  if (goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while (true) {
        if (i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if (!(i in iterable)) {
          i++;
          continue;
        }
        return iterable[i++];
      }
    };
    return newIter;
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if (goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach((iterable), f, opt_obj);
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  } else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while (true) {
        f.call(opt_obj, iterable.next(), undefined, iterable);
      }
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (f.call(opt_obj, val, undefined, iterator)) {
        return val;
      }
    }
  };
  return newIter;
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if (arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop;
  }
  if (step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if (step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv;
  };
  return newIter;
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator);
};
goog.iter.map = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      return f.call(opt_obj, val, undefined, iterator);
    }
  };
  return newIter;
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val);
  });
  return rval;
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false;
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true;
};
goog.iter.chain = function(var_args) {
  var args = arguments;
  var length = args.length;
  var i = 0;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    try {
      if (i >= length) {
        throw goog.iter.StopIteration;
      }
      var current = goog.iter.toIterator(args[i]);
      return current.next();
    } catch (ex) {
      if (ex !== goog.iter.StopIteration || i >= length) {
        throw ex;
      } else {
        i++;
        return this.next();
      }
    }
  };
  return newIter;
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (dropping && f.call(opt_obj, val, undefined, iterator)) {
        continue;
      } else {
        dropping = false;
      }
      return val;
    }
  };
  return newIter;
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while (true) {
      if (taking) {
        var val = iterator.next();
        if (f.call(opt_obj, val, undefined, iterator)) {
          return val;
        } else {
          taking = false;
        }
      } else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter;
};
goog.iter.toArray = function(iterable) {
  if (goog.isArrayLike(iterable)) {
    return goog.array.toArray((iterable));
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val);
  });
  return array;
};
goog.iter.equals = function(iterable1, iterable2) {
  iterable1 = goog.iter.toIterator(iterable1);
  iterable2 = goog.iter.toIterator(iterable2);
  var b1, b2;
  try {
    while (true) {
      b1 = b2 = false;
      var val1 = iterable1.next();
      b1 = true;
      var val2 = iterable2.next();
      b2 = true;
      if (val1 != val2) {
        return false;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    } else {
      if (b1 && !b2) {
        return false;
      }
      if (!b2) {
        try {
          val2 = iterable2.next();
          return false;
        } catch (ex1) {
          if (ex1 !== goog.iter.StopIteration) {
            throw ex1;
          }
          return true;
        }
      }
    }
  }
  return false;
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next();
  } catch (e) {
    if (e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue;
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length;
  });
  if (someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator;
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if (indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex];
      });
      for (var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if (indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break;
        }
        if (i == 0) {
          indicies = null;
          break;
        }
        indicies[i] = 0;
      }
      return retVal;
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if (!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement;
      } catch (e) {
        if (e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true;
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement;
  };
  return iter;
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.require("goog.structs");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  var argLength = arguments.length;
  if (argLength > 1) {
    if (argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for (var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1]);
    }
  } else {
    if (opt_map) {
      this.addAll((opt_map));
    }
  }
};
goog.structs.Map.prototype.count_ = 0;
goog.structs.Map.prototype.version_ = 0;
goog.structs.Map.prototype.getCount = function() {
  return this.count_;
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key]);
  }
  return rv;
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return(this.keys_.concat());
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key);
};
goog.structs.Map.prototype.containsValue = function(val) {
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if (goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true;
    }
  }
  return false;
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if (this === otherMap) {
    return true;
  }
  if (this.count_ != otherMap.getCount()) {
    return false;
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for (var key, i = 0;key = this.keys_[i];i++) {
    if (!equalityFn(this.get(key), otherMap.get(key))) {
      return false;
    }
  }
  return true;
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b;
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0;
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0;
};
goog.structs.Map.prototype.remove = function(key) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if (this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_();
    }
    return true;
  }
  return false;
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if (this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
  if (this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key];
  }
  return opt_val;
};
goog.structs.Map.prototype.set = function(key, value) {
  if (!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++;
  }
  this.map_[key] = value;
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if (map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues();
  } else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map);
  }
  for (var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i]);
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this);
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key);
  }
  return transposed;
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key];
  }
  return obj;
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true);
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false);
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      if (version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if (i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key];
    }
  };
  return newIter;
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key);
};
goog.provide("goog.structs.Set");
goog.require("goog.structs");
goog.require("goog.structs.Collection");
goog.require("goog.structs.Map");
goog.structs.Set = function(opt_values) {
  this.map_ = new goog.structs.Map;
  if (opt_values) {
    this.addAll(opt_values);
  }
};
goog.structs.Set.getKey_ = function(val) {
  var type = typeof val;
  if (type == "object" && val || type == "function") {
    return "o" + goog.getUid((val));
  } else {
    return type.substr(0, 1) + val;
  }
};
goog.structs.Set.prototype.getCount = function() {
  return this.map_.getCount();
};
goog.structs.Set.prototype.add = function(element) {
  this.map_.set(goog.structs.Set.getKey_(element), element);
};
goog.structs.Set.prototype.addAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    this.add(values[i]);
  }
};
goog.structs.Set.prototype.removeAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    this.remove(values[i]);
  }
};
goog.structs.Set.prototype.remove = function(element) {
  return this.map_.remove(goog.structs.Set.getKey_(element));
};
goog.structs.Set.prototype.clear = function() {
  this.map_.clear();
};
goog.structs.Set.prototype.isEmpty = function() {
  return this.map_.isEmpty();
};
goog.structs.Set.prototype.contains = function(element) {
  return this.map_.containsKey(goog.structs.Set.getKey_(element));
};
goog.structs.Set.prototype.containsAll = function(col) {
  return goog.structs.every(col, this.contains, this);
};
goog.structs.Set.prototype.intersection = function(col) {
  var result = new goog.structs.Set;
  var values = goog.structs.getValues(col);
  for (var i = 0;i < values.length;i++) {
    var value = values[i];
    if (this.contains(value)) {
      result.add(value);
    }
  }
  return result;
};
goog.structs.Set.prototype.difference = function(col) {
  var result = this.clone();
  result.removeAll(col);
  return result;
};
goog.structs.Set.prototype.getValues = function() {
  return this.map_.getValues();
};
goog.structs.Set.prototype.clone = function() {
  return new goog.structs.Set(this);
};
goog.structs.Set.prototype.equals = function(col) {
  return this.getCount() == goog.structs.getCount(col) && this.isSubsetOf(col);
};
goog.structs.Set.prototype.isSubsetOf = function(col) {
  var colCount = goog.structs.getCount(col);
  if (this.getCount() > colCount) {
    return false;
  }
  if (!(col instanceof goog.structs.Set) && colCount > 5) {
    col = new goog.structs.Set(col);
  }
  return goog.structs.every(this, function(value) {
    return goog.structs.contains(col, value);
  });
};
goog.structs.Set.prototype.__iterator__ = function(opt_keys) {
  return this.map_.__iterator__(false);
};
goog.provide("goog.debug");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs.Set");
goog.require("goog.userAgent");
goog.debug.catchErrors = function(logFunc, opt_cancel, opt_target) {
  var target = opt_target || goog.global;
  var oldErrorHandler = target.onerror;
  var retVal = !!opt_cancel;
  if (goog.userAgent.WEBKIT && !goog.userAgent.isVersion("535.3")) {
    retVal = !retVal;
  }
  target.onerror = function(message, url, line) {
    if (oldErrorHandler) {
      oldErrorHandler(message, url, line);
    }
    logFunc({message:message, fileName:url, line:line});
    return retVal;
  };
};
goog.debug.expose = function(obj, opt_showFn) {
  if (typeof obj == "undefined") {
    return "undefined";
  }
  if (obj == null) {
    return "NULL";
  }
  var str = [];
  for (var x in obj) {
    if (!opt_showFn && goog.isFunction(obj[x])) {
      continue;
    }
    var s = x + " \x3d ";
    try {
      s += obj[x];
    } catch (e) {
      s += "*** " + e + " ***";
    }
    str.push(s);
  }
  return str.join("\n");
};
goog.debug.deepExpose = function(obj, opt_showFn) {
  var previous = new goog.structs.Set;
  var str = [];
  var helper = function(obj, space) {
    var nestspace = space + "  ";
    var indentMultiline = function(str) {
      return str.replace(/\n/g, "\n" + space);
    };
    try {
      if (!goog.isDef(obj)) {
        str.push("undefined");
      } else {
        if (goog.isNull(obj)) {
          str.push("NULL");
        } else {
          if (goog.isString(obj)) {
            str.push('"' + indentMultiline(obj) + '"');
          } else {
            if (goog.isFunction(obj)) {
              str.push(indentMultiline(String(obj)));
            } else {
              if (goog.isObject(obj)) {
                if (previous.contains(obj)) {
                  str.push("*** reference loop detected ***");
                } else {
                  previous.add(obj);
                  str.push("{");
                  for (var x in obj) {
                    if (!opt_showFn && goog.isFunction(obj[x])) {
                      continue;
                    }
                    str.push("\n");
                    str.push(nestspace);
                    str.push(x + " \x3d ");
                    helper(obj[x], nestspace);
                  }
                  str.push("\n" + space + "}");
                }
              } else {
                str.push(obj);
              }
            }
          }
        }
      }
    } catch (e) {
      str.push("*** " + e + " ***");
    }
  };
  helper(obj, "");
  return str.join("");
};
goog.debug.exposeArray = function(arr) {
  var str = [];
  for (var i = 0;i < arr.length;i++) {
    if (goog.isArray(arr[i])) {
      str.push(goog.debug.exposeArray(arr[i]));
    } else {
      str.push(arr[i]);
    }
  }
  return "[ " + str.join(", ") + " ]";
};
goog.debug.exposeException = function(err, opt_fn) {
  try {
    var e = goog.debug.normalizeErrorObject(err);
    var error = "Message: " + goog.string.htmlEscape(e.message) + '\nUrl: \x3ca href\x3d"view-source:' + e.fileName + '" target\x3d"_new"\x3e' + e.fileName + "\x3c/a\x3e\nLine: " + e.lineNumber + "\n\nBrowser stack:\n" + goog.string.htmlEscape(e.stack + "-\x3e ") + "[end]\n\nJS stack traversal:\n" + goog.string.htmlEscape(goog.debug.getStacktrace(opt_fn) + "-\x3e ");
    return error;
  } catch (e2) {
    return "Exception trying to expose exception! You win, we lose. " + e2;
  }
};
goog.debug.normalizeErrorObject = function(err) {
  var href = goog.getObjectByName("window.location.href");
  if (goog.isString(err)) {
    return{"message":err, "name":"Unknown error", "lineNumber":"Not available", "fileName":href, "stack":"Not available"};
  }
  var lineNumber, fileName;
  var threwError = false;
  try {
    lineNumber = err.lineNumber || (err.line || "Not available");
  } catch (e) {
    lineNumber = "Not available";
    threwError = true;
  }
  try {
    fileName = err.fileName || (err.filename || (err.sourceURL || (goog.global["$googDebugFname"] || href)));
  } catch (e) {
    fileName = "Not available";
    threwError = true;
  }
  if (threwError || (!err.lineNumber || (!err.fileName || !err.stack))) {
    return{"message":err.message, "name":err.name, "lineNumber":lineNumber, "fileName":fileName, "stack":err.stack || "Not available"};
  }
  return err;
};
goog.debug.enhanceError = function(err, opt_message) {
  var error = typeof err == "string" ? Error(err) : err;
  if (!error.stack) {
    error.stack = goog.debug.getStacktrace(arguments.callee.caller);
  }
  if (opt_message) {
    var x = 0;
    while (error["message" + x]) {
      ++x;
    }
    error["message" + x] = String(opt_message);
  }
  return error;
};
goog.debug.getStacktraceSimple = function(opt_depth) {
  var sb = [];
  var fn = arguments.callee.caller;
  var depth = 0;
  while (fn && (!opt_depth || depth < opt_depth)) {
    sb.push(goog.debug.getFunctionName(fn));
    sb.push("()\n");
    try {
      fn = fn.caller;
    } catch (e) {
      sb.push("[exception trying to get caller]\n");
      break;
    }
    depth++;
    if (depth >= goog.debug.MAX_STACK_DEPTH) {
      sb.push("[...long stack...]");
      break;
    }
  }
  if (opt_depth && depth >= opt_depth) {
    sb.push("[...reached max depth limit...]");
  } else {
    sb.push("[end]");
  }
  return sb.join("");
};
goog.debug.MAX_STACK_DEPTH = 50;
goog.debug.getStacktrace = function(opt_fn) {
  return goog.debug.getStacktraceHelper_(opt_fn || arguments.callee.caller, []);
};
goog.debug.getStacktraceHelper_ = function(fn, visited) {
  var sb = [];
  if (goog.array.contains(visited, fn)) {
    sb.push("[...circular reference...]");
  } else {
    if (fn && visited.length < goog.debug.MAX_STACK_DEPTH) {
      sb.push(goog.debug.getFunctionName(fn) + "(");
      var args = fn.arguments;
      for (var i = 0;i < args.length;i++) {
        if (i > 0) {
          sb.push(", ");
        }
        var argDesc;
        var arg = args[i];
        switch(typeof arg) {
          case "object":
            argDesc = arg ? "object" : "null";
            break;
          case "string":
            argDesc = arg;
            break;
          case "number":
            argDesc = String(arg);
            break;
          case "boolean":
            argDesc = arg ? "true" : "false";
            break;
          case "function":
            argDesc = goog.debug.getFunctionName(arg);
            argDesc = argDesc ? argDesc : "[fn]";
            break;
          case "undefined":
          ;
          default:
            argDesc = typeof arg;
            break;
        }
        if (argDesc.length > 40) {
          argDesc = argDesc.substr(0, 40) + "...";
        }
        sb.push(argDesc);
      }
      visited.push(fn);
      sb.push(")\n");
      try {
        sb.push(goog.debug.getStacktraceHelper_(fn.caller, visited));
      } catch (e) {
        sb.push("[exception trying to get caller]\n");
      }
    } else {
      if (fn) {
        sb.push("[...long stack...]");
      } else {
        sb.push("[end]");
      }
    }
  }
  return sb.join("");
};
goog.debug.setFunctionResolver = function(resolver) {
  goog.debug.fnNameResolver_ = resolver;
};
goog.debug.getFunctionName = function(fn) {
  if (goog.debug.fnNameCache_[fn]) {
    return goog.debug.fnNameCache_[fn];
  }
  if (goog.debug.fnNameResolver_) {
    var name = goog.debug.fnNameResolver_(fn);
    if (name) {
      goog.debug.fnNameCache_[fn] = name;
      return name;
    }
  }
  var functionSource = String(fn);
  if (!goog.debug.fnNameCache_[functionSource]) {
    var matches = /function ([^\(]+)/.exec(functionSource);
    if (matches) {
      var method = matches[1];
      goog.debug.fnNameCache_[functionSource] = method;
    } else {
      goog.debug.fnNameCache_[functionSource] = "[Anonymous]";
    }
  }
  return goog.debug.fnNameCache_[functionSource];
};
goog.debug.makeWhitespaceVisible = function(string) {
  return string.replace(/ /g, "[_]").replace(/\f/g, "[f]").replace(/\n/g, "[n]\n").replace(/\r/g, "[r]").replace(/\t/g, "[t]");
};
goog.debug.fnNameCache_ = {};
goog.debug.fnNameResolver_;
goog.provide("goog.debug.LogRecord");
goog.debug.LogRecord = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  this.reset(level, msg, loggerName, opt_time, opt_sequenceNumber);
};
goog.debug.LogRecord.prototype.time_;
goog.debug.LogRecord.prototype.level_;
goog.debug.LogRecord.prototype.msg_;
goog.debug.LogRecord.prototype.loggerName_;
goog.debug.LogRecord.prototype.sequenceNumber_ = 0;
goog.debug.LogRecord.prototype.exception_ = null;
goog.debug.LogRecord.prototype.exceptionText_ = null;
goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS = true;
goog.debug.LogRecord.nextSequenceNumber_ = 0;
goog.debug.LogRecord.prototype.reset = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  if (goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS) {
    this.sequenceNumber_ = typeof opt_sequenceNumber == "number" ? opt_sequenceNumber : goog.debug.LogRecord.nextSequenceNumber_++;
  }
  this.time_ = opt_time || goog.now();
  this.level_ = level;
  this.msg_ = msg;
  this.loggerName_ = loggerName;
  delete this.exception_;
  delete this.exceptionText_;
};
goog.debug.LogRecord.prototype.getLoggerName = function() {
  return this.loggerName_;
};
goog.debug.LogRecord.prototype.getException = function() {
  return this.exception_;
};
goog.debug.LogRecord.prototype.setException = function(exception) {
  this.exception_ = exception;
};
goog.debug.LogRecord.prototype.getExceptionText = function() {
  return this.exceptionText_;
};
goog.debug.LogRecord.prototype.setExceptionText = function(text) {
  this.exceptionText_ = text;
};
goog.debug.LogRecord.prototype.setLoggerName = function(loggerName) {
  this.loggerName_ = loggerName;
};
goog.debug.LogRecord.prototype.getLevel = function() {
  return this.level_;
};
goog.debug.LogRecord.prototype.setLevel = function(level) {
  this.level_ = level;
};
goog.debug.LogRecord.prototype.getMessage = function() {
  return this.msg_;
};
goog.debug.LogRecord.prototype.setMessage = function(msg) {
  this.msg_ = msg;
};
goog.debug.LogRecord.prototype.getMillis = function() {
  return this.time_;
};
goog.debug.LogRecord.prototype.setMillis = function(time) {
  this.time_ = time;
};
goog.debug.LogRecord.prototype.getSequenceNumber = function() {
  return this.sequenceNumber_;
};
goog.provide("goog.debug.LogBuffer");
goog.require("goog.asserts");
goog.require("goog.debug.LogRecord");
goog.debug.LogBuffer = function() {
  goog.asserts.assert(goog.debug.LogBuffer.isBufferingEnabled(), "Cannot use goog.debug.LogBuffer without defining " + "goog.debug.LogBuffer.CAPACITY.");
  this.clear();
};
goog.debug.LogBuffer.getInstance = function() {
  if (!goog.debug.LogBuffer.instance_) {
    goog.debug.LogBuffer.instance_ = new goog.debug.LogBuffer;
  }
  return goog.debug.LogBuffer.instance_;
};
goog.debug.LogBuffer.CAPACITY = 0;
goog.debug.LogBuffer.prototype.buffer_;
goog.debug.LogBuffer.prototype.curIndex_;
goog.debug.LogBuffer.prototype.isFull_;
goog.debug.LogBuffer.prototype.addRecord = function(level, msg, loggerName) {
  var curIndex = (this.curIndex_ + 1) % goog.debug.LogBuffer.CAPACITY;
  this.curIndex_ = curIndex;
  if (this.isFull_) {
    var ret = this.buffer_[curIndex];
    ret.reset(level, msg, loggerName);
    return ret;
  }
  this.isFull_ = curIndex == goog.debug.LogBuffer.CAPACITY - 1;
  return this.buffer_[curIndex] = new goog.debug.LogRecord(level, msg, loggerName);
};
goog.debug.LogBuffer.isBufferingEnabled = function() {
  return goog.debug.LogBuffer.CAPACITY > 0;
};
goog.debug.LogBuffer.prototype.clear = function() {
  this.buffer_ = new Array(goog.debug.LogBuffer.CAPACITY);
  this.curIndex_ = -1;
  this.isFull_ = false;
};
goog.debug.LogBuffer.prototype.forEachRecord = function(func) {
  var buffer = this.buffer_;
  if (!buffer[0]) {
    return;
  }
  var curIndex = this.curIndex_;
  var i = this.isFull_ ? curIndex : -1;
  do {
    i = (i + 1) % goog.debug.LogBuffer.CAPACITY;
    func((buffer[i]));
  } while (i != curIndex);
};
goog.provide("goog.debug.LogManager");
goog.provide("goog.debug.Logger");
goog.provide("goog.debug.Logger.Level");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug");
goog.require("goog.debug.LogBuffer");
goog.require("goog.debug.LogRecord");
goog.debug.Logger = function(name) {
  this.name_ = name;
};
goog.debug.Logger.prototype.parent_ = null;
goog.debug.Logger.prototype.level_ = null;
goog.debug.Logger.prototype.children_ = null;
goog.debug.Logger.prototype.handlers_ = null;
goog.debug.Logger.ENABLE_HIERARCHY = true;
if (!goog.debug.Logger.ENABLE_HIERARCHY) {
  goog.debug.Logger.rootHandlers_ = [];
  goog.debug.Logger.rootLevel_;
}
goog.debug.Logger.Level = function(name, value) {
  this.name = name;
  this.value = value;
};
goog.debug.Logger.Level.prototype.toString = function() {
  return this.name;
};
goog.debug.Logger.Level.OFF = new goog.debug.Logger.Level("OFF", Infinity);
goog.debug.Logger.Level.SHOUT = new goog.debug.Logger.Level("SHOUT", 1200);
goog.debug.Logger.Level.SEVERE = new goog.debug.Logger.Level("SEVERE", 1E3);
goog.debug.Logger.Level.WARNING = new goog.debug.Logger.Level("WARNING", 900);
goog.debug.Logger.Level.INFO = new goog.debug.Logger.Level("INFO", 800);
goog.debug.Logger.Level.CONFIG = new goog.debug.Logger.Level("CONFIG", 700);
goog.debug.Logger.Level.FINE = new goog.debug.Logger.Level("FINE", 500);
goog.debug.Logger.Level.FINER = new goog.debug.Logger.Level("FINER", 400);
goog.debug.Logger.Level.FINEST = new goog.debug.Logger.Level("FINEST", 300);
goog.debug.Logger.Level.ALL = new goog.debug.Logger.Level("ALL", 0);
goog.debug.Logger.Level.PREDEFINED_LEVELS = [goog.debug.Logger.Level.OFF, goog.debug.Logger.Level.SHOUT, goog.debug.Logger.Level.SEVERE, goog.debug.Logger.Level.WARNING, goog.debug.Logger.Level.INFO, goog.debug.Logger.Level.CONFIG, goog.debug.Logger.Level.FINE, goog.debug.Logger.Level.FINER, goog.debug.Logger.Level.FINEST, goog.debug.Logger.Level.ALL];
goog.debug.Logger.Level.predefinedLevelsCache_ = null;
goog.debug.Logger.Level.createPredefinedLevelsCache_ = function() {
  goog.debug.Logger.Level.predefinedLevelsCache_ = {};
  for (var i = 0, level;level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];i++) {
    goog.debug.Logger.Level.predefinedLevelsCache_[level.value] = level;
    goog.debug.Logger.Level.predefinedLevelsCache_[level.name] = level;
  }
};
goog.debug.Logger.Level.getPredefinedLevel = function(name) {
  if (!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_();
  }
  return goog.debug.Logger.Level.predefinedLevelsCache_[name] || null;
};
goog.debug.Logger.Level.getPredefinedLevelByValue = function(value) {
  if (!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_();
  }
  if (value in goog.debug.Logger.Level.predefinedLevelsCache_) {
    return goog.debug.Logger.Level.predefinedLevelsCache_[value];
  }
  for (var i = 0;i < goog.debug.Logger.Level.PREDEFINED_LEVELS.length;++i) {
    var level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];
    if (level.value <= value) {
      return level;
    }
  }
  return null;
};
goog.debug.Logger.getLogger = function(name) {
  return goog.debug.LogManager.getLogger(name);
};
goog.debug.Logger.logToProfilers = function(msg) {
  if (goog.global["console"]) {
    if (goog.global["console"]["timeStamp"]) {
      goog.global["console"]["timeStamp"](msg);
    } else {
      if (goog.global["console"]["markTimeline"]) {
        goog.global["console"]["markTimeline"](msg);
      }
    }
  }
  if (goog.global["msWriteProfilerMark"]) {
    goog.global["msWriteProfilerMark"](msg);
  }
};
goog.debug.Logger.prototype.getName = function() {
  return this.name_;
};
goog.debug.Logger.prototype.addHandler = function(handler) {
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    if (!this.handlers_) {
      this.handlers_ = [];
    }
    this.handlers_.push(handler);
  } else {
    goog.asserts.assert(!this.name_, "Cannot call addHandler on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootHandlers_.push(handler);
  }
};
goog.debug.Logger.prototype.removeHandler = function(handler) {
  var handlers = goog.debug.Logger.ENABLE_HIERARCHY ? this.handlers_ : goog.debug.Logger.rootHandlers_;
  return!!handlers && goog.array.remove(handlers, handler);
};
goog.debug.Logger.prototype.getParent = function() {
  return this.parent_;
};
goog.debug.Logger.prototype.getChildren = function() {
  if (!this.children_) {
    this.children_ = {};
  }
  return this.children_;
};
goog.debug.Logger.prototype.setLevel = function(level) {
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    this.level_ = level;
  } else {
    goog.asserts.assert(!this.name_, "Cannot call setLevel() on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootLevel_ = level;
  }
};
goog.debug.Logger.prototype.getLevel = function() {
  return this.level_;
};
goog.debug.Logger.prototype.getEffectiveLevel = function() {
  if (!goog.debug.Logger.ENABLE_HIERARCHY) {
    return goog.debug.Logger.rootLevel_;
  }
  if (this.level_) {
    return this.level_;
  }
  if (this.parent_) {
    return this.parent_.getEffectiveLevel();
  }
  goog.asserts.fail("Root logger has no level set.");
  return null;
};
goog.debug.Logger.prototype.isLoggable = function(level) {
  return level.value >= this.getEffectiveLevel().value;
};
goog.debug.Logger.prototype.log = function(level, msg, opt_exception) {
  if (this.isLoggable(level)) {
    this.doLogRecord_(this.getLogRecord(level, msg, opt_exception));
  }
};
goog.debug.Logger.prototype.getLogRecord = function(level, msg, opt_exception) {
  if (goog.debug.LogBuffer.isBufferingEnabled()) {
    var logRecord = goog.debug.LogBuffer.getInstance().addRecord(level, msg, this.name_)
  } else {
    logRecord = new goog.debug.LogRecord(level, String(msg), this.name_);
  }
  if (opt_exception) {
    logRecord.setException(opt_exception);
    logRecord.setExceptionText(goog.debug.exposeException(opt_exception, arguments.callee.caller));
  }
  return logRecord;
};
goog.debug.Logger.prototype.shout = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SHOUT, msg, opt_exception);
};
goog.debug.Logger.prototype.severe = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SEVERE, msg, opt_exception);
};
goog.debug.Logger.prototype.warning = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.WARNING, msg, opt_exception);
};
goog.debug.Logger.prototype.info = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.INFO, msg, opt_exception);
};
goog.debug.Logger.prototype.config = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.CONFIG, msg, opt_exception);
};
goog.debug.Logger.prototype.fine = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINE, msg, opt_exception);
};
goog.debug.Logger.prototype.finer = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINER, msg, opt_exception);
};
goog.debug.Logger.prototype.finest = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINEST, msg, opt_exception);
};
goog.debug.Logger.prototype.logRecord = function(logRecord) {
  if (this.isLoggable(logRecord.getLevel())) {
    this.doLogRecord_(logRecord);
  }
};
goog.debug.Logger.prototype.doLogRecord_ = function(logRecord) {
  goog.debug.Logger.logToProfilers("log:" + logRecord.getMessage());
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    var target = this;
    while (target) {
      target.callPublish_(logRecord);
      target = target.getParent();
    }
  } else {
    for (var i = 0, handler;handler = goog.debug.Logger.rootHandlers_[i++];) {
      handler(logRecord);
    }
  }
};
goog.debug.Logger.prototype.callPublish_ = function(logRecord) {
  if (this.handlers_) {
    for (var i = 0, handler;handler = this.handlers_[i];i++) {
      handler(logRecord);
    }
  }
};
goog.debug.Logger.prototype.setParent_ = function(parent) {
  this.parent_ = parent;
};
goog.debug.Logger.prototype.addChild_ = function(name, logger) {
  this.getChildren()[name] = logger;
};
goog.debug.LogManager = {};
goog.debug.LogManager.loggers_ = {};
goog.debug.LogManager.rootLogger_ = null;
goog.debug.LogManager.initialize = function() {
  if (!goog.debug.LogManager.rootLogger_) {
    goog.debug.LogManager.rootLogger_ = new goog.debug.Logger("");
    goog.debug.LogManager.loggers_[""] = goog.debug.LogManager.rootLogger_;
    goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG);
  }
};
goog.debug.LogManager.getLoggers = function() {
  return goog.debug.LogManager.loggers_;
};
goog.debug.LogManager.getRoot = function() {
  goog.debug.LogManager.initialize();
  return(goog.debug.LogManager.rootLogger_);
};
goog.debug.LogManager.getLogger = function(name) {
  goog.debug.LogManager.initialize();
  var ret = goog.debug.LogManager.loggers_[name];
  return ret || goog.debug.LogManager.createLogger_(name);
};
goog.debug.LogManager.createFunctionForCatchErrors = function(opt_logger) {
  return function(info) {
    var logger = opt_logger || goog.debug.LogManager.getRoot();
    logger.severe("Error: " + info.message + " (" + info.fileName + " @ Line: " + info.line + ")");
  };
};
goog.debug.LogManager.createLogger_ = function(name) {
  var logger = new goog.debug.Logger(name);
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    var lastDotIndex = name.lastIndexOf(".");
    var parentName = name.substr(0, lastDotIndex);
    var leafName = name.substr(lastDotIndex + 1);
    var parentLogger = goog.debug.LogManager.getLogger(parentName);
    parentLogger.addChild_(leafName, logger);
    logger.setParent_(parentLogger);
  }
  goog.debug.LogManager.loggers_[name] = logger;
  return logger;
};
goog.provide("goog.json");
goog.provide("goog.json.Serializer");
goog.json.isValid_ = function(s) {
  if (/^\s*$/.test(s)) {
    return false;
  }
  var backslashesRe = /\\["\\\/bfnrtu]/g;
  var simpleValuesRe = /"[^"\\\n\r\u2028\u2029\x00-\x08\x0a-\x1f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
  var openBracketsRe = /(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g;
  var remainderRe = /^[\],:{}\s\u2028\u2029]*$/;
  return remainderRe.test(s.replace(backslashesRe, "@").replace(simpleValuesRe, "]").replace(openBracketsRe, ""));
};
goog.json.parse = function(s) {
  var o = String(s);
  if (goog.json.isValid_(o)) {
    try {
      return(eval("(" + o + ")"));
    } catch (ex) {
    }
  }
  throw Error("Invalid JSON string: " + o);
};
goog.json.unsafeParse = function(s) {
  return(eval("(" + s + ")"));
};
goog.json.Replacer;
goog.json.Reviver;
goog.json.serialize = function(object, opt_replacer) {
  return(new goog.json.Serializer(opt_replacer)).serialize(object);
};
goog.json.Serializer = function(opt_replacer) {
  this.replacer_ = opt_replacer;
};
goog.json.Serializer.prototype.serialize = function(object) {
  var sb = [];
  this.serialize_(object, sb);
  return sb.join("");
};
goog.json.Serializer.prototype.serialize_ = function(object, sb) {
  switch(typeof object) {
    case "string":
      this.serializeString_((object), sb);
      break;
    case "number":
      this.serializeNumber_((object), sb);
      break;
    case "boolean":
      sb.push(object);
      break;
    case "undefined":
      sb.push("null");
      break;
    case "object":
      if (object == null) {
        sb.push("null");
        break;
      }
      if (goog.isArray(object)) {
        this.serializeArray((object), sb);
        break;
      }
      this.serializeObject_((object), sb);
      break;
    case "function":
      break;
    default:
      throw Error("Unknown type: " + typeof object);;
  }
};
goog.json.Serializer.charToJsonCharCache_ = {'"':'\\"', "\\":"\\\\", "/":"\\/", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\u000b"};
goog.json.Serializer.charsToReplace_ = /\uffff/.test("\uffff") ? /[\\\"\x00-\x1f\x7f-\uffff]/g : /[\\\"\x00-\x1f\x7f-\xff]/g;
goog.json.Serializer.prototype.serializeString_ = function(s, sb) {
  sb.push('"', s.replace(goog.json.Serializer.charsToReplace_, function(c) {
    if (c in goog.json.Serializer.charToJsonCharCache_) {
      return goog.json.Serializer.charToJsonCharCache_[c];
    }
    var cc = c.charCodeAt(0);
    var rv = "\\u";
    if (cc < 16) {
      rv += "000";
    } else {
      if (cc < 256) {
        rv += "00";
      } else {
        if (cc < 4096) {
          rv += "0";
        }
      }
    }
    return goog.json.Serializer.charToJsonCharCache_[c] = rv + cc.toString(16);
  }), '"');
};
goog.json.Serializer.prototype.serializeNumber_ = function(n, sb) {
  sb.push(isFinite(n) && !isNaN(n) ? n : "null");
};
goog.json.Serializer.prototype.serializeArray = function(arr, sb) {
  var l = arr.length;
  sb.push("[");
  var sep = "";
  for (var i = 0;i < l;i++) {
    sb.push(sep);
    var value = arr[i];
    this.serialize_(this.replacer_ ? this.replacer_.call(arr, String(i), value) : value, sb);
    sep = ",";
  }
  sb.push("]");
};
goog.json.Serializer.prototype.serializeObject_ = function(obj, sb) {
  sb.push("{");
  var sep = "";
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var value = obj[key];
      if (typeof value != "function") {
        sb.push(sep);
        this.serializeString_(key, sb);
        sb.push(":");
        this.serialize_(this.replacer_ ? this.replacer_.call(obj, key, value) : value, sb);
        sep = ",";
      }
    }
  }
  sb.push("}");
};
goog.provide("goog.net.ErrorCode");
goog.net.ErrorCode = {NO_ERROR:0, ACCESS_DENIED:1, FILE_NOT_FOUND:2, FF_SILENT_ERROR:3, CUSTOM_ERROR:4, EXCEPTION:5, HTTP_ERROR:6, ABORT:7, TIMEOUT:8, OFFLINE:9};
goog.net.ErrorCode.getDebugMessage = function(errorCode) {
  switch(errorCode) {
    case goog.net.ErrorCode.NO_ERROR:
      return "No Error";
    case goog.net.ErrorCode.ACCESS_DENIED:
      return "Access denied to content document";
    case goog.net.ErrorCode.FILE_NOT_FOUND:
      return "File not found";
    case goog.net.ErrorCode.FF_SILENT_ERROR:
      return "Firefox silently errored";
    case goog.net.ErrorCode.CUSTOM_ERROR:
      return "Application custom error";
    case goog.net.ErrorCode.EXCEPTION:
      return "An exception occurred";
    case goog.net.ErrorCode.HTTP_ERROR:
      return "Http response at 400 or 500 level";
    case goog.net.ErrorCode.ABORT:
      return "Request was aborted";
    case goog.net.ErrorCode.TIMEOUT:
      return "Request timed out";
    case goog.net.ErrorCode.OFFLINE:
      return "The resource is not available offline";
    default:
      return "Unrecognized error code";
  }
};
goog.provide("goog.net.EventType");
goog.net.EventType = {COMPLETE:"complete", SUCCESS:"success", ERROR:"error", ABORT:"abort", READY:"ready", READY_STATE_CHANGE:"readystatechange", TIMEOUT:"timeout", INCREMENTAL_DATA:"incrementaldata", PROGRESS:"progress"};
goog.provide("goog.net.HttpStatus");
goog.net.HttpStatus = {CONTINUE:100, SWITCHING_PROTOCOLS:101, OK:200, CREATED:201, ACCEPTED:202, NON_AUTHORITATIVE_INFORMATION:203, NO_CONTENT:204, RESET_CONTENT:205, PARTIAL_CONTENT:206, MULTIPLE_CHOICES:300, MOVED_PERMANENTLY:301, FOUND:302, SEE_OTHER:303, NOT_MODIFIED:304, USE_PROXY:305, TEMPORARY_REDIRECT:307, BAD_REQUEST:400, UNAUTHORIZED:401, PAYMENT_REQUIRED:402, FORBIDDEN:403, NOT_FOUND:404, METHOD_NOT_ALLOWED:405, NOT_ACCEPTABLE:406, PROXY_AUTHENTICATION_REQUIRED:407, REQUEST_TIMEOUT:408, 
CONFLICT:409, GONE:410, LENGTH_REQUIRED:411, PRECONDITION_FAILED:412, REQUEST_ENTITY_TOO_LARGE:413, REQUEST_URI_TOO_LONG:414, UNSUPPORTED_MEDIA_TYPE:415, REQUEST_RANGE_NOT_SATISFIABLE:416, EXPECTATION_FAILED:417, INTERNAL_SERVER_ERROR:500, NOT_IMPLEMENTED:501, BAD_GATEWAY:502, SERVICE_UNAVAILABLE:503, GATEWAY_TIMEOUT:504, HTTP_VERSION_NOT_SUPPORTED:505, QUIRK_IE_NO_CONTENT:1223};
goog.net.HttpStatus.isSuccess = function(status) {
  switch(status) {
    case goog.net.HttpStatus.OK:
    ;
    case goog.net.HttpStatus.CREATED:
    ;
    case goog.net.HttpStatus.ACCEPTED:
    ;
    case goog.net.HttpStatus.NO_CONTENT:
    ;
    case goog.net.HttpStatus.PARTIAL_CONTENT:
    ;
    case goog.net.HttpStatus.NOT_MODIFIED:
    ;
    case goog.net.HttpStatus.QUIRK_IE_NO_CONTENT:
      return true;
    default:
      return false;
  }
};
goog.provide("goog.net.XmlHttpFactory");
goog.net.XmlHttpFactory = function() {
};
goog.net.XmlHttpFactory.prototype.cachedOptions_ = null;
goog.net.XmlHttpFactory.prototype.createInstance = goog.abstractMethod;
goog.net.XmlHttpFactory.prototype.getOptions = function() {
  return this.cachedOptions_ || (this.cachedOptions_ = this.internalGetOptions());
};
goog.net.XmlHttpFactory.prototype.internalGetOptions = goog.abstractMethod;
goog.provide("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.WrapperXmlHttpFactory = function(xhrFactory, optionsFactory) {
  goog.net.XmlHttpFactory.call(this);
  this.xhrFactory_ = xhrFactory;
  this.optionsFactory_ = optionsFactory;
};
goog.inherits(goog.net.WrapperXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.WrapperXmlHttpFactory.prototype.createInstance = function() {
  return this.xhrFactory_();
};
goog.net.WrapperXmlHttpFactory.prototype.getOptions = function() {
  return this.optionsFactory_();
};
goog.provide("goog.net.DefaultXmlHttpFactory");
goog.provide("goog.net.XmlHttp");
goog.provide("goog.net.XmlHttp.OptionType");
goog.provide("goog.net.XmlHttp.ReadyState");
goog.require("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.XmlHttp = function() {
  return goog.net.XmlHttp.factory_.createInstance();
};
goog.net.XmlHttp.ASSUME_NATIVE_XHR = false;
goog.net.XmlHttp.getOptions = function() {
  return goog.net.XmlHttp.factory_.getOptions();
};
goog.net.XmlHttp.OptionType = {USE_NULL_FUNCTION:0, LOCAL_REQUEST_ERROR:1};
goog.net.XmlHttp.ReadyState = {UNINITIALIZED:0, LOADING:1, LOADED:2, INTERACTIVE:3, COMPLETE:4};
goog.net.XmlHttp.factory_;
goog.net.XmlHttp.setFactory = function(factory, optionsFactory) {
  goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory((factory), (optionsFactory)));
};
goog.net.XmlHttp.setGlobalFactory = function(factory) {
  goog.net.XmlHttp.factory_ = factory;
};
goog.net.DefaultXmlHttpFactory = function() {
  goog.net.XmlHttpFactory.call(this);
};
goog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {
  var progId = this.getProgId_();
  if (progId) {
    return new ActiveXObject(progId);
  } else {
    return new XMLHttpRequest;
  }
};
goog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {
  var progId = this.getProgId_();
  var options = {};
  if (progId) {
    options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = true;
    options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = true;
  }
  return options;
};
goog.net.DefaultXmlHttpFactory.prototype.ieProgId_;
goog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {
  if (goog.net.XmlHttp.ASSUME_NATIVE_XHR) {
    return "";
  }
  if (!this.ieProgId_ && (typeof XMLHttpRequest == "undefined" && typeof ActiveXObject != "undefined")) {
    var ACTIVE_X_IDENTS = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"];
    for (var i = 0;i < ACTIVE_X_IDENTS.length;i++) {
      var candidate = ACTIVE_X_IDENTS[i];
      try {
        new ActiveXObject(candidate);
        this.ieProgId_ = candidate;
        return candidate;
      } catch (e) {
      }
    }
    throw Error("Could not create ActiveXObject. ActiveX might be disabled," + " or MSXML might not be installed");
  }
  return(this.ieProgId_);
};
goog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory);
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.provide("goog.uri.utils.QueryArray");
goog.provide("goog.uri.utils.QueryValue");
goog.provide("goog.uri.utils.StandardQueryParam");
goog.require("goog.asserts");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = "";
  if (opt_scheme) {
    out += opt_scheme + ":";
  }
  if (opt_domain) {
    out += "//";
    if (opt_userInfo) {
      out += opt_userInfo + "@";
    }
    out += opt_domain;
    if (opt_port) {
      out += ":" + opt_port;
    }
  }
  if (opt_path) {
    out += opt_path;
  }
  if (opt_queryData) {
    out += "?" + opt_queryData;
  }
  if (opt_fragment) {
    out += "#" + opt_fragment;
  }
  return out;
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([^/#?]*?)" + "(?::([0-9]+))?" + "(?\x3d[/#?]|$)" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#(.*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  return(uri.match(goog.uri.utils.splitRe_));
};
goog.uri.utils.decodeIfPossible_ = function(uri) {
  return uri && decodeURIComponent(uri);
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null;
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri);
};
goog.uri.utils.getEffectiveScheme = function(uri) {
  var scheme = goog.uri.utils.getScheme(uri);
  if (!scheme && self.location) {
    var protocol = self.location.protocol;
    scheme = protocol.substr(0, protocol.length - 1);
  }
  return scheme ? scheme.toLowerCase() : "";
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri);
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri));
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri);
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri));
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null;
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri);
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri));
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri);
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1);
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "");
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri));
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex);
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && (pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  if (goog.DEBUG && (uri.indexOf("#") >= 0 || uri.indexOf("?") >= 0)) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not " + "supported: [" + uri + "]");
  }
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.appendQueryData_ = function(buffer) {
  if (buffer[1]) {
    var baseUri = (buffer[0]);
    var hashIndex = baseUri.indexOf("#");
    if (hashIndex >= 0) {
      buffer.push(baseUri.substr(hashIndex));
      buffer[0] = baseUri = baseUri.substr(0, hashIndex);
    }
    var questionIndex = baseUri.indexOf("?");
    if (questionIndex < 0) {
      buffer[1] = "?";
    } else {
      if (questionIndex == baseUri.length - 1) {
        buffer[1] = undefined;
      }
    }
  }
  return buffer.join("");
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  if (goog.isArray(value)) {
    goog.asserts.assertArray(value);
    for (var j = 0;j < value.length;j++) {
      goog.uri.utils.appendKeyValuePairs_(key, String(value[j]), pairs);
    }
  } else {
    if (value != null) {
      pairs.push("\x26", key, value === "" ? "" : "\x3d", goog.string.urlEncode(value));
    }
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(buffer, keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  for (var i = opt_startIndex || 0;i < keysAndValues.length;i += 2) {
    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], buffer);
  }
  return buffer;
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  var buffer = goog.uri.utils.buildQueryDataBuffer_([], keysAndValues, opt_startIndex);
  buffer[0] = "";
  return buffer.join("");
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(buffer, map) {
  for (var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], buffer);
  }
  return buffer;
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var buffer = goog.uri.utils.buildQueryDataBufferFromMap_([], map);
  buffer[0] = "";
  return buffer.join("");
};
goog.uri.utils.appendParams = function(uri, var_args) {
  return goog.uri.utils.appendQueryData_(arguments.length == 2 ? goog.uri.utils.buildQueryDataBuffer_([uri], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([uri], arguments, 1));
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([uri], map));
};
goog.uri.utils.appendParam = function(uri, key, value) {
  return goog.uri.utils.appendQueryData_([uri, "\x26", key, "\x3d", goog.string.urlEncode(value)]);
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while ((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if (precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if (!followingChar || (followingChar == goog.uri.utils.CharCode_.EQUAL || (followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH))) {
        return index;
      }
    }
    index += keyLength + 1;
  }
  return-1;
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0;
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if (foundIndex < 0) {
    return null;
  } else {
    var endPosition = uri.indexOf("\x26", foundIndex);
    if (endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex));
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("\x26", foundIndex);
    if (position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)));
  }
  return result;
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("\x26", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex);
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1");
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value);
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if (goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1);
  }
  if (goog.string.startsWith(path, "/")) {
    path = path.substr(1);
  }
  return goog.string.buildString(baseUri, "/", path);
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString());
};
goog.provide("goog.net.XhrIo");
goog.provide("goog.net.XhrIo.ResponseType");
goog.require("goog.Timer");
goog.require("goog.array");
goog.require("goog.debug.Logger");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.events");
goog.require("goog.events.EventTarget");
goog.require("goog.json");
goog.require("goog.net.ErrorCode");
goog.require("goog.net.EventType");
goog.require("goog.net.HttpStatus");
goog.require("goog.net.XmlHttp");
goog.require("goog.object");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.net.XhrIo = function(opt_xmlHttpFactory) {
  goog.events.EventTarget.call(this);
  this.headers = new goog.structs.Map;
  this.xmlHttpFactory_ = opt_xmlHttpFactory || null;
};
goog.inherits(goog.net.XhrIo, goog.events.EventTarget);
goog.net.XhrIo.ResponseType = {DEFAULT:"", TEXT:"text", DOCUMENT:"document", BLOB:"blob", ARRAY_BUFFER:"arraybuffer"};
goog.net.XhrIo.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.XhrIo");
goog.net.XhrIo.CONTENT_TYPE_HEADER = "Content-Type";
goog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?$/i;
goog.net.XhrIo.FORM_CONTENT_TYPE = "application/x-www-form-urlencoded;charset\x3dutf-8";
goog.net.XhrIo.sendInstances_ = [];
goog.net.XhrIo.send = function(url, opt_callback, opt_method, opt_content, opt_headers, opt_timeoutInterval, opt_withCredentials) {
  var x = new goog.net.XhrIo;
  goog.net.XhrIo.sendInstances_.push(x);
  if (opt_callback) {
    goog.events.listen(x, goog.net.EventType.COMPLETE, opt_callback);
  }
  goog.events.listen(x, goog.net.EventType.READY, goog.partial(goog.net.XhrIo.cleanupSend_, x));
  if (opt_timeoutInterval) {
    x.setTimeoutInterval(opt_timeoutInterval);
  }
  if (opt_withCredentials) {
    x.setWithCredentials(opt_withCredentials);
  }
  x.send(url, opt_method, opt_content, opt_headers);
};
goog.net.XhrIo.cleanup = function() {
  var instances = goog.net.XhrIo.sendInstances_;
  while (instances.length) {
    instances.pop().dispose();
  }
};
goog.net.XhrIo.protectEntryPoints = function(errorHandler) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = errorHandler.protectEntryPoint(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);
};
goog.net.XhrIo.cleanupSend_ = function(XhrIo) {
  XhrIo.dispose();
  goog.array.remove(goog.net.XhrIo.sendInstances_, XhrIo);
};
goog.net.XhrIo.prototype.active_ = false;
goog.net.XhrIo.prototype.xhr_ = null;
goog.net.XhrIo.prototype.xhrOptions_ = null;
goog.net.XhrIo.prototype.lastUri_ = "";
goog.net.XhrIo.prototype.lastMethod_ = "";
goog.net.XhrIo.prototype.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
goog.net.XhrIo.prototype.lastError_ = "";
goog.net.XhrIo.prototype.errorDispatched_ = false;
goog.net.XhrIo.prototype.inSend_ = false;
goog.net.XhrIo.prototype.inOpen_ = false;
goog.net.XhrIo.prototype.inAbort_ = false;
goog.net.XhrIo.prototype.timeoutInterval_ = 0;
goog.net.XhrIo.prototype.timeoutId_ = null;
goog.net.XhrIo.prototype.responseType_ = goog.net.XhrIo.ResponseType.DEFAULT;
goog.net.XhrIo.prototype.withCredentials_ = false;
goog.net.XhrIo.prototype.getTimeoutInterval = function() {
  return this.timeoutInterval_;
};
goog.net.XhrIo.prototype.setTimeoutInterval = function(ms) {
  this.timeoutInterval_ = Math.max(0, ms);
};
goog.net.XhrIo.prototype.setResponseType = function(type) {
  this.responseType_ = type;
};
goog.net.XhrIo.prototype.getResponseType = function() {
  return this.responseType_;
};
goog.net.XhrIo.prototype.setWithCredentials = function(withCredentials) {
  this.withCredentials_ = withCredentials;
};
goog.net.XhrIo.prototype.getWithCredentials = function() {
  return this.withCredentials_;
};
goog.net.XhrIo.prototype.send = function(url, opt_method, opt_content, opt_headers) {
  if (this.xhr_) {
    throw Error("[goog.net.XhrIo] Object is active with another request\x3d" + this.lastUri_ + "; newUri\x3d" + url);
  }
  var method = opt_method ? opt_method.toUpperCase() : "GET";
  this.lastUri_ = url;
  this.lastError_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastMethod_ = method;
  this.errorDispatched_ = false;
  this.active_ = true;
  this.xhr_ = this.createXhr();
  this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() : goog.net.XmlHttp.getOptions();
  this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);
  try {
    this.logger_.fine(this.formatMsg_("Opening Xhr"));
    this.inOpen_ = true;
    this.xhr_.open(method, url, true);
    this.inOpen_ = false;
  } catch (err) {
    this.logger_.fine(this.formatMsg_("Error opening Xhr: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
    return;
  }
  var content = opt_content || "";
  var headers = this.headers.clone();
  if (opt_headers) {
    goog.structs.forEach(opt_headers, function(value, key) {
      headers.set(key, value);
    });
  }
  var contentIsFormData = goog.global["FormData"] && content instanceof goog.global["FormData"];
  if (method == "POST" && (!headers.containsKey(goog.net.XhrIo.CONTENT_TYPE_HEADER) && !contentIsFormData)) {
    headers.set(goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE);
  }
  goog.structs.forEach(headers, function(value, key) {
    this.xhr_.setRequestHeader(key, value);
  }, this);
  if (this.responseType_) {
    this.xhr_.responseType = this.responseType_;
  }
  if (goog.object.containsKey(this.xhr_, "withCredentials")) {
    this.xhr_.withCredentials = this.withCredentials_;
  }
  try {
    if (this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null;
    }
    if (this.timeoutInterval_ > 0) {
      this.logger_.fine(this.formatMsg_("Will abort after " + this.timeoutInterval_ + "ms if incomplete"));
      this.timeoutId_ = goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.timeout_, this), this.timeoutInterval_);
    }
    this.logger_.fine(this.formatMsg_("Sending request"));
    this.inSend_ = true;
    this.xhr_.send(content);
    this.inSend_ = false;
  } catch (err) {
    this.logger_.fine(this.formatMsg_("Send error: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
  }
};
goog.net.XhrIo.prototype.createXhr = function() {
  return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() : goog.net.XmlHttp();
};
goog.net.XhrIo.prototype.timeout_ = function() {
  if (typeof goog == "undefined") {
  } else {
    if (this.xhr_) {
      this.lastError_ = "Timed out after " + this.timeoutInterval_ + "ms, aborting";
      this.lastErrorCode_ = goog.net.ErrorCode.TIMEOUT;
      this.logger_.fine(this.formatMsg_(this.lastError_));
      this.dispatchEvent(goog.net.EventType.TIMEOUT);
      this.abort(goog.net.ErrorCode.TIMEOUT);
    }
  }
};
goog.net.XhrIo.prototype.error_ = function(errorCode, err) {
  this.active_ = false;
  if (this.xhr_) {
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
  }
  this.lastError_ = err;
  this.lastErrorCode_ = errorCode;
  this.dispatchErrors_();
  this.cleanUpXhr_();
};
goog.net.XhrIo.prototype.dispatchErrors_ = function() {
  if (!this.errorDispatched_) {
    this.errorDispatched_ = true;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ERROR);
  }
};
goog.net.XhrIo.prototype.abort = function(opt_failureCode) {
  if (this.xhr_ && this.active_) {
    this.logger_.fine(this.formatMsg_("Aborting"));
    this.active_ = false;
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
    this.lastErrorCode_ = opt_failureCode || goog.net.ErrorCode.ABORT;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ABORT);
    this.cleanUpXhr_();
  }
};
goog.net.XhrIo.prototype.disposeInternal = function() {
  if (this.xhr_) {
    if (this.active_) {
      this.active_ = false;
      this.inAbort_ = true;
      this.xhr_.abort();
      this.inAbort_ = false;
    }
    this.cleanUpXhr_(true);
  }
  goog.net.XhrIo.superClass_.disposeInternal.call(this);
};
goog.net.XhrIo.prototype.onReadyStateChange_ = function() {
  if (!this.inOpen_ && (!this.inSend_ && !this.inAbort_)) {
    this.onReadyStateChangeEntryPoint_();
  } else {
    this.onReadyStateChangeHelper_();
  }
};
goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {
  this.onReadyStateChangeHelper_();
};
goog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {
  if (!this.active_) {
    return;
  }
  if (typeof goog == "undefined") {
  } else {
    if (this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] && (this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE && this.getStatus() == 2)) {
      this.logger_.fine(this.formatMsg_("Local request error detected and ignored"));
    } else {
      if (this.inSend_ && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {
        goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.onReadyStateChange_, this), 0);
        return;
      }
      this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE);
      if (this.isComplete()) {
        this.logger_.fine(this.formatMsg_("Request complete"));
        this.active_ = false;
        try {
          if (this.isSuccess()) {
            this.dispatchEvent(goog.net.EventType.COMPLETE);
            this.dispatchEvent(goog.net.EventType.SUCCESS);
          } else {
            this.lastErrorCode_ = goog.net.ErrorCode.HTTP_ERROR;
            this.lastError_ = this.getStatusText() + " [" + this.getStatus() + "]";
            this.dispatchErrors_();
          }
        } finally {
          this.cleanUpXhr_();
        }
      }
    }
  }
};
goog.net.XhrIo.prototype.cleanUpXhr_ = function(opt_fromDispose) {
  if (this.xhr_) {
    var xhr = this.xhr_;
    var clearedOnReadyStateChange = this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ? goog.nullFunction : null;
    this.xhr_ = null;
    this.xhrOptions_ = null;
    if (this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null;
    }
    if (!opt_fromDispose) {
      this.dispatchEvent(goog.net.EventType.READY);
    }
    try {
      xhr.onreadystatechange = clearedOnReadyStateChange;
    } catch (e) {
      this.logger_.severe("Problem encountered resetting onreadystatechange: " + e.message);
    }
  }
};
goog.net.XhrIo.prototype.isActive = function() {
  return!!this.xhr_;
};
goog.net.XhrIo.prototype.isComplete = function() {
  return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE;
};
goog.net.XhrIo.prototype.isSuccess = function() {
  var status = this.getStatus();
  return goog.net.HttpStatus.isSuccess(status) || status === 0 && !this.isLastUriEffectiveSchemeHttp_();
};
goog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {
  var scheme = goog.uri.utils.getEffectiveScheme(String(this.lastUri_));
  return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(scheme);
};
goog.net.XhrIo.prototype.getReadyState = function() {
  return this.xhr_ ? (this.xhr_.readyState) : goog.net.XmlHttp.ReadyState.UNINITIALIZED;
};
goog.net.XhrIo.prototype.getStatus = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.status : -1;
  } catch (e) {
    this.logger_.warning("Can not get status: " + e.message);
    return-1;
  }
};
goog.net.XhrIo.prototype.getStatusText = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.statusText : "";
  } catch (e) {
    this.logger_.fine("Can not get status: " + e.message);
    return "";
  }
};
goog.net.XhrIo.prototype.getLastUri = function() {
  return String(this.lastUri_);
};
goog.net.XhrIo.prototype.getResponseText = function() {
  try {
    return this.xhr_ ? this.xhr_.responseText : "";
  } catch (e) {
    this.logger_.fine("Can not get responseText: " + e.message);
    return "";
  }
};
goog.net.XhrIo.prototype.getResponseBody = function() {
  try {
    if (this.xhr_ && "responseBody" in this.xhr_) {
      return this.xhr_["responseBody"];
    }
  } catch (e) {
    this.logger_.fine("Can not get responseBody: " + e.message);
  }
  return null;
};
goog.net.XhrIo.prototype.getResponseXml = function() {
  try {
    return this.xhr_ ? this.xhr_.responseXML : null;
  } catch (e) {
    this.logger_.fine("Can not get responseXML: " + e.message);
    return null;
  }
};
goog.net.XhrIo.prototype.getResponseJson = function(opt_xssiPrefix) {
  if (!this.xhr_) {
    return undefined;
  }
  var responseText = this.xhr_.responseText;
  if (opt_xssiPrefix && responseText.indexOf(opt_xssiPrefix) == 0) {
    responseText = responseText.substring(opt_xssiPrefix.length);
  }
  return goog.json.parse(responseText);
};
goog.net.XhrIo.prototype.getResponse = function() {
  try {
    if (!this.xhr_) {
      return null;
    }
    if ("response" in this.xhr_) {
      return this.xhr_.response;
    }
    switch(this.responseType_) {
      case goog.net.XhrIo.ResponseType.DEFAULT:
      ;
      case goog.net.XhrIo.ResponseType.TEXT:
        return this.xhr_.responseText;
      case goog.net.XhrIo.ResponseType.ARRAY_BUFFER:
        if ("mozResponseArrayBuffer" in this.xhr_) {
          return this.xhr_.mozResponseArrayBuffer;
        }
      ;
    }
    this.logger_.severe("Response type " + this.responseType_ + " is not " + "supported on this browser");
    return null;
  } catch (e) {
    this.logger_.fine("Can not get response: " + e.message);
    return null;
  }
};
goog.net.XhrIo.prototype.getResponseHeader = function(key) {
  return this.xhr_ && this.isComplete() ? this.xhr_.getResponseHeader(key) : undefined;
};
goog.net.XhrIo.prototype.getAllResponseHeaders = function() {
  return this.xhr_ && this.isComplete() ? this.xhr_.getAllResponseHeaders() : "";
};
goog.net.XhrIo.prototype.getLastErrorCode = function() {
  return this.lastErrorCode_;
};
goog.net.XhrIo.prototype.getLastError = function() {
  return goog.isString(this.lastError_) ? this.lastError_ : String(this.lastError_);
};
goog.net.XhrIo.prototype.formatMsg_ = function(msg) {
  return msg + " [" + this.lastMethod_ + " " + this.lastUri_ + " " + this.getStatus() + "]";
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);
});
goog.provide("goog.structs.Node");
goog.structs.Node = function(key, value) {
  this.key_ = key;
  this.value_ = value;
};
goog.structs.Node.prototype.getKey = function() {
  return this.key_;
};
goog.structs.Node.prototype.getValue = function() {
  return this.value_;
};
goog.structs.Node.prototype.clone = function() {
  return new goog.structs.Node(this.key_, this.value_);
};
goog.provide("goog.Uri");
goog.provide("goog.Uri.QueryData");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.uri.utils.ComponentIndex");
goog.Uri = function(opt_uri, opt_ignoreCase) {
  var m;
  if (opt_uri instanceof goog.Uri) {
    this.ignoreCase_ = goog.isDef(opt_ignoreCase) ? opt_ignoreCase : opt_uri.getIgnoreCase();
    this.setScheme(opt_uri.getScheme());
    this.setUserInfo(opt_uri.getUserInfo());
    this.setDomain(opt_uri.getDomain());
    this.setPort(opt_uri.getPort());
    this.setPath(opt_uri.getPath());
    this.setQueryData(opt_uri.getQueryData().clone());
    this.setFragment(opt_uri.getFragment());
  } else {
    if (opt_uri && (m = goog.uri.utils.split(String(opt_uri)))) {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || "", true);
      this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || "", true);
      this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || "", true);
      this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);
      this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || "", true);
      this.setQueryData(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", true);
      this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || "", true);
    } else {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.queryData_ = new goog.Uri.QueryData(null, null, this.ignoreCase_);
    }
  }
};
goog.Uri.preserveParameterTypesCompatibilityFlag = false;
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.scheme_ = "";
goog.Uri.prototype.userInfo_ = "";
goog.Uri.prototype.domain_ = "";
goog.Uri.prototype.port_ = null;
goog.Uri.prototype.path_ = "";
goog.Uri.prototype.queryData_;
goog.Uri.prototype.fragment_ = "";
goog.Uri.prototype.isReadOnly_ = false;
goog.Uri.prototype.ignoreCase_ = false;
goog.Uri.prototype.toString = function() {
  var out = [];
  var scheme = this.getScheme();
  if (scheme) {
    out.push(goog.Uri.encodeSpecialChars_(scheme, goog.Uri.reDisallowedInSchemeOrUserInfo_), ":");
  }
  var domain = this.getDomain();
  if (domain) {
    out.push("//");
    var userInfo = this.getUserInfo();
    if (userInfo) {
      out.push(goog.Uri.encodeSpecialChars_(userInfo, goog.Uri.reDisallowedInSchemeOrUserInfo_), "@");
    }
    out.push(goog.string.urlEncode(domain));
    var port = this.getPort();
    if (port != null) {
      out.push(":", String(port));
    }
  }
  var path = this.getPath();
  if (path) {
    if (this.hasDomain() && path.charAt(0) != "/") {
      out.push("/");
    }
    out.push(goog.Uri.encodeSpecialChars_(path, path.charAt(0) == "/" ? goog.Uri.reDisallowedInAbsolutePath_ : goog.Uri.reDisallowedInRelativePath_));
  }
  var query = this.getEncodedQuery();
  if (query) {
    out.push("?", query);
  }
  var fragment = this.getFragment();
  if (fragment) {
    out.push("#", goog.Uri.encodeSpecialChars_(fragment, goog.Uri.reDisallowedInFragment_));
  }
  return out.join("");
};
goog.Uri.prototype.resolve = function(relativeUri) {
  var absoluteUri = this.clone();
  var overridden = relativeUri.hasScheme();
  if (overridden) {
    absoluteUri.setScheme(relativeUri.getScheme());
  } else {
    overridden = relativeUri.hasUserInfo();
  }
  if (overridden) {
    absoluteUri.setUserInfo(relativeUri.getUserInfo());
  } else {
    overridden = relativeUri.hasDomain();
  }
  if (overridden) {
    absoluteUri.setDomain(relativeUri.getDomain());
  } else {
    overridden = relativeUri.hasPort();
  }
  var path = relativeUri.getPath();
  if (overridden) {
    absoluteUri.setPort(relativeUri.getPort());
  } else {
    overridden = relativeUri.hasPath();
    if (overridden) {
      if (path.charAt(0) != "/") {
        if (this.hasDomain() && !this.hasPath()) {
          path = "/" + path;
        } else {
          var lastSlashIndex = absoluteUri.getPath().lastIndexOf("/");
          if (lastSlashIndex != -1) {
            path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path;
          }
        }
      }
      path = goog.Uri.removeDotSegments(path);
    }
  }
  if (overridden) {
    absoluteUri.setPath(path);
  } else {
    overridden = relativeUri.hasQuery();
  }
  if (overridden) {
    absoluteUri.setQueryData(relativeUri.getDecodedQuery());
  } else {
    overridden = relativeUri.hasFragment();
  }
  if (overridden) {
    absoluteUri.setFragment(relativeUri.getFragment());
  }
  return absoluteUri;
};
goog.Uri.prototype.clone = function() {
  return new goog.Uri(this);
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_;
};
goog.Uri.prototype.setScheme = function(newScheme, opt_decode) {
  this.enforceReadOnly();
  this.scheme_ = opt_decode ? goog.Uri.decodeOrEmpty_(newScheme) : newScheme;
  if (this.scheme_) {
    this.scheme_ = this.scheme_.replace(/:$/, "");
  }
  return this;
};
goog.Uri.prototype.hasScheme = function() {
  return!!this.scheme_;
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_;
};
goog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {
  this.enforceReadOnly();
  this.userInfo_ = opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;
  return this;
};
goog.Uri.prototype.hasUserInfo = function() {
  return!!this.userInfo_;
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_;
};
goog.Uri.prototype.setDomain = function(newDomain, opt_decode) {
  this.enforceReadOnly();
  this.domain_ = opt_decode ? goog.Uri.decodeOrEmpty_(newDomain) : newDomain;
  return this;
};
goog.Uri.prototype.hasDomain = function() {
  return!!this.domain_;
};
goog.Uri.prototype.getPort = function() {
  return this.port_;
};
goog.Uri.prototype.setPort = function(newPort) {
  this.enforceReadOnly();
  if (newPort) {
    newPort = Number(newPort);
    if (isNaN(newPort) || newPort < 0) {
      throw Error("Bad port number " + newPort);
    }
    this.port_ = newPort;
  } else {
    this.port_ = null;
  }
  return this;
};
goog.Uri.prototype.hasPort = function() {
  return this.port_ != null;
};
goog.Uri.prototype.getPath = function() {
  return this.path_;
};
goog.Uri.prototype.setPath = function(newPath, opt_decode) {
  this.enforceReadOnly();
  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath) : newPath;
  return this;
};
goog.Uri.prototype.hasPath = function() {
  return!!this.path_;
};
goog.Uri.prototype.hasQuery = function() {
  return this.queryData_.toString() !== "";
};
goog.Uri.prototype.setQueryData = function(queryData, opt_decode) {
  this.enforceReadOnly();
  if (queryData instanceof goog.Uri.QueryData) {
    this.queryData_ = queryData;
    this.queryData_.setIgnoreCase(this.ignoreCase_);
  } else {
    if (!opt_decode) {
      queryData = goog.Uri.encodeSpecialChars_(queryData, goog.Uri.reDisallowedInQuery_);
    }
    this.queryData_ = new goog.Uri.QueryData(queryData, null, this.ignoreCase_);
  }
  return this;
};
goog.Uri.prototype.setQuery = function(newQuery, opt_decode) {
  return this.setQueryData(newQuery, opt_decode);
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString();
};
goog.Uri.prototype.getDecodedQuery = function() {
  return this.queryData_.toDecodedString();
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_;
};
goog.Uri.prototype.getQuery = function() {
  return this.getEncodedQuery();
};
goog.Uri.prototype.setParameterValue = function(key, value) {
  this.enforceReadOnly();
  this.queryData_.set(key, value);
  return this;
};
goog.Uri.prototype.setParameterValues = function(key, values) {
  this.enforceReadOnly();
  if (!goog.isArray(values)) {
    values = [String(values)];
  }
  this.queryData_.setValues(key, (values));
  return this;
};
goog.Uri.prototype.getParameterValues = function(name) {
  return this.queryData_.getValues(name);
};
goog.Uri.prototype.getParameterValue = function(paramName) {
  return(this.queryData_.get(paramName));
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_;
};
goog.Uri.prototype.setFragment = function(newFragment, opt_decode) {
  this.enforceReadOnly();
  this.fragment_ = opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;
  return this;
};
goog.Uri.prototype.hasFragment = function() {
  return!!this.fragment_;
};
goog.Uri.prototype.hasSameDomainAs = function(uri2) {
  return(!this.hasDomain() && !uri2.hasDomain() || this.getDomain() == uri2.getDomain()) && (!this.hasPort() && !uri2.hasPort() || this.getPort() == uri2.getPort());
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this;
};
goog.Uri.prototype.removeParameter = function(key) {
  this.enforceReadOnly();
  this.queryData_.remove(key);
  return this;
};
goog.Uri.prototype.setReadOnly = function(isReadOnly) {
  this.isReadOnly_ = isReadOnly;
  return this;
};
goog.Uri.prototype.isReadOnly = function() {
  return this.isReadOnly_;
};
goog.Uri.prototype.enforceReadOnly = function() {
  if (this.isReadOnly_) {
    throw Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(ignoreCase) {
  this.ignoreCase_ = ignoreCase;
  if (this.queryData_) {
    this.queryData_.setIgnoreCase(ignoreCase);
  }
  return this;
};
goog.Uri.prototype.getIgnoreCase = function() {
  return this.ignoreCase_;
};
goog.Uri.parse = function(uri, opt_ignoreCase) {
  return uri instanceof goog.Uri ? uri.clone() : new goog.Uri(uri, opt_ignoreCase);
};
goog.Uri.create = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query, opt_fragment, opt_ignoreCase) {
  var uri = new goog.Uri(null, opt_ignoreCase);
  opt_scheme && uri.setScheme(opt_scheme);
  opt_userInfo && uri.setUserInfo(opt_userInfo);
  opt_domain && uri.setDomain(opt_domain);
  opt_port && uri.setPort(opt_port);
  opt_path && uri.setPath(opt_path);
  opt_query && uri.setQueryData(opt_query);
  opt_fragment && uri.setFragment(opt_fragment);
  return uri;
};
goog.Uri.resolve = function(base, rel) {
  if (!(base instanceof goog.Uri)) {
    base = goog.Uri.parse(base);
  }
  if (!(rel instanceof goog.Uri)) {
    rel = goog.Uri.parse(rel);
  }
  return base.resolve(rel);
};
goog.Uri.removeDotSegments = function(path) {
  if (path == ".." || path == ".") {
    return "";
  } else {
    if (!goog.string.contains(path, "./") && !goog.string.contains(path, "/.")) {
      return path;
    } else {
      var leadingSlash = goog.string.startsWith(path, "/");
      var segments = path.split("/");
      var out = [];
      for (var pos = 0;pos < segments.length;) {
        var segment = segments[pos++];
        if (segment == ".") {
          if (leadingSlash && pos == segments.length) {
            out.push("");
          }
        } else {
          if (segment == "..") {
            if (out.length > 1 || out.length == 1 && out[0] != "") {
              out.pop();
            }
            if (leadingSlash && pos == segments.length) {
              out.push("");
            }
          } else {
            out.push(segment);
            leadingSlash = true;
          }
        }
      }
      return out.join("/");
    }
  }
};
goog.Uri.decodeOrEmpty_ = function(val) {
  return val ? decodeURIComponent(val) : "";
};
goog.Uri.encodeSpecialChars_ = function(unescapedPart, extra) {
  if (goog.isString(unescapedPart)) {
    return encodeURI(unescapedPart).replace(extra, goog.Uri.encodeChar_);
  }
  return null;
};
goog.Uri.encodeChar_ = function(ch) {
  var n = ch.charCodeAt(0);
  return "%" + (n >> 4 & 15).toString(16) + (n & 15).toString(16);
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInRelativePath_ = /[\#\?:]/g;
goog.Uri.reDisallowedInAbsolutePath_ = /[\#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[\#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(uri1String, uri2String) {
  var pieces1 = goog.uri.utils.split(uri1String);
  var pieces2 = goog.uri.utils.split(uri2String);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.Uri.QueryData = function(opt_query, opt_uri, opt_ignoreCase) {
  this.encodedQuery_ = opt_query || null;
  this.ignoreCase_ = !!opt_ignoreCase;
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if (!this.keyMap_) {
    this.keyMap_ = new goog.structs.Map;
    this.count_ = 0;
    if (this.encodedQuery_) {
      var pairs = this.encodedQuery_.split("\x26");
      for (var i = 0;i < pairs.length;i++) {
        var indexOfEquals = pairs[i].indexOf("\x3d");
        var name = null;
        var value = null;
        if (indexOfEquals >= 0) {
          name = pairs[i].substring(0, indexOfEquals);
          value = pairs[i].substring(indexOfEquals + 1);
        } else {
          name = pairs[i];
        }
        name = goog.string.urlDecode(name);
        name = this.getKeyName_(name);
        this.add(name, value ? goog.string.urlDecode(value) : "");
      }
    }
  }
};
goog.Uri.QueryData.createFromMap = function(map, opt_uri, opt_ignoreCase) {
  var keys = goog.structs.getKeys(map);
  if (typeof keys == "undefined") {
    throw Error("Keys are undefined");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  var values = goog.structs.getValues(map);
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var value = values[i];
    if (!goog.isArray(value)) {
      queryData.add(key, value);
    } else {
      queryData.setValues(key, value);
    }
  }
  return queryData;
};
goog.Uri.QueryData.createFromKeysValues = function(keys, values, opt_uri, opt_ignoreCase) {
  if (keys.length != values.length) {
    throw Error("Mismatched lengths for keys/values");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  for (var i = 0;i < keys.length;i++) {
    queryData.add(keys[i], values[i]);
  }
  return queryData;
};
goog.Uri.QueryData.prototype.keyMap_ = null;
goog.Uri.QueryData.prototype.count_ = null;
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_;
};
goog.Uri.QueryData.prototype.add = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  var values = this.keyMap_.get(key);
  if (!values) {
    this.keyMap_.set(key, values = []);
  }
  values.push(value);
  this.count_++;
  return this;
};
goog.Uri.QueryData.prototype.remove = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if (this.keyMap_.containsKey(key)) {
    this.invalidateCache_();
    this.count_ -= this.keyMap_.get(key).length;
    return this.keyMap_.remove(key);
  }
  return false;
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  this.keyMap_ = null;
  this.count_ = 0;
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return this.count_ == 0;
};
goog.Uri.QueryData.prototype.containsKey = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  return this.keyMap_.containsKey(key);
};
goog.Uri.QueryData.prototype.containsValue = function(value) {
  var vals = this.getValues();
  return goog.array.contains(vals, value);
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  var vals = (this.keyMap_.getValues());
  var keys = this.keyMap_.getKeys();
  var rv = [];
  for (var i = 0;i < keys.length;i++) {
    var val = vals[i];
    for (var j = 0;j < val.length;j++) {
      rv.push(keys[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.getValues = function(opt_key) {
  this.ensureKeyMapInitialized_();
  var rv = [];
  if (opt_key) {
    if (this.containsKey(opt_key)) {
      rv = goog.array.concat(rv, this.keyMap_.get(this.getKeyName_(opt_key)));
    }
  } else {
    var values = (this.keyMap_.getValues());
    for (var i = 0;i < values.length;i++) {
      rv = goog.array.concat(rv, values[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.set = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if (this.containsKey(key)) {
    this.count_ -= this.keyMap_.get(key).length;
  }
  this.keyMap_.set(key, [value]);
  this.count_++;
  return this;
};
goog.Uri.QueryData.prototype.get = function(key, opt_default) {
  var values = key ? this.getValues(key) : [];
  if (goog.Uri.preserveParameterTypesCompatibilityFlag) {
    return values.length > 0 ? values[0] : opt_default;
  } else {
    return values.length > 0 ? String(values[0]) : opt_default;
  }
};
goog.Uri.QueryData.prototype.setValues = function(key, values) {
  this.remove(key);
  if (values.length > 0) {
    this.invalidateCache_();
    this.keyMap_.set(this.getKeyName_(key), goog.array.clone(values));
    this.count_ += values.length;
  }
};
goog.Uri.QueryData.prototype.toString = function() {
  if (this.encodedQuery_) {
    return this.encodedQuery_;
  }
  if (!this.keyMap_) {
    return "";
  }
  var sb = [];
  var keys = this.keyMap_.getKeys();
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var encodedKey = goog.string.urlEncode(key);
    var val = this.getValues(key);
    for (var j = 0;j < val.length;j++) {
      var param = encodedKey;
      if (val[j] !== "") {
        param += "\x3d" + goog.string.urlEncode(val[j]);
      }
      sb.push(param);
    }
  }
  return this.encodedQuery_ = sb.join("\x26");
};
goog.Uri.QueryData.prototype.toDecodedString = function() {
  return goog.Uri.decodeOrEmpty_(this.toString());
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  this.encodedQuery_ = null;
};
goog.Uri.QueryData.prototype.filterKeys = function(keys) {
  this.ensureKeyMapInitialized_();
  goog.structs.forEach(this.keyMap_, function(value, key, map) {
    if (!goog.array.contains(keys, key)) {
      this.remove(key);
    }
  }, this);
  return this;
};
goog.Uri.QueryData.prototype.clone = function() {
  var rv = new goog.Uri.QueryData;
  rv.encodedQuery_ = this.encodedQuery_;
  if (this.keyMap_) {
    rv.keyMap_ = this.keyMap_.clone();
    rv.count_ = this.count_;
  }
  return rv;
};
goog.Uri.QueryData.prototype.getKeyName_ = function(arg) {
  var keyName = String(arg);
  if (this.ignoreCase_) {
    keyName = keyName.toLowerCase();
  }
  return keyName;
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {
  var resetKeys = ignoreCase && !this.ignoreCase_;
  if (resetKeys) {
    this.ensureKeyMapInitialized_();
    this.invalidateCache_();
    goog.structs.forEach(this.keyMap_, function(value, key) {
      var lowerCase = key.toLowerCase();
      if (key != lowerCase) {
        this.remove(key);
        this.setValues(lowerCase, value);
      }
    }, this);
  }
  this.ignoreCase_ = ignoreCase;
};
goog.Uri.QueryData.prototype.extend = function(var_args) {
  for (var i = 0;i < arguments.length;i++) {
    var data = arguments[i];
    goog.structs.forEach(data, function(value, key) {
      this.add(key, value);
    }, this);
  }
};
goog.provide("goog.Delay");
goog.provide("goog.async.Delay");
goog.require("goog.Disposable");
goog.require("goog.Timer");
goog.async.Delay = function(listener, opt_interval, opt_handler) {
  goog.Disposable.call(this);
  this.listener_ = listener;
  this.interval_ = opt_interval || 0;
  this.handler_ = opt_handler;
  this.callback_ = goog.bind(this.doAction_, this);
};
goog.inherits(goog.async.Delay, goog.Disposable);
goog.Delay = goog.async.Delay;
goog.async.Delay.prototype.id_ = 0;
goog.async.Delay.prototype.disposeInternal = function() {
  goog.async.Delay.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.listener_;
  delete this.handler_;
};
goog.async.Delay.prototype.start = function(opt_interval) {
  this.stop();
  this.id_ = goog.Timer.callOnce(this.callback_, goog.isDef(opt_interval) ? opt_interval : this.interval_);
};
goog.async.Delay.prototype.stop = function() {
  if (this.isActive()) {
    goog.Timer.clear(this.id_);
  }
  this.id_ = 0;
};
goog.async.Delay.prototype.fire = function() {
  this.stop();
  this.doAction_();
};
goog.async.Delay.prototype.fireIfActive = function() {
  if (this.isActive()) {
    this.fire();
  }
};
goog.async.Delay.prototype.isActive = function() {
  return this.id_ != 0;
};
goog.async.Delay.prototype.doAction_ = function() {
  this.id_ = 0;
  if (this.listener_) {
    this.listener_.call(this.handler_);
  }
};
goog.provide("cljs_uuid_utils");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
cljs_uuid_utils.uuid_string = function uuid_string(a_uuid) {
  return[cljs.core.str(a_uuid.uuid)].join("");
};
cljs_uuid_utils.make_random_uuid = function make_random_uuid() {
  var f = function f() {
    return cljs.core.rand_int.call(null, 16).toString(16);
  };
  var g = function g() {
    return(8 | 3 & cljs.core.rand_int.call(null, 15)).toString(16);
  };
  return new cljs.core.UUID((new goog.string.StringBuffer).append(f.call(null), f.call(null), f.call(null), f.call(null), f.call(null), f.call(null), f.call(null), f.call(null), "-", f.call(null), f.call(null), f.call(null), f.call(null), "-4", f.call(null), f.call(null), f.call(null), "-", g.call(null), f.call(null), f.call(null), f.call(null), "-", f.call(null), f.call(null), f.call(null), f.call(null), f.call(null), f.call(null), f.call(null), f.call(null), f.call(null), f.call(null), f.call(null), 
  f.call(null)));
};
cljs_uuid_utils.uuid_regex = function() {
  var x = "[0-9a-fA-F]";
  return cljs.core.re_pattern.call(null, [cljs.core.str("^"), cljs.core.str(x), cljs.core.str(x), cljs.core.str(x), cljs.core.str(x), cljs.core.str(x), cljs.core.str(x), cljs.core.str(x), cljs.core.str(x), cljs.core.str("-"), cljs.core.str(x), cljs.core.str(x), cljs.core.str(x), cljs.core.str(x), cljs.core.str("-"), cljs.core.str(x), cljs.core.str(x), cljs.core.str(x), cljs.core.str(x), cljs.core.str("-"), cljs.core.str(x), cljs.core.str(x), cljs.core.str(x), cljs.core.str(x), cljs.core.str("-"), 
  cljs.core.str(x), cljs.core.str(x), cljs.core.str(x), cljs.core.str(x), cljs.core.str(x), cljs.core.str(x), cljs.core.str(x), cljs.core.str(x), cljs.core.str(x), cljs.core.str(x), cljs.core.str(x), cljs.core.str(x), cljs.core.str("$")].join(""));
}();
cljs_uuid_utils.valid_uuid_QMARK_ = function valid_uuid_QMARK_(maybe_uuid) {
  var maybe_uuid_str = cljs.core._EQ_.call(null, cljs.core.type.call(null, maybe_uuid), cljs.core.UUID) ? cljs_uuid_utils.uuid_string.call(null, maybe_uuid) : typeof maybe_uuid === "string" ? maybe_uuid : new cljs.core.Keyword(null, "true", "true", 1017473280) ? false : null;
  if (cljs.core.truth_(maybe_uuid_str)) {
    return cljs.core.re_find.call(null, cljs_uuid_utils.uuid_regex, maybe_uuid_str);
  } else {
    return null;
  }
};
cljs_uuid_utils.make_uuid_from = function make_uuid_from(maybe_uuid) {
  var temp__4092__auto__ = cljs_uuid_utils.valid_uuid_QMARK_.call(null, maybe_uuid);
  if (cljs.core.truth_(temp__4092__auto__)) {
    var uuid = temp__4092__auto__;
    if (cljs.core._EQ_.call(null, cljs.core.type.call(null, maybe_uuid), cljs.core.UUID)) {
      return maybe_uuid;
    } else {
      return new cljs.core.UUID(uuid);
    }
  } else {
    return null;
  }
};
goog.provide("todomvc.transact");
goog.require("cljs.core");
goog.require("cljs_uuid_utils");
goog.require("cljs_uuid_utils");
goog.require("datascript");
goog.require("datascript");
todomvc.transact.log_event = function() {
  var log_event__delegate = function(db, event, args) {
    var evente = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword("db", "id", "db/id", 1014111942), -100, new cljs.core.Keyword(null, "event", "event", 1110795788), event, new cljs.core.Keyword(null, "args", "args", 1016906831), args], null);
    var temp__4090__auto__ = cljs.core.ffirst.call(null, datascript.q.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "find", "find", 1017047339), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?e", "?e", -1640529473, null)], null), new cljs.core.Keyword(null, "where", "where", 1127002201), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 
    2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?e", "?e", -1640529473, null), new cljs.core.Keyword(null, "last-event", "last-event", 1851999253)], null)], null)], null), db));
    if (cljs.core.truth_(temp__4090__auto__)) {
      var prev_event_eid = temp__4090__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc.call(null, evente, new cljs.core.Keyword(null, "prev-event", "prev-event", 3549456882), prev_event_eid), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db.fn", "retractAttribute", "db.fn/retractAttribute", 3416849171), prev_event_eid, new cljs.core.Keyword(null, "last-event", "last-event", 1851999253)], null)], null);
    } else {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [evente], null);
    }
  };
  var log_event = function(db, event, var_args) {
    var args = null;
    if (arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return log_event__delegate.call(this, db, event, args);
  };
  log_event.cljs$lang$maxFixedArity = 2;
  log_event.cljs$lang$applyTo = function(arglist__20292) {
    var db = cljs.core.first(arglist__20292);
    arglist__20292 = cljs.core.next(arglist__20292);
    var event = cljs.core.first(arglist__20292);
    var args = cljs.core.rest(arglist__20292);
    return log_event__delegate(db, event, args);
  };
  log_event.cljs$core$IFn$_invoke$arity$variadic = log_event__delegate;
  return log_event;
}();
todomvc.transact.set_filter = function set_filter(db, this_filter) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db.fn", "call", "db.fn/call", 2901959894), todomvc.transact.log_event, new cljs.core.Keyword(null, "set-filter", "set-filter", 2331384501), this_filter], null), function() {
    var e = cljs.core.ffirst.call(null, datascript.q.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "find", "find", 1017047339), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?e", "?e", -1640529473, null)], null), new cljs.core.Keyword(null, "where", "where", 1127002201), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
    [new cljs.core.Symbol(null, "?e", "?e", -1640529473, null), new cljs.core.Keyword(null, "filter", "filter", 4034379498)], null)], null)], null), db));
    return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db", "add", "db/add", 1014207040), e, new cljs.core.Keyword(null, "filter", "filter", 4034379498), this_filter], null);
  }()], null);
};
todomvc.transact.seed_item = function seed_item(db, id, text, completed) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db.fn", "call", "db.fn/call", 2901959894), todomvc.transact.log_event, new cljs.core.Keyword(null, "seed-item", "seed-item", 1596530785), id, text, completed], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword("db", "id", "db/id", 1014111942), -1, new cljs.core.Keyword(null, "id", 
  "id", 1013907597), id, new cljs.core.Keyword(null, "text", "text", 1017460895), text, new cljs.core.Keyword(null, "completed", "completed", 3905939901), completed, new cljs.core.Keyword(null, "commited", "commited", 4706580360), true], null)], null);
};
todomvc.transact.remove_item = function remove_item(db, id) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db.fn", "call", "db.fn/call", 2901959894), todomvc.transact.log_event, new cljs.core.Keyword(null, "remove-item", "remove-item", 673860142), id], null), function() {
    var e = cljs.core.ffirst.call(null, datascript.q.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "find", "find", 1017047339), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?e", "?e", -1640529473, null)], null), new cljs.core.Keyword(null, "in", "in", 1013907607), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "$", "$", -1640531491, null), 
    new cljs.core.Symbol(null, "?id", "?id", -1640467629, null)], null), new cljs.core.Keyword(null, "where", "where", 1127002201), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?e", "?e", -1640529473, null), new cljs.core.Keyword(null, "id", "id", 1013907597), new cljs.core.Symbol(null, "?id", "?id", -1640467629, null)], null)], null)], null), db, id));
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db.fn", "retractEntity", "db.fn/retractEntity", 4213852396), e], null);
  }()], null);
};
todomvc.transact.clear_completed = function clear_completed(db) {
  var eids_PLUS_ids = datascript.q.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "find", "find", 1017047339), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?e", "?e", -1640529473, null), new cljs.core.Symbol(null, "?id", "?id", -1640467629, null)], null), new cljs.core.Keyword(null, "where", "where", 1127002201), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 
  3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?e", "?e", -1640529473, null), new cljs.core.Keyword(null, "completed", "completed", 3905939901), true], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?e", "?e", -1640529473, null), new cljs.core.Keyword(null, "id", "id", 1013907597), new cljs.core.Symbol(null, "?id", "?id", -1640467629, null)], null)], null)], null), db);
  return cljs.core.into.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db.fn", "call", "db.fn/call", 2901959894), todomvc.transact.log_event, new cljs.core.Keyword(null, "clear-completed", "clear-completed", 888981053), cljs.core.map.call(null, cljs.core.second, eids_PLUS_ids)], null)], null), function() {
    var iter__11046__auto__ = function iter__20297(s__20298) {
      return new cljs.core.LazySeq(null, function() {
        var s__20298__$1 = s__20298;
        while (true) {
          var temp__4092__auto__ = cljs.core.seq.call(null, s__20298__$1);
          if (temp__4092__auto__) {
            var s__20298__$2 = temp__4092__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__20298__$2)) {
              var c__11044__auto__ = cljs.core.chunk_first.call(null, s__20298__$2);
              var size__11045__auto__ = cljs.core.count.call(null, c__11044__auto__);
              var b__20300 = cljs.core.chunk_buffer.call(null, size__11045__auto__);
              if (function() {
                var i__20299 = 0;
                while (true) {
                  if (i__20299 < size__11045__auto__) {
                    var e = cljs.core._nth.call(null, c__11044__auto__, i__20299);
                    cljs.core.chunk_append.call(null, b__20300, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db.fn", "retractEntity", "db.fn/retractEntity", 4213852396), e], null));
                    var G__20301 = i__20299 + 1;
                    i__20299 = G__20301;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20300), iter__20297.call(null, cljs.core.chunk_rest.call(null, s__20298__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20300), null);
              }
            } else {
              var e = cljs.core.first.call(null, s__20298__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db.fn", "retractEntity", "db.fn/retractEntity", 4213852396), e], null), iter__20297.call(null, cljs.core.rest.call(null, s__20298__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__11046__auto__.call(null, cljs.core.map.call(null, cljs.core.first, eids_PLUS_ids));
  }());
};
todomvc.transact.toggle_item = function toggle_item(db, id) {
  var vec__20303 = cljs.core.first.call(null, datascript.q.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "find", "find", 1017047339), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?e", "?e", -1640529473, null), new cljs.core.Symbol(null, "?completed", "?completed", 1756055205, null)], null), new cljs.core.Keyword(null, "in", "in", 1013907607), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Symbol(null, "$", "$", -1640531491, null), new cljs.core.Symbol(null, "?id", "?id", -1640467629, null)], null), new cljs.core.Keyword(null, "where", "where", 1127002201), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?e", "?e", -1640529473, null), new cljs.core.Keyword(null, "id", "id", 1013907597), new cljs.core.Symbol(null, "?id", "?id", 
  -1640467629, null)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?e", "?e", -1640529473, null), new cljs.core.Keyword(null, "completed", "completed", 3905939901), new cljs.core.Symbol(null, "?completed", "?completed", 1756055205, null)], null)], null)], null), db, id));
  var e = cljs.core.nth.call(null, vec__20303, 0, null);
  var completed = cljs.core.nth.call(null, vec__20303, 1, null);
  var completed__$1 = cljs.core.not.call(null, completed);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db.fn", "call", "db.fn/call", 2901959894), todomvc.transact.log_event, new cljs.core.Keyword(null, "toggle-item", "toggle-item", 4616866142), id, completed__$1], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db", "add", "db/add", 1014207040), 
  e, new cljs.core.Keyword(null, "completed", "completed", 3905939901), completed__$1], null)], null);
};
todomvc.transact.toggle_all = function toggle_all(db) {
  var e_PLUS_id_PLUS_completed = datascript.q.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "find", "find", 1017047339), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?e", "?e", -1640529473, null), new cljs.core.Symbol(null, "?id", "?id", -1640467629, null), new cljs.core.Symbol(null, "?completed", "?completed", 1756055205, null)], null), new cljs.core.Keyword(null, "where", "where", 1127002201), 
  new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?e", "?e", -1640529473, null), new cljs.core.Keyword(null, "id", "id", 1013907597), new cljs.core.Symbol(null, "?id", "?id", -1640467629, null)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?e", "?e", -1640529473, null), new cljs.core.Keyword(null, 
  "completed", "completed", 3905939901), new cljs.core.Symbol(null, "?completed", "?completed", 1756055205, null)], null)], null)], null), db);
  var target = !cljs.core.every_QMARK_.call(null, function(e_PLUS_id_PLUS_completed) {
    return function(p__20314) {
      var vec__20315 = p__20314;
      var _ = cljs.core.nth.call(null, vec__20315, 0, null);
      var ___$1 = cljs.core.nth.call(null, vec__20315, 1, null);
      var completed = cljs.core.nth.call(null, vec__20315, 2, null);
      return completed;
    };
  }(e_PLUS_id_PLUS_completed), e_PLUS_id_PLUS_completed);
  return cljs.core.into.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db.fn", "call", "db.fn/call", 2901959894), todomvc.transact.log_event, new cljs.core.Keyword(null, "toggle-all", "toggle-all", 4455256858)], null)], null), function() {
    var iter__11046__auto__ = function iter__20316(s__20317) {
      return new cljs.core.LazySeq(null, function() {
        var s__20317__$1 = s__20317;
        while (true) {
          var temp__4092__auto__ = cljs.core.seq.call(null, s__20317__$1);
          if (temp__4092__auto__) {
            var s__20317__$2 = temp__4092__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__20317__$2)) {
              var c__11044__auto__ = cljs.core.chunk_first.call(null, s__20317__$2);
              var size__11045__auto__ = cljs.core.count.call(null, c__11044__auto__);
              var b__20319 = cljs.core.chunk_buffer.call(null, size__11045__auto__);
              if (function() {
                var i__20318 = 0;
                while (true) {
                  if (i__20318 < size__11045__auto__) {
                    var vec__20322 = cljs.core._nth.call(null, c__11044__auto__, i__20318);
                    var e = cljs.core.nth.call(null, vec__20322, 0, null);
                    var id = cljs.core.nth.call(null, vec__20322, 1, null);
                    var completed = cljs.core.nth.call(null, vec__20322, 2, null);
                    if (cljs.core._EQ_.call(null, completed, !target)) {
                      cljs.core.chunk_append.call(null, b__20319, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db", "add", "db/add", 1014207040), e, new cljs.core.Keyword(null, "completed", "completed", 3905939901), target], null));
                      var G__20324 = i__20318 + 1;
                      i__20318 = G__20324;
                      continue;
                    } else {
                      var G__20325 = i__20318 + 1;
                      i__20318 = G__20325;
                      continue;
                    }
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20319), iter__20316.call(null, cljs.core.chunk_rest.call(null, s__20317__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20319), null);
              }
            } else {
              var vec__20323 = cljs.core.first.call(null, s__20317__$2);
              var e = cljs.core.nth.call(null, vec__20323, 0, null);
              var id = cljs.core.nth.call(null, vec__20323, 1, null);
              var completed = cljs.core.nth.call(null, vec__20323, 2, null);
              if (cljs.core._EQ_.call(null, completed, !target)) {
                return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db", "add", "db/add", 1014207040), e, new cljs.core.Keyword(null, "completed", "completed", 3905939901), target], null), iter__20316.call(null, cljs.core.rest.call(null, s__20317__$2)));
              } else {
                var G__20326 = cljs.core.rest.call(null, s__20317__$2);
                s__20317__$1 = G__20326;
                continue;
              }
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__11046__auto__.call(null, e_PLUS_id_PLUS_completed);
  }());
};
todomvc.transact.error = function error(db, msg) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db.fn", "call", "db.fn/call", 2901959894), todomvc.transact.log_event, new cljs.core.Keyword(null, "error", "error", 1110689146), msg], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword("db", "id", "db/id", 1014111942), -1, new cljs.core.Keyword(null, "error", "error", 1110689146), 
  msg], null)], null);
};
todomvc.transact.create_item = function create_item(db, text) {
  var temp_id = cljs_uuid_utils.make_random_uuid.call(null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db.fn", "call", "db.fn/call", 2901959894), todomvc.transact.log_event, new cljs.core.Keyword(null, "create-item", "create-item", 4768804022), temp_id, text], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword("db", "id", "db/id", 1014111942), -1, new cljs.core.Keyword(null, "id", "id", 
  1013907597), temp_id, new cljs.core.Keyword(null, "commited", "commited", 4706580360), false, new cljs.core.Keyword(null, "completed", "completed", 3905939901), false, new cljs.core.Keyword(null, "text", "text", 1017460895), text], null)], null);
};
todomvc.transact.commit_item = function commit_item(db, temp_id, id) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db.fn", "call", "db.fn/call", 2901959894), todomvc.transact.log_event, new cljs.core.Keyword(null, "commit-item", "commit-item", 2479329627), temp_id, id], null), function() {
    var e = cljs.core.ffirst.call(null, datascript.q.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "find", "find", 1017047339), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?e", "?e", -1640529473, null)], null), new cljs.core.Keyword(null, "in", "in", 1013907607), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "$", "$", -1640531491, null), 
    new cljs.core.Symbol(null, "?id", "?id", -1640467629, null)], null), new cljs.core.Keyword(null, "where", "where", 1127002201), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?e", "?e", -1640529473, null), new cljs.core.Keyword(null, "id", "id", 1013907597), new cljs.core.Symbol(null, "?id", "?id", -1640467629, null)], null)], null)], null), db, temp_id));
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword("db", "id", "db/id", 1014111942), e, new cljs.core.Keyword(null, "id", "id", 1013907597), id, new cljs.core.Keyword(null, "commited", "commited", 4706580360), true], null);
  }()], null);
};
todomvc.transact.start_edit = function start_edit(db, id) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db.fn", "call", "db.fn/call", 2901959894), todomvc.transact.log_event, new cljs.core.Keyword(null, "start-edit", "start-edit", 3689098247), id], null), function() {
    var e = cljs.core.ffirst.call(null, datascript.q.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "find", "find", 1017047339), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?e", "?e", -1640529473, null)], null), new cljs.core.Keyword(null, "in", "in", 1013907607), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "$", "$", -1640531491, null), 
    new cljs.core.Symbol(null, "?id", "?id", -1640467629, null)], null), new cljs.core.Keyword(null, "where", "where", 1127002201), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?e", "?e", -1640529473, null), new cljs.core.Keyword(null, "id", "id", 1013907597), new cljs.core.Symbol(null, "?id", "?id", -1640467629, null)], null)], null)], null), db, id));
    return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db", "add", "db/add", 1014207040), e, new cljs.core.Keyword(null, "editing", "editing", 3420907786), true], null);
  }()], null);
};
todomvc.transact.complete_edit = function complete_edit(db, id, text) {
  return cljs.core.into.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db.fn", "call", "db.fn/call", 2901959894), todomvc.transact.log_event, new cljs.core.Keyword(null, "complete-edit", "complete-edit", 1152265616), id, text], null)], null), function() {
    var e = cljs.core.ffirst.call(null, datascript.q.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "find", "find", 1017047339), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?e", "?e", -1640529473, null)], null), new cljs.core.Keyword(null, "in", "in", 1013907607), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "$", "$", -1640531491, null), 
    new cljs.core.Symbol(null, "?id", "?id", -1640467629, null)], null), new cljs.core.Keyword(null, "where", "where", 1127002201), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?e", "?e", -1640529473, null), new cljs.core.Keyword(null, "id", "id", 1013907597), new cljs.core.Symbol(null, "?id", "?id", -1640467629, null)], null)], null)], null), db, id));
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db", "add", "db/add", 1014207040), e, new cljs.core.Keyword(null, "editing", "editing", 3420907786), false], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db", "add", "db/add", 1014207040), e, new cljs.core.Keyword(null, "commited", "commited", 
    4706580360), false], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db", "add", "db/add", 1014207040), e, new cljs.core.Keyword(null, "text", "text", 1017460895), text], null)], null);
  }());
};
todomvc.transact.commit_edit = function commit_edit(db, id) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db.fn", "call", "db.fn/call", 2901959894), todomvc.transact.log_event, new cljs.core.Keyword(null, "commit-edit", "commit-edit", 2479195218), id], null), function() {
    var e = cljs.core.ffirst.call(null, datascript.q.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "find", "find", 1017047339), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?e", "?e", -1640529473, null)], null), new cljs.core.Keyword(null, "in", "in", 1013907607), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "$", "$", -1640531491, null), 
    new cljs.core.Symbol(null, "?id", "?id", -1640467629, null)], null), new cljs.core.Keyword(null, "where", "where", 1127002201), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?e", "?e", -1640529473, null), new cljs.core.Keyword(null, "id", "id", 1013907597), new cljs.core.Symbol(null, "?id", "?id", -1640467629, null)], null)], null)], null), db, id));
    return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db", "add", "db/add", 1014207040), e, new cljs.core.Keyword(null, "commited", "commited", 4706580360), true], null);
  }()], null);
};
goog.provide("goog.structs.Queue");
goog.require("goog.array");
goog.structs.Queue = function() {
  this.elements_ = [];
};
goog.structs.Queue.prototype.head_ = 0;
goog.structs.Queue.prototype.tail_ = 0;
goog.structs.Queue.prototype.enqueue = function(element) {
  this.elements_[this.tail_++] = element;
};
goog.structs.Queue.prototype.dequeue = function() {
  if (this.head_ == this.tail_) {
    return undefined;
  }
  var result = this.elements_[this.head_];
  delete this.elements_[this.head_];
  this.head_++;
  return result;
};
goog.structs.Queue.prototype.peek = function() {
  if (this.head_ == this.tail_) {
    return undefined;
  }
  return this.elements_[this.head_];
};
goog.structs.Queue.prototype.getCount = function() {
  return this.tail_ - this.head_;
};
goog.structs.Queue.prototype.isEmpty = function() {
  return this.tail_ - this.head_ == 0;
};
goog.structs.Queue.prototype.clear = function() {
  this.elements_.length = 0;
  this.head_ = 0;
  this.tail_ = 0;
};
goog.structs.Queue.prototype.contains = function(obj) {
  return goog.array.contains(this.elements_, obj);
};
goog.structs.Queue.prototype.remove = function(obj) {
  var index = goog.array.indexOf(this.elements_, obj);
  if (index < 0) {
    return false;
  }
  if (index == this.head_) {
    this.dequeue();
  } else {
    goog.array.removeAt(this.elements_, index);
    this.tail_--;
  }
  return true;
};
goog.structs.Queue.prototype.getValues = function() {
  return this.elements_.slice(this.head_, this.tail_);
};
goog.provide("goog.structs.Pool");
goog.require("goog.Disposable");
goog.require("goog.structs.Queue");
goog.require("goog.structs.Set");
goog.structs.Pool = function(opt_minCount, opt_maxCount) {
  goog.Disposable.call(this);
  this.minCount_ = opt_minCount || 0;
  this.maxCount_ = opt_maxCount || 10;
  if (this.minCount_ > this.maxCount_) {
    throw Error(goog.structs.Pool.ERROR_MIN_MAX_);
  }
  this.freeQueue_ = new goog.structs.Queue;
  this.inUseSet_ = new goog.structs.Set;
  this.delay = 0;
  this.lastAccess = null;
  this.adjustForMinMax();
  var magicProps = {canBeReused:0};
};
goog.inherits(goog.structs.Pool, goog.Disposable);
goog.structs.Pool.ERROR_MIN_MAX_ = "[goog.structs.Pool] Min can not be greater than max";
goog.structs.Pool.ERROR_DISPOSE_UNRELEASED_OBJS_ = "[goog.structs.Pool] Objects not released";
goog.structs.Pool.prototype.setMinimumCount = function(min) {
  if (min > this.maxCount_) {
    throw Error(goog.structs.Pool.ERROR_MIN_MAX_);
  }
  this.minCount_ = min;
  this.adjustForMinMax();
};
goog.structs.Pool.prototype.setMaximumCount = function(max) {
  if (max < this.minCount_) {
    throw Error(goog.structs.Pool.ERROR_MIN_MAX_);
  }
  this.maxCount_ = max;
  this.adjustForMinMax();
};
goog.structs.Pool.prototype.setDelay = function(delay) {
  this.delay = delay;
};
goog.structs.Pool.prototype.getObject = function() {
  var time = goog.now();
  if (goog.isDefAndNotNull(this.lastAccess) && time - this.lastAccess < this.delay) {
    return undefined;
  }
  var obj = this.removeFreeObject_();
  if (obj) {
    this.lastAccess = time;
    this.inUseSet_.add(obj);
  }
  return obj;
};
goog.structs.Pool.prototype.releaseObject = function(obj) {
  if (this.inUseSet_.remove(obj)) {
    this.addFreeObject(obj);
    return true;
  }
  return false;
};
goog.structs.Pool.prototype.removeFreeObject_ = function() {
  var obj;
  while (this.getFreeCount() > 0) {
    obj = (this.freeQueue_.dequeue());
    if (!this.objectCanBeReused(obj)) {
      this.adjustForMinMax();
    } else {
      break;
    }
  }
  if (!obj && this.getCount() < this.maxCount_) {
    obj = this.createObject();
  }
  return obj;
};
goog.structs.Pool.prototype.addFreeObject = function(obj) {
  this.inUseSet_.remove(obj);
  if (this.objectCanBeReused(obj) && this.getCount() < this.maxCount_) {
    this.freeQueue_.enqueue(obj);
  } else {
    this.disposeObject(obj);
  }
};
goog.structs.Pool.prototype.adjustForMinMax = function() {
  var freeQueue = this.freeQueue_;
  while (this.getCount() < this.minCount_) {
    freeQueue.enqueue(this.createObject());
  }
  while (this.getCount() > this.maxCount_ && this.getFreeCount() > 0) {
    this.disposeObject((freeQueue.dequeue()));
  }
};
goog.structs.Pool.prototype.createObject = function() {
  return{};
};
goog.structs.Pool.prototype.disposeObject = function(obj) {
  if (typeof obj.dispose == "function") {
    obj.dispose();
  } else {
    for (var i in obj) {
      obj[i] = null;
    }
  }
};
goog.structs.Pool.prototype.objectCanBeReused = function(obj) {
  if (typeof obj.canBeReused == "function") {
    return obj.canBeReused();
  }
  return true;
};
goog.structs.Pool.prototype.contains = function(obj) {
  return this.freeQueue_.contains(obj) || this.inUseSet_.contains(obj);
};
goog.structs.Pool.prototype.getCount = function() {
  return this.freeQueue_.getCount() + this.inUseSet_.getCount();
};
goog.structs.Pool.prototype.getInUseCount = function() {
  return this.inUseSet_.getCount();
};
goog.structs.Pool.prototype.getFreeCount = function() {
  return this.freeQueue_.getCount();
};
goog.structs.Pool.prototype.isEmpty = function() {
  return this.freeQueue_.isEmpty() && this.inUseSet_.isEmpty();
};
goog.structs.Pool.prototype.disposeInternal = function() {
  goog.structs.Pool.superClass_.disposeInternal.call(this);
  if (this.getInUseCount() > 0) {
    throw Error(goog.structs.Pool.ERROR_DISPOSE_UNRELEASED_OBJS_);
  }
  delete this.inUseSet_;
  var freeQueue = this.freeQueue_;
  while (!freeQueue.isEmpty()) {
    this.disposeObject((freeQueue.dequeue()));
  }
  delete this.freeQueue_;
};
goog.provide("goog.structs.Heap");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.structs.Node");
goog.structs.Heap = function(opt_heap) {
  this.nodes_ = [];
  if (opt_heap) {
    this.insertAll(opt_heap);
  }
};
goog.structs.Heap.prototype.insert = function(key, value) {
  var node = new goog.structs.Node(key, value);
  var nodes = this.nodes_;
  nodes.push(node);
  this.moveUp_(nodes.length - 1);
};
goog.structs.Heap.prototype.insertAll = function(heap) {
  var keys, values;
  if (heap instanceof goog.structs.Heap) {
    keys = heap.getKeys();
    values = heap.getValues();
    if (heap.getCount() <= 0) {
      var nodes = this.nodes_;
      for (var i = 0;i < keys.length;i++) {
        nodes.push(new goog.structs.Node(keys[i], values[i]));
      }
      return;
    }
  } else {
    keys = goog.object.getKeys(heap);
    values = goog.object.getValues(heap);
  }
  for (var i = 0;i < keys.length;i++) {
    this.insert(keys[i], values[i]);
  }
};
goog.structs.Heap.prototype.remove = function() {
  var nodes = this.nodes_;
  var count = nodes.length;
  var rootNode = nodes[0];
  if (count <= 0) {
    return undefined;
  } else {
    if (count == 1) {
      goog.array.clear(nodes);
    } else {
      nodes[0] = nodes.pop();
      this.moveDown_(0);
    }
  }
  return rootNode.getValue();
};
goog.structs.Heap.prototype.peek = function() {
  var nodes = this.nodes_;
  if (nodes.length == 0) {
    return undefined;
  }
  return nodes[0].getValue();
};
goog.structs.Heap.prototype.peekKey = function() {
  return this.nodes_[0] && this.nodes_[0].getKey();
};
goog.structs.Heap.prototype.moveDown_ = function(index) {
  var nodes = this.nodes_;
  var count = nodes.length;
  var node = nodes[index];
  while (index < count >> 1) {
    var leftChildIndex = this.getLeftChildIndex_(index);
    var rightChildIndex = this.getRightChildIndex_(index);
    var smallerChildIndex = rightChildIndex < count && nodes[rightChildIndex].getKey() < nodes[leftChildIndex].getKey() ? rightChildIndex : leftChildIndex;
    if (nodes[smallerChildIndex].getKey() > node.getKey()) {
      break;
    }
    nodes[index] = nodes[smallerChildIndex];
    index = smallerChildIndex;
  }
  nodes[index] = node;
};
goog.structs.Heap.prototype.moveUp_ = function(index) {
  var nodes = this.nodes_;
  var node = nodes[index];
  while (index > 0) {
    var parentIndex = this.getParentIndex_(index);
    if (nodes[parentIndex].getKey() > node.getKey()) {
      nodes[index] = nodes[parentIndex];
      index = parentIndex;
    } else {
      break;
    }
  }
  nodes[index] = node;
};
goog.structs.Heap.prototype.getLeftChildIndex_ = function(index) {
  return index * 2 + 1;
};
goog.structs.Heap.prototype.getRightChildIndex_ = function(index) {
  return index * 2 + 2;
};
goog.structs.Heap.prototype.getParentIndex_ = function(index) {
  return index - 1 >> 1;
};
goog.structs.Heap.prototype.getValues = function() {
  var nodes = this.nodes_;
  var rv = [];
  var l = nodes.length;
  for (var i = 0;i < l;i++) {
    rv.push(nodes[i].getValue());
  }
  return rv;
};
goog.structs.Heap.prototype.getKeys = function() {
  var nodes = this.nodes_;
  var rv = [];
  var l = nodes.length;
  for (var i = 0;i < l;i++) {
    rv.push(nodes[i].getKey());
  }
  return rv;
};
goog.structs.Heap.prototype.containsValue = function(val) {
  return goog.array.some(this.nodes_, function(node) {
    return node.getValue() == val;
  });
};
goog.structs.Heap.prototype.containsKey = function(key) {
  return goog.array.some(this.nodes_, function(node) {
    return node.getKey() == key;
  });
};
goog.structs.Heap.prototype.clone = function() {
  return new goog.structs.Heap(this);
};
goog.structs.Heap.prototype.getCount = function() {
  return this.nodes_.length;
};
goog.structs.Heap.prototype.isEmpty = function() {
  return goog.array.isEmpty(this.nodes_);
};
goog.structs.Heap.prototype.clear = function() {
  goog.array.clear(this.nodes_);
};
goog.provide("goog.structs.PriorityQueue");
goog.require("goog.structs");
goog.require("goog.structs.Heap");
goog.structs.PriorityQueue = function() {
  goog.structs.Heap.call(this);
};
goog.inherits(goog.structs.PriorityQueue, goog.structs.Heap);
goog.structs.PriorityQueue.prototype.enqueue = function(priority, value) {
  this.insert(priority, value);
};
goog.structs.PriorityQueue.prototype.dequeue = function() {
  return this.remove();
};
goog.provide("goog.structs.PriorityPool");
goog.require("goog.structs.Pool");
goog.require("goog.structs.PriorityQueue");
goog.structs.PriorityPool = function(opt_minCount, opt_maxCount) {
  this.requestQueue_ = new goog.structs.PriorityQueue;
  goog.structs.Pool.call(this, opt_minCount, opt_maxCount);
};
goog.inherits(goog.structs.PriorityPool, goog.structs.Pool);
goog.structs.PriorityPool.prototype.delayTimeout_;
goog.structs.PriorityPool.DEFAULT_PRIORITY_ = 100;
goog.structs.PriorityPool.prototype.setDelay = function(delay) {
  goog.base(this, "setDelay", delay);
  if (!goog.isDefAndNotNull(this.lastAccess)) {
    return;
  }
  goog.global.clearTimeout(this.delayTimeout_);
  this.delayTimeout_ = goog.global.setTimeout(goog.bind(this.handleQueueRequests_, this), this.delay + this.lastAccess - goog.now());
  this.handleQueueRequests_();
};
goog.structs.PriorityPool.prototype.getObject = function(opt_callback, opt_priority) {
  if (!opt_callback) {
    var result = goog.base(this, "getObject");
    if (result && this.delay) {
      this.delayTimeout_ = goog.global.setTimeout(goog.bind(this.handleQueueRequests_, this), this.delay);
    }
    return result;
  }
  var priority = goog.isDef(opt_priority) ? opt_priority : goog.structs.PriorityPool.DEFAULT_PRIORITY_;
  this.requestQueue_.enqueue(priority, opt_callback);
  this.handleQueueRequests_();
  return undefined;
};
goog.structs.PriorityPool.prototype.handleQueueRequests_ = function() {
  var requestQueue = this.requestQueue_;
  while (requestQueue.getCount() > 0) {
    var obj = this.getObject();
    if (!obj) {
      return;
    } else {
      var requestCallback = requestQueue.dequeue();
      requestCallback.apply(this, [obj]);
    }
  }
};
goog.structs.PriorityPool.prototype.addFreeObject = function(obj) {
  goog.structs.PriorityPool.superClass_.addFreeObject.call(this, obj);
  this.handleQueueRequests_();
};
goog.structs.PriorityPool.prototype.adjustForMinMax = function() {
  goog.structs.PriorityPool.superClass_.adjustForMinMax.call(this);
  this.handleQueueRequests_();
};
goog.structs.PriorityPool.prototype.disposeInternal = function() {
  goog.structs.PriorityPool.superClass_.disposeInternal.call(this);
  goog.global.clearTimeout(this.delayTimeout_);
  this.requestQueue_.clear();
  this.requestQueue_ = null;
};
goog.provide("goog.net.XhrIoPool");
goog.require("goog.net.XhrIo");
goog.require("goog.structs");
goog.require("goog.structs.PriorityPool");
goog.net.XhrIoPool = function(opt_headers, opt_minCount, opt_maxCount) {
  goog.structs.PriorityPool.call(this, opt_minCount, opt_maxCount);
  this.headers_ = opt_headers;
};
goog.inherits(goog.net.XhrIoPool, goog.structs.PriorityPool);
goog.net.XhrIoPool.prototype.createObject = function() {
  var xhrIo = new goog.net.XhrIo;
  var headers = this.headers_;
  if (headers) {
    goog.structs.forEach(headers, function(value, key) {
      xhrIo.headers.set(key, value);
    });
  }
  return xhrIo;
};
goog.net.XhrIoPool.prototype.objectCanBeReused = function(obj) {
  var xhr = (obj);
  return!xhr.isDisposed() && !xhr.isActive();
};
goog.provide("todomvc.client_services");
goog.require("cljs.core");
goog.require("datascript");
goog.require("datascript");
goog.require("todomvc.transact");
goog.require("todomvc.transact");
todomvc.client_services.handle = function() {
  var method_table__11187__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var prefer_table__11188__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var method_cache__11189__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var cached_hierarchy__11190__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var hierarchy__11191__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", 3129050535), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn("handle", function(event, args, db, conn, local_conn) {
    return event;
  }, new cljs.core.Keyword(null, "default", "default", 2558708147), hierarchy__11191__auto__, method_table__11187__auto__, prefer_table__11188__auto__, method_cache__11189__auto__, cached_hierarchy__11190__auto__);
}();
cljs.core._add_method.call(null, todomvc.client_services.handle, new cljs.core.Keyword(null, "create-item", "create-item", 4768804022), function(_, p__20171, db, conn, local_conn) {
  var vec__20172 = p__20171;
  var temp_id = cljs.core.nth.call(null, vec__20172, 0, null);
  var text = cljs.core.nth.call(null, vec__20172, 1, null);
  var tx = datascript.transact_BANG_.call(null, local_conn, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword("db", "id", "db/id", 1014111942), -1, new cljs.core.Keyword(null, "text", "text", 1017460895), text, new cljs.core.Keyword(null, "completed", "completed", 3905939901), false], null)], null));
  var id = cljs.core.get.call(null, (new cljs.core.Keyword(null, "tempids", "tempids", 3880764886)).cljs$core$IFn$_invoke$arity$1(tx), -1);
  return datascript.transact_BANG_.call(null, conn, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db.fn", "call", "db.fn/call", 2901959894), todomvc.transact.commit_item, temp_id, id], null)], null));
});
cljs.core._add_method.call(null, todomvc.client_services.handle, new cljs.core.Keyword(null, "complete-edit", "complete-edit", 1152265616), function(event, p__20173, db, conn, local_conn) {
  var vec__20174 = p__20173;
  var id = cljs.core.nth.call(null, vec__20174, 0, null);
  var text = cljs.core.nth.call(null, vec__20174, 1, null);
  datascript.transact_BANG_.call(null, local_conn, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db", "add", "db/add", 1014207040), id, new cljs.core.Keyword(null, "text", "text", 1017460895), text], null)], null));
  return datascript.transact_BANG_.call(null, conn, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db.fn", "call", "db.fn/call", 2901959894), todomvc.transact.commit_edit, id], null)], null));
});
cljs.core._add_method.call(null, todomvc.client_services.handle, new cljs.core.Keyword(null, "toggle-item", "toggle-item", 4616866142), function(event, p__20175, db, conn, local_conn) {
  var vec__20176 = p__20175;
  var id = cljs.core.nth.call(null, vec__20176, 0, null);
  var completed = cljs.core.nth.call(null, vec__20176, 1, null);
  return datascript.transact_BANG_.call(null, local_conn, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db", "add", "db/add", 1014207040), id, new cljs.core.Keyword(null, "completed", "completed", 3905939901), completed], null)], null));
});
cljs.core._add_method.call(null, todomvc.client_services.handle, new cljs.core.Keyword(null, "remove-item", "remove-item", 673860142), function(event, p__20177, db, conn, local_conn) {
  var vec__20178 = p__20177;
  var id = cljs.core.nth.call(null, vec__20178, 0, null);
  return datascript.transact_BANG_.call(null, local_conn, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db.fn", "retractEntity", "db.fn/retractEntity", 4213852396), id], null)], null));
});
cljs.core._add_method.call(null, todomvc.client_services.handle, new cljs.core.Keyword(null, "clear-completed", "clear-completed", 888981053), function(event, p__20179, db, conn, local_conn) {
  var vec__20180 = p__20179;
  var ids = cljs.core.nth.call(null, vec__20180, 0, null);
  return datascript.transact_BANG_.call(null, local_conn, function() {
    var iter__11046__auto__ = function iter__20181(s__20182) {
      return new cljs.core.LazySeq(null, function() {
        var s__20182__$1 = s__20182;
        while (true) {
          var temp__4092__auto__ = cljs.core.seq.call(null, s__20182__$1);
          if (temp__4092__auto__) {
            var s__20182__$2 = temp__4092__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__20182__$2)) {
              var c__11044__auto__ = cljs.core.chunk_first.call(null, s__20182__$2);
              var size__11045__auto__ = cljs.core.count.call(null, c__11044__auto__);
              var b__20184 = cljs.core.chunk_buffer.call(null, size__11045__auto__);
              if (function() {
                var i__20183 = 0;
                while (true) {
                  if (i__20183 < size__11045__auto__) {
                    var id = cljs.core._nth.call(null, c__11044__auto__, i__20183);
                    cljs.core.chunk_append.call(null, b__20184, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db.fn", "retractEntity", "db.fn/retractEntity", 4213852396), id], null));
                    var G__20185 = i__20183 + 1;
                    i__20183 = G__20185;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20184), iter__20181.call(null, cljs.core.chunk_rest.call(null, s__20182__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20184), null);
              }
            } else {
              var id = cljs.core.first.call(null, s__20182__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db.fn", "retractEntity", "db.fn/retractEntity", 4213852396), id], null), iter__20181.call(null, cljs.core.rest.call(null, s__20182__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__11046__auto__.call(null, ids);
  }());
});
cljs.core._add_method.call(null, todomvc.client_services.handle, new cljs.core.Keyword(null, "toggle-all", "toggle-all", 4455256858), function(event, _, db, conn, local_conn) {
  var seq__20186 = cljs.core.seq.call(null, datascript.q.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "find", "find", 1017047339), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?id", "?id", -1640467629, null), new cljs.core.Symbol(null, "?completed", "?completed", 1756055205, null)], null), new cljs.core.Keyword(null, "in", "in", 1013907607), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Symbol(null, "$", "$", -1640531491, null), new cljs.core.Symbol(null, "?tx", "?tx", -1640467268, null)], null), new cljs.core.Keyword(null, "where", "where", 1127002201), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?e", "?e", -1640529473, null), new cljs.core.Keyword(null, "id", "id", 1013907597), new cljs.core.Symbol(null, "?id", "?id", 
  -1640467629, null)], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?e", "?e", -1640529473, null), new cljs.core.Keyword(null, "completed", "completed", 3905939901), new cljs.core.Symbol(null, "?completed", "?completed", 1756055205, null), new cljs.core.Symbol(null, "?tx", "?tx", -1640467268, null)], null)], null)], null), db, (new cljs.core.Keyword(null, "max-tx", "max-tx", 4227685119)).cljs$core$IFn$_invoke$arity$1(db)));
  var chunk__20187 = null;
  var count__20188 = 0;
  var i__20189 = 0;
  while (true) {
    if (i__20189 < count__20188) {
      var vec__20190 = cljs.core._nth.call(null, chunk__20187, i__20189);
      var id = cljs.core.nth.call(null, vec__20190, 0, null);
      var completed = cljs.core.nth.call(null, vec__20190, 1, null);
      todomvc.client_services.handle.call(null, new cljs.core.Keyword(null, "toggle-item", "toggle-item", 4616866142), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [id, completed], null), db, conn, local_conn);
      var G__20192 = seq__20186;
      var G__20193 = chunk__20187;
      var G__20194 = count__20188;
      var G__20195 = i__20189 + 1;
      seq__20186 = G__20192;
      chunk__20187 = G__20193;
      count__20188 = G__20194;
      i__20189 = G__20195;
      continue;
    } else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__20186);
      if (temp__4092__auto__) {
        var seq__20186__$1 = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__20186__$1)) {
          var c__11077__auto__ = cljs.core.chunk_first.call(null, seq__20186__$1);
          var G__20196 = cljs.core.chunk_rest.call(null, seq__20186__$1);
          var G__20197 = c__11077__auto__;
          var G__20198 = cljs.core.count.call(null, c__11077__auto__);
          var G__20199 = 0;
          seq__20186 = G__20196;
          chunk__20187 = G__20197;
          count__20188 = G__20198;
          i__20189 = G__20199;
          continue;
        } else {
          var vec__20191 = cljs.core.first.call(null, seq__20186__$1);
          var id = cljs.core.nth.call(null, vec__20191, 0, null);
          var completed = cljs.core.nth.call(null, vec__20191, 1, null);
          todomvc.client_services.handle.call(null, new cljs.core.Keyword(null, "toggle-item", "toggle-item", 4616866142), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [id, completed], null), db, conn, local_conn);
          var G__20200 = cljs.core.next.call(null, seq__20186__$1);
          var G__20201 = null;
          var G__20202 = 0;
          var G__20203 = 0;
          seq__20186 = G__20200;
          chunk__20187 = G__20201;
          count__20188 = G__20202;
          i__20189 = G__20203;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
});
cljs.core._add_method.call(null, todomvc.client_services.handle, new cljs.core.Keyword(null, "default", "default", 2558708147), function(_, ___$1) {
  return null;
});
todomvc.client_services.start_services = function start_services(app) {
  var map__20208 = app;
  var map__20208__$1 = cljs.core.seq_QMARK_.call(null, map__20208) ? cljs.core.apply.call(null, cljs.core.hash_map, map__20208) : map__20208;
  var conn = cljs.core.get.call(null, map__20208__$1, new cljs.core.Keyword(null, "conn", "conn", 1016963742));
  var local_conn = datascript.create_conn.call(null, cljs.core.PersistentArrayMap.EMPTY);
  return datascript.listen_BANG_.call(null, conn, function(p__20209) {
    var map__20210 = p__20209;
    var map__20210__$1 = cljs.core.seq_QMARK_.call(null, map__20210) ? cljs.core.apply.call(null, cljs.core.hash_map, map__20210) : map__20210;
    var report = map__20210__$1;
    var db_after = cljs.core.get.call(null, map__20210__$1, new cljs.core.Keyword(null, "db-after", "db-after", 1658340159));
    var vec__20211 = cljs.core.first.call(null, datascript.q.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "find", "find", 1017047339), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?event", "?event", 259996532, null), new cljs.core.Symbol(null, "?args", "?args", -1579347115, null)], null), new cljs.core.Keyword(null, "in", "in", 1013907607), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
    [new cljs.core.Symbol(null, "$", "$", -1640531491, null), new cljs.core.Symbol(null, "?tx", "?tx", -1640467268, null)], null), new cljs.core.Keyword(null, "where", "where", 1127002201), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?e", "?e", -1640529473, null), new cljs.core.Keyword(null, "event", "event", 1110795788), new cljs.core.Symbol(null, 
    "?event", "?event", 259996532, null), new cljs.core.Symbol(null, "?tx", "?tx", -1640467268, null)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?e", "?e", -1640529473, null), new cljs.core.Keyword(null, "args", "args", 1016906831), new cljs.core.Symbol(null, "?args", "?args", -1579347115, null)], null)], null)], null), db_after, (new cljs.core.Keyword(null, "max-tx", "max-tx", 4227685119)).cljs$core$IFn$_invoke$arity$1(db_after)));
    var event = cljs.core.nth.call(null, vec__20211, 0, null);
    var args = cljs.core.nth.call(null, vec__20211, 1, null);
    return todomvc.client_services.handle.call(null, event, args, db_after, conn, local_conn);
  });
};
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || (goog.userAgent.IE && goog.userAgent.isDocumentMode(9) || goog.userAgent.GECKO && goog.userAgent.isVersion("1.9.1")), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersion("9"), CAN_USE_PARENT_ELEMENT_PROPERTY:goog.userAgent.IE || (goog.userAgent.OPERA || goog.userAgent.WEBKIT), INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE};
goog.provide("goog.events.EventHandler");
goog.require("goog.Disposable");
goog.require("goog.array");
goog.require("goog.events");
goog.require("goog.events.EventWrapper");
goog.events.EventHandler = function(opt_handler) {
  goog.Disposable.call(this);
  this.handler_ = opt_handler;
  this.keys_ = [];
};
goog.inherits(goog.events.EventHandler, goog.Disposable);
goog.events.EventHandler.typeArray_ = [];
goog.events.EventHandler.prototype.listen = function(src, type, opt_fn, opt_capture, opt_handler) {
  if (!goog.isArray(type)) {
    goog.events.EventHandler.typeArray_[0] = (type);
    type = goog.events.EventHandler.typeArray_;
  }
  for (var i = 0;i < type.length;i++) {
    var key = (goog.events.listen(src, type[i], opt_fn || this, opt_capture || false, opt_handler || (this.handler_ || this)));
    this.keys_.push(key);
  }
  return this;
};
goog.events.EventHandler.prototype.listenOnce = function(src, type, opt_fn, opt_capture, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      this.listenOnce(src, type[i], opt_fn, opt_capture, opt_handler);
    }
  } else {
    var key = (goog.events.listenOnce(src, type, opt_fn || this, opt_capture, opt_handler || (this.handler_ || this)));
    this.keys_.push(key);
  }
  return this;
};
goog.events.EventHandler.prototype.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler || (this.handler_ || this), this);
  return this;
};
goog.events.EventHandler.prototype.getListenerCount = function() {
  return this.keys_.length;
};
goog.events.EventHandler.prototype.unlisten = function(src, type, opt_fn, opt_capture, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      this.unlisten(src, type[i], opt_fn, opt_capture, opt_handler);
    }
  } else {
    var listener = goog.events.getListener(src, type, opt_fn || this, opt_capture, opt_handler || (this.handler_ || this));
    if (listener) {
      var key = listener.key;
      goog.events.unlistenByKey(key);
      goog.array.remove(this.keys_, key);
    }
  }
  return this;
};
goog.events.EventHandler.prototype.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler || (this.handler_ || this), this);
  return this;
};
goog.events.EventHandler.prototype.removeAll = function() {
  goog.array.forEach(this.keys_, goog.events.unlistenByKey);
  this.keys_.length = 0;
};
goog.events.EventHandler.prototype.disposeInternal = function() {
  goog.events.EventHandler.superClass_.disposeInternal.call(this);
  this.removeAll();
};
goog.events.EventHandler.prototype.handleEvent = function(e) {
  throw Error("EventHandler.handleEvent not implemented");
};
goog.provide("goog.net.XhrManager");
goog.provide("goog.net.XhrManager.Event");
goog.provide("goog.net.XhrManager.Request");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.require("goog.events.Event");
goog.require("goog.events.EventHandler");
goog.require("goog.events.EventTarget");
goog.require("goog.net.EventType");
goog.require("goog.net.XhrIo");
goog.require("goog.net.XhrIoPool");
goog.require("goog.structs.Map");
goog.net.XhrManager = function(opt_maxRetries, opt_headers, opt_minCount, opt_maxCount, opt_timeoutInterval) {
  goog.base(this);
  this.maxRetries_ = goog.isDef(opt_maxRetries) ? opt_maxRetries : 1;
  this.timeoutInterval_ = goog.isDef(opt_timeoutInterval) ? Math.max(0, opt_timeoutInterval) : 0;
  this.xhrPool_ = new goog.net.XhrIoPool(opt_headers, opt_minCount, opt_maxCount);
  this.requests_ = new goog.structs.Map;
  this.eventHandler_ = new goog.events.EventHandler(this);
};
goog.inherits(goog.net.XhrManager, goog.events.EventTarget);
goog.net.XhrManager.ERROR_ID_IN_USE_ = "[goog.net.XhrManager] ID in use";
goog.net.XhrManager.XHR_EVENT_TYPES_ = [goog.net.EventType.READY, goog.net.EventType.COMPLETE, goog.net.EventType.SUCCESS, goog.net.EventType.ERROR, goog.net.EventType.ABORT, goog.net.EventType.TIMEOUT];
goog.net.XhrManager.prototype.setTimeoutInterval = function(ms) {
  this.timeoutInterval_ = Math.max(0, ms);
};
goog.net.XhrManager.prototype.getOutstandingCount = function() {
  return this.requests_.getCount();
};
goog.net.XhrManager.prototype.getOutstandingRequestIds = function() {
  return this.requests_.getKeys();
};
goog.net.XhrManager.prototype.send = function(id, url, opt_method, opt_content, opt_headers, opt_priority, opt_callback, opt_maxRetries, opt_responseType) {
  var requests = this.requests_;
  if (requests.get(id)) {
    throw Error(goog.net.XhrManager.ERROR_ID_IN_USE_);
  }
  var request = new goog.net.XhrManager.Request(url, goog.bind(this.handleEvent_, this, id), opt_method, opt_content, opt_headers, opt_callback, goog.isDef(opt_maxRetries) ? opt_maxRetries : this.maxRetries_, opt_responseType);
  this.requests_.set(id, request);
  var callback = goog.bind(this.handleAvailableXhr_, this, id);
  this.xhrPool_.getObject(callback, opt_priority);
  return request;
};
goog.net.XhrManager.prototype.abort = function(id, opt_force) {
  var request = this.requests_.get(id);
  if (request) {
    var xhrIo = request.xhrIo;
    request.setAborted(true);
    if (opt_force) {
      if (xhrIo) {
        this.removeXhrListener_(xhrIo, request.getXhrEventCallback());
        goog.events.listenOnce(xhrIo, goog.net.EventType.READY, function() {
          this.xhrPool_.releaseObject(xhrIo);
        }, false, this);
      }
      this.requests_.remove(id);
    }
    if (xhrIo) {
      xhrIo.abort();
    }
  }
};
goog.net.XhrManager.prototype.handleAvailableXhr_ = function(id, xhrIo) {
  var request = this.requests_.get(id);
  if (request && !request.xhrIo) {
    this.addXhrListener_(xhrIo, request.getXhrEventCallback());
    xhrIo.setTimeoutInterval(this.timeoutInterval_);
    xhrIo.setResponseType(request.getResponseType());
    request.xhrIo = request.xhrLite = xhrIo;
    this.dispatchEvent(new goog.net.XhrManager.Event(goog.net.EventType.READY, this, id, xhrIo));
    this.retry_(id, xhrIo);
    if (request.getAborted()) {
      xhrIo.abort();
    }
  } else {
    this.xhrPool_.releaseObject(xhrIo);
  }
};
goog.net.XhrManager.prototype.handleEvent_ = function(id, e) {
  var xhrIo = (e.target);
  switch(e.type) {
    case goog.net.EventType.READY:
      this.retry_(id, xhrIo);
      break;
    case goog.net.EventType.COMPLETE:
      return this.handleComplete_(id, xhrIo, e);
    case goog.net.EventType.SUCCESS:
      this.handleSuccess_(id, xhrIo);
      break;
    case goog.net.EventType.TIMEOUT:
    ;
    case goog.net.EventType.ERROR:
      this.handleError_(id, xhrIo);
      break;
    case goog.net.EventType.ABORT:
      this.handleAbort_(id, xhrIo);
      break;
  }
  return null;
};
goog.net.XhrManager.prototype.retry_ = function(id, xhrIo) {
  var request = this.requests_.get(id);
  if (request && (!request.getCompleted() && !request.hasReachedMaxRetries())) {
    request.increaseAttemptCount();
    xhrIo.send(request.getUrl(), request.getMethod(), request.getContent(), request.getHeaders());
  } else {
    if (request) {
      this.removeXhrListener_(xhrIo, request.getXhrEventCallback());
      this.requests_.remove(id);
    }
    this.xhrPool_.releaseObject(xhrIo);
  }
};
goog.net.XhrManager.prototype.handleComplete_ = function(id, xhrIo, e) {
  var request = this.requests_.get(id);
  if (xhrIo.getLastErrorCode() == goog.net.ErrorCode.ABORT || (xhrIo.isSuccess() || request.hasReachedMaxRetries())) {
    this.dispatchEvent(new goog.net.XhrManager.Event(goog.net.EventType.COMPLETE, this, id, xhrIo));
    if (request) {
      request.setCompleted(true);
      if (request.getCompleteCallback()) {
        return request.getCompleteCallback().call(xhrIo, e);
      }
    }
  }
  return null;
};
goog.net.XhrManager.prototype.handleAbort_ = function(id, xhrIo) {
  this.dispatchEvent(new goog.net.XhrManager.Event(goog.net.EventType.ABORT, this, id, xhrIo));
};
goog.net.XhrManager.prototype.handleSuccess_ = function(id, xhrIo) {
  this.dispatchEvent(new goog.net.XhrManager.Event(goog.net.EventType.SUCCESS, this, id, xhrIo));
};
goog.net.XhrManager.prototype.handleError_ = function(id, xhrIo) {
  var request = this.requests_.get(id);
  if (request.hasReachedMaxRetries()) {
    this.dispatchEvent(new goog.net.XhrManager.Event(goog.net.EventType.ERROR, this, id, xhrIo));
  }
};
goog.net.XhrManager.prototype.removeXhrListener_ = function(xhrIo, func, opt_types) {
  var types = opt_types || goog.net.XhrManager.XHR_EVENT_TYPES_;
  this.eventHandler_.unlisten(xhrIo, types, func);
};
goog.net.XhrManager.prototype.addXhrListener_ = function(xhrIo, func, opt_types) {
  var types = opt_types || goog.net.XhrManager.XHR_EVENT_TYPES_;
  this.eventHandler_.listen(xhrIo, types, func);
};
goog.net.XhrManager.prototype.disposeInternal = function() {
  goog.net.XhrManager.superClass_.disposeInternal.call(this);
  this.xhrPool_.dispose();
  this.xhrPool_ = null;
  this.eventHandler_.dispose();
  this.eventHandler_ = null;
  var requests = this.requests_;
  goog.structs.forEach(requests, function(value, key) {
    value.dispose();
  });
  requests.clear();
  this.requests_ = null;
};
goog.net.XhrManager.Event = function(type, target, id, xhrIo) {
  goog.events.Event.call(this, type, target);
  this.id = id;
  this.xhrIo = xhrIo;
  this.xhrLite = (xhrIo);
};
goog.inherits(goog.net.XhrManager.Event, goog.events.Event);
goog.net.XhrManager.Request = function(url, xhrEventCallback, opt_method, opt_content, opt_headers, opt_callback, opt_maxRetries, opt_responseType) {
  goog.Disposable.call(this);
  this.url_ = url;
  this.method_ = opt_method || "GET";
  this.content_ = opt_content;
  this.headers_ = opt_headers || null;
  this.maxRetries_ = goog.isDef(opt_maxRetries) ? opt_maxRetries : 1;
  this.attemptCount_ = 0;
  this.completed_ = false;
  this.aborted_ = false;
  this.xhrEventCallback_ = xhrEventCallback;
  this.completeCallback_ = opt_callback;
  this.responseType_ = opt_responseType || goog.net.XhrIo.ResponseType.DEFAULT;
  this.xhrIo = null;
};
goog.inherits(goog.net.XhrManager.Request, goog.Disposable);
goog.net.XhrManager.Request.prototype.getUrl = function() {
  return this.url_;
};
goog.net.XhrManager.Request.prototype.getMethod = function() {
  return this.method_;
};
goog.net.XhrManager.Request.prototype.getContent = function() {
  return this.content_;
};
goog.net.XhrManager.Request.prototype.getHeaders = function() {
  return this.headers_;
};
goog.net.XhrManager.Request.prototype.getMaxRetries = function() {
  return this.maxRetries_;
};
goog.net.XhrManager.Request.prototype.getAttemptCount = function() {
  return this.attemptCount_;
};
goog.net.XhrManager.Request.prototype.increaseAttemptCount = function() {
  this.attemptCount_++;
};
goog.net.XhrManager.Request.prototype.hasReachedMaxRetries = function() {
  return this.attemptCount_ > this.maxRetries_;
};
goog.net.XhrManager.Request.prototype.setCompleted = function(complete) {
  this.completed_ = complete;
};
goog.net.XhrManager.Request.prototype.getCompleted = function() {
  return this.completed_;
};
goog.net.XhrManager.Request.prototype.setAborted = function(aborted) {
  this.aborted_ = aborted;
};
goog.net.XhrManager.Request.prototype.getAborted = function() {
  return this.aborted_;
};
goog.net.XhrManager.Request.prototype.getXhrEventCallback = function() {
  return this.xhrEventCallback_;
};
goog.net.XhrManager.Request.prototype.getCompleteCallback = function() {
  return this.completeCallback_;
};
goog.net.XhrManager.Request.prototype.getResponseType = function() {
  return this.responseType_;
};
goog.net.XhrManager.Request.prototype.disposeInternal = function() {
  goog.net.XhrManager.Request.superClass_.disposeInternal.call(this);
  delete this.xhrEventCallback_;
  delete this.completeCallback_;
};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", ARTICLE:"ARTICLE", ASIDE:"ASIDE", AUDIO:"AUDIO", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDI:"BDI", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", COMMAND:"COMMAND", DATA:"DATA", DATALIST:"DATALIST", DD:"DD", DEL:"DEL", DETAILS:"DETAILS", DFN:"DFN", 
DIALOG:"DIALOG", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", EMBED:"EMBED", FIELDSET:"FIELDSET", FIGCAPTION:"FIGCAPTION", FIGURE:"FIGURE", FONT:"FONT", FOOTER:"FOOTER", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HEADER:"HEADER", HGROUP:"HGROUP", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", KEYGEN:"KEYGEN", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", 
MAP:"MAP", MARK:"MARK", MATH:"MATH", MENU:"MENU", META:"META", METER:"METER", NAV:"NAV", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", OUTPUT:"OUTPUT", P:"P", PARAM:"PARAM", PRE:"PRE", PROGRESS:"PROGRESS", Q:"Q", RP:"RP", RT:"RT", RUBY:"RUBY", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SECTION:"SECTION", SELECT:"SELECT", SMALL:"SMALL", SOURCE:"SOURCE", SPAN:"SPAN", STRIKE:"STRIKE", STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUMMARY:"SUMMARY", 
SUP:"SUP", SVG:"SVG", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TIME:"TIME", TITLE:"TITLE", TR:"TR", TRACK:"TRACK", TT:"TT", U:"U", UL:"UL", VAR:"VAR", VIDEO:"VIDEO", WBR:"WBR"};
goog.provide("goog.dom.classes");
goog.require("goog.array");
goog.dom.classes.set = function(element, className) {
  element.className = className;
};
goog.dom.classes.get = function(element) {
  var className = element.className;
  return goog.isString(className) && className.match(/\S+/g) || [];
};
goog.dom.classes.add = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var expectedCount = classes.length + args.length;
  goog.dom.classes.add_(classes, args);
  goog.dom.classes.set(element, classes.join(" "));
  return classes.length == expectedCount;
};
goog.dom.classes.remove = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var newClasses = goog.dom.classes.getDifference_(classes, args);
  goog.dom.classes.set(element, newClasses.join(" "));
  return newClasses.length == classes.length - args.length;
};
goog.dom.classes.add_ = function(classes, args) {
  for (var i = 0;i < args.length;i++) {
    if (!goog.array.contains(classes, args[i])) {
      classes.push(args[i]);
    }
  }
};
goog.dom.classes.getDifference_ = function(arr1, arr2) {
  return goog.array.filter(arr1, function(item) {
    return!goog.array.contains(arr2, item);
  });
};
goog.dom.classes.swap = function(element, fromClass, toClass) {
  var classes = goog.dom.classes.get(element);
  var removed = false;
  for (var i = 0;i < classes.length;i++) {
    if (classes[i] == fromClass) {
      goog.array.splice(classes, i--, 1);
      removed = true;
    }
  }
  if (removed) {
    classes.push(toClass);
    goog.dom.classes.set(element, classes.join(" "));
  }
  return removed;
};
goog.dom.classes.addRemove = function(element, classesToRemove, classesToAdd) {
  var classes = goog.dom.classes.get(element);
  if (goog.isString(classesToRemove)) {
    goog.array.remove(classes, classesToRemove);
  } else {
    if (goog.isArray(classesToRemove)) {
      classes = goog.dom.classes.getDifference_(classes, classesToRemove);
    }
  }
  if (goog.isString(classesToAdd) && !goog.array.contains(classes, classesToAdd)) {
    classes.push(classesToAdd);
  } else {
    if (goog.isArray(classesToAdd)) {
      goog.dom.classes.add_(classes, classesToAdd);
    }
  }
  goog.dom.classes.set(element, classes.join(" "));
};
goog.dom.classes.has = function(element, className) {
  return goog.array.contains(goog.dom.classes.get(element), className);
};
goog.dom.classes.enable = function(element, className, enabled) {
  if (enabled) {
    goog.dom.classes.add(element, className);
  } else {
    goog.dom.classes.remove(element, className);
  }
};
goog.dom.classes.toggle = function(element, className) {
  var add = !goog.dom.classes.has(element, className);
  goog.dom.classes.enable(element, className, add);
  return add;
};
goog.provide("ajax.core");
goog.require("cljs.core");
goog.require("goog.json.Serializer");
goog.require("goog.net.XhrManager");
goog.require("goog.Uri.QueryData");
goog.require("goog.events");
goog.require("goog.net.XhrManager");
goog.require("cljs.reader");
goog.require("goog.net.EventType");
goog.require("goog.structs");
goog.require("goog.Uri.QueryData");
goog.require("clojure.string");
goog.require("clojure.string");
goog.require("goog.structs");
goog.require("cljs.reader");
goog.require("goog.Uri");
goog.require("goog.net.XhrIo");
goog.require("goog.net.XhrIo");
goog.require("goog.events");
goog.require("goog.Uri");
ajax.core.AjaxImpl = function() {
  var obj25627 = {};
  return obj25627;
}();
ajax.core._js_ajax_request = function _js_ajax_request(this$, uri, method, body, headers, handler, opts) {
  if (function() {
    var and__10317__auto__ = this$;
    if (and__10317__auto__) {
      return this$.ajax$core$AjaxImpl$_js_ajax_request$arity$7;
    } else {
      return and__10317__auto__;
    }
  }()) {
    return this$.ajax$core$AjaxImpl$_js_ajax_request$arity$7(this$, uri, method, body, headers, handler, opts);
  } else {
    var x__10956__auto__ = this$ == null ? null : this$;
    return function() {
      var or__10329__auto__ = ajax.core._js_ajax_request[goog.typeOf(x__10956__auto__)];
      if (or__10329__auto__) {
        return or__10329__auto__;
      } else {
        var or__10329__auto____$1 = ajax.core._js_ajax_request["_"];
        if (or__10329__auto____$1) {
          return or__10329__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "AjaxImpl.-js-ajax-request", this$);
        }
      }
    }().call(null, this$, uri, method, body, headers, handler, opts);
  }
};
goog.net.XhrIo.prototype.ajax$core$AjaxImpl$ = true;
goog.net.XhrIo.prototype.ajax$core$AjaxImpl$_js_ajax_request$arity$7 = function(this$, uri, method, body, headers, handler, p__25628) {
  var map__25629 = p__25628;
  var map__25629__$1 = cljs.core.seq_QMARK_.call(null, map__25629) ? cljs.core.apply.call(null, cljs.core.hash_map, map__25629) : map__25629;
  var timeout = cljs.core.get.call(null, map__25629__$1, new cljs.core.Keyword(null, "timeout", "timeout", 3994960083));
  var this$__$1 = this;
  var G__25630 = this$__$1;
  goog.events.listen(G__25630, goog.net.EventType.COMPLETE, handler);
  G__25630.send(uri, method, body, headers, timeout);
  return G__25630;
};
goog.net.XhrManager.prototype.ajax$core$AjaxImpl$ = true;
goog.net.XhrManager.prototype.ajax$core$AjaxImpl$_js_ajax_request$arity$7 = function(this$, uri, method, body, headers, handler, p__25631) {
  var map__25632 = p__25631;
  var map__25632__$1 = cljs.core.seq_QMARK_.call(null, map__25632) ? cljs.core.apply.call(null, cljs.core.hash_map, map__25632) : map__25632;
  var max_retries = cljs.core.get.call(null, map__25632__$1, new cljs.core.Keyword(null, "max-retries", "max-retries", 902021455));
  var priority = cljs.core.get.call(null, map__25632__$1, new cljs.core.Keyword(null, "priority", "priority", 4143410454));
  var timeout = cljs.core.get.call(null, map__25632__$1, new cljs.core.Keyword(null, "timeout", "timeout", 3994960083));
  var id = cljs.core.get.call(null, map__25632__$1, new cljs.core.Keyword(null, "id", "id", 1013907597));
  var this$__$1 = this;
  return this$__$1.send(id, uri, method, body, headers, priority, handler, max_retries);
};
ajax.core.success_QMARK_ = function success_QMARK_(status) {
  return cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([status], true), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [200, 201, 202, 204, 205, 206], null));
};
ajax.core.read_edn = function read_edn(xhrio) {
  return cljs.reader.read_string.call(null, xhrio.getResponseText());
};
ajax.core.edn_response_format = function edn_response_format() {
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "read", "read", 1017400584), ajax.core.read_edn, new cljs.core.Keyword(null, "description", "description", 3584325486), "EDN"], null);
};
ajax.core.edn_request_format = function edn_request_format() {
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "write", "write", 1127304017), cljs.core.pr_str, new cljs.core.Keyword(null, "content-type", "content-type", 1799574400), "application/edn"], null);
};
ajax.core.params_to_str = function params_to_str(params) {
  if (cljs.core.truth_(params)) {
    return goog.Uri.QueryData.createFromMap(new goog.structs.Map(cljs.core.clj__GT_js.call(null, params))).toString();
  } else {
    return null;
  }
};
ajax.core.read_text = function read_text(xhrio) {
  return xhrio.getResponseText();
};
ajax.core.url_request_format = function url_request_format() {
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "write", "write", 1127304017), ajax.core.params_to_str, new cljs.core.Keyword(null, "content-type", "content-type", 1799574400), "application/x-www-form-urlencoded"], null);
};
ajax.core.raw_response_format = function raw_response_format() {
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "read", "read", 1017400584), ajax.core.read_text, new cljs.core.Keyword(null, "description", "description", 3584325486), "raw text"], null);
};
ajax.core.write_json = function write_json(data) {
  return(new goog.json.Serializer).serialize(cljs.core.clj__GT_js.call(null, data));
};
ajax.core.json_request_format = function json_request_format() {
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "write", "write", 1127304017), ajax.core.write_json, new cljs.core.Keyword(null, "content-type", "content-type", 1799574400), "application/json"], null);
};
ajax.core.json_response_format = function json_response_format(p__25633) {
  var map__25635 = p__25633;
  var map__25635__$1 = cljs.core.seq_QMARK_.call(null, map__25635) ? cljs.core.apply.call(null, cljs.core.hash_map, map__25635) : map__25635;
  var keywords_QMARK_ = cljs.core.get.call(null, map__25635__$1, new cljs.core.Keyword(null, "keywords?", "keywords?", 4346628423));
  var prefix = cljs.core.get.call(null, map__25635__$1, new cljs.core.Keyword(null, "prefix", "prefix", 4328760836));
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "read", "read", 1017400584), function read_json(xhrio) {
    var json = xhrio.getResponseJson(prefix);
    return cljs.core.js__GT_clj.call(null, json, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672), keywords_QMARK_);
  }, new cljs.core.Keyword(null, "description", "description", 3584325486), [cljs.core.str("JSON"), cljs.core.str(cljs.core.truth_(prefix) ? [cljs.core.str(" prefix '"), cljs.core.str(prefix), cljs.core.str("'")].join("") : null), cljs.core.str(cljs.core.truth_(keywords_QMARK_) ? " keywordize" : null)].join("")], null);
};
ajax.core.get_default_format = function get_default_format(xhrio) {
  var ct = xhrio.getResponseHeader("Content-Type");
  var format = cljs.core.truth_(function() {
    var and__10317__auto__ = ct;
    if (cljs.core.truth_(and__10317__auto__)) {
      return ct.indexOf("json") >= 0;
    } else {
      return and__10317__auto__;
    }
  }()) ? ajax.core.json_response_format.call(null, cljs.core.PersistentArrayMap.EMPTY) : ajax.core.edn_response_format.call(null);
  return cljs.core.update_in.call(null, format, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "description", "description", 3584325486)], null), function(p1__25636_SHARP_) {
    return[cljs.core.str(p1__25636_SHARP_), cljs.core.str(" (default)")].join("");
  });
};
ajax.core.use_content_type = function use_content_type(format) {
  return cljs.core.dissoc.call(null, format, new cljs.core.Keyword(null, "write", "write", 1127304017));
};
ajax.core.codec = function codec(request_format, p__25637) {
  var map__25639 = p__25637;
  var map__25639__$1 = cljs.core.seq_QMARK_.call(null, map__25639) ? cljs.core.apply.call(null, cljs.core.hash_map, map__25639) : map__25639;
  var response_format = map__25639__$1;
  var description = cljs.core.get.call(null, map__25639__$1, new cljs.core.Keyword(null, "description", "description", 3584325486));
  var read = cljs.core.get.call(null, map__25639__$1, new cljs.core.Keyword(null, "read", "read", 1017400584));
  return cljs.core.assoc.call(null, request_format, new cljs.core.Keyword(null, "read", "read", 1017400584), read, new cljs.core.Keyword(null, "description", "description", 3584325486), description);
};
ajax.core.get_format = function get_format(format) {
  if (cljs.core.map_QMARK_.call(null, format)) {
    return format;
  } else {
    if (cljs.core.ifn_QMARK_.call(null, format)) {
      return ajax.core.codec.call(null, ajax.core.url_request_format.call(null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "read", "read", 1017400584), format, new cljs.core.Keyword(null, "description", "description", 3584325486), "custom"], null));
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw new Error([cljs.core.str("unrecognized format: "), cljs.core.str(format)].join(""));
      } else {
        return null;
      }
    }
  }
};
ajax.core.exception_response = function exception_response(e, status, p__25640, xhrio) {
  var map__25642 = p__25640;
  var map__25642__$1 = cljs.core.seq_QMARK_.call(null, map__25642) ? cljs.core.apply.call(null, cljs.core.hash_map, map__25642) : map__25642;
  var description = cljs.core.get.call(null, map__25642__$1, new cljs.core.Keyword(null, "description", "description", 3584325486));
  var response = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "status", "status", 4416389988), status, new cljs.core.Keyword(null, "response", "response", 673580979), null], null);
  var status_text = [cljs.core.str(e.message), cljs.core.str("  Format should have been "), cljs.core.str(description)].join("");
  var parse_error = cljs.core.assoc.call(null, response, new cljs.core.Keyword(null, "status-text", "status-text", 4371493274), status_text, new cljs.core.Keyword(null, "is-parse-error", "is-parse-error", 4116943293), true, new cljs.core.Keyword(null, "original-text", "original-text", 2831108891), xhrio.getResponseText());
  if (cljs.core.truth_(ajax.core.success_QMARK_.call(null, status))) {
    return parse_error;
  } else {
    return cljs.core.assoc.call(null, response, new cljs.core.Keyword(null, "status-text", "status-text", 4371493274), xhrio.getStatusText(), new cljs.core.Keyword(null, "parse-error", "parse-error", 3528843744), parse_error);
  }
};
ajax.core.interpret_response = function interpret_response(format, response, get_default_format) {
  try {
    var xhrio = response.target;
    var status = xhrio.getStatus();
    var format__$1 = cljs.core.truth_((new cljs.core.Keyword(null, "read", "read", 1017400584)).cljs$core$IFn$_invoke$arity$1(format)) ? format : get_default_format.call(null, xhrio);
    var parse = (new cljs.core.Keyword(null, "read", "read", 1017400584)).cljs$core$IFn$_invoke$arity$1(format__$1);
    try {
      var response__$1 = parse.call(null, xhrio);
      if (cljs.core.truth_(ajax.core.success_QMARK_.call(null, status))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, response__$1], null);
      } else {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [false, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "status", "status", 4416389988), status, new cljs.core.Keyword(null, "status-text", "status-text", 4371493274), xhrio.getStatusText(), new cljs.core.Keyword(null, "response", "response", 673580979), response__$1], null)], null);
      }
    } catch (e25646) {
      if (e25646 instanceof Object) {
        var e = e25646;
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [false, ajax.core.exception_response.call(null, e, status, format__$1, xhrio)], null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw e25646;
        } else {
          return null;
        }
      }
    }
  } catch (e25645) {
    if (e25645 instanceof Object) {
      var e = e25645;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [false, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "status", "status", 4416389988), 0, new cljs.core.Keyword(null, "status-text", "status-text", 4371493274), e.message, new cljs.core.Keyword(null, "response", "response", 673580979), null], null)], null);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw e25645;
      } else {
        return null;
      }
    }
  }
};
ajax.core.no_format = function no_format(xhrio) {
  throw new Error("No response format was supplied.");
};
ajax.core.uri_with_params = function uri_with_params(uri, params) {
  if (cljs.core.truth_(params)) {
    return[cljs.core.str(uri), cljs.core.str("?"), cljs.core.str(ajax.core.params_to_str.call(null, params))].join("");
  } else {
    return uri;
  }
};
ajax.core.process_inputs = function process_inputs(uri, method, p__25647, p__25648) {
  var map__25652 = p__25647;
  var map__25652__$1 = cljs.core.seq_QMARK_.call(null, map__25652) ? cljs.core.apply.call(null, cljs.core.hash_map, map__25652) : map__25652;
  var format = map__25652__$1;
  var content_type = cljs.core.get.call(null, map__25652__$1, new cljs.core.Keyword(null, "content-type", "content-type", 1799574400));
  var write = cljs.core.get.call(null, map__25652__$1, new cljs.core.Keyword(null, "write", "write", 1127304017));
  var map__25653 = p__25648;
  var map__25653__$1 = cljs.core.seq_QMARK_.call(null, map__25653) ? cljs.core.apply.call(null, cljs.core.hash_map, map__25653) : map__25653;
  var headers = cljs.core.get.call(null, map__25653__$1, new cljs.core.Keyword(null, "headers", "headers", 1809212152));
  var params = cljs.core.get.call(null, map__25653__$1, new cljs.core.Keyword(null, "params", "params", 4313443576));
  if (cljs.core._EQ_.call(null, method, "GET")) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [ajax.core.uri_with_params.call(null, uri, params), null, headers], null);
  } else {
    var map__25654 = format;
    var map__25654__$1 = cljs.core.seq_QMARK_.call(null, map__25654) ? cljs.core.apply.call(null, cljs.core.hash_map, map__25654) : map__25654;
    var content_type__$1 = cljs.core.get.call(null, map__25654__$1, new cljs.core.Keyword(null, "content-type", "content-type", 1799574400));
    var write__$1 = cljs.core.get.call(null, map__25654__$1, new cljs.core.Keyword(null, "write", "write", 1127304017));
    var body = write__$1.call(null, params);
    var content_type__$2 = cljs.core.truth_(content_type__$1) ? new cljs.core.PersistentArrayMap(null, 1, ["Content-Type", content_type__$1], null) : null;
    var headers__$1 = cljs.core.merge.call(null, function() {
      var or__10329__auto__ = headers;
      if (cljs.core.truth_(or__10329__auto__)) {
        return or__10329__auto__;
      } else {
        return cljs.core.PersistentArrayMap.EMPTY;
      }
    }(), content_type__$2);
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [uri, body, headers__$1], null);
  }
};
ajax.core.normalize_method = function normalize_method(method) {
  if (method instanceof cljs.core.Keyword) {
    return clojure.string.upper_case.call(null, cljs.core.name.call(null, method));
  } else {
    return method;
  }
};
ajax.core.base_handler = function base_handler(format, p__25655) {
  var map__25657 = p__25655;
  var map__25657__$1 = cljs.core.seq_QMARK_.call(null, map__25657) ? cljs.core.apply.call(null, cljs.core.hash_map, map__25657) : map__25657;
  var get_default_format = cljs.core.get.call(null, map__25657__$1, new cljs.core.Keyword(null, "get-default-format", "get-default-format", 1021569996));
  var handler = cljs.core.get.call(null, map__25657__$1, new cljs.core.Keyword(null, "handler", "handler", 1706707644));
  return function(xhrio) {
    return handler.call(null, ajax.core.interpret_response.call(null, format, xhrio, function() {
      var or__10329__auto__ = get_default_format;
      if (cljs.core.truth_(or__10329__auto__)) {
        return or__10329__auto__;
      } else {
        return ajax.core.no_format;
      }
    }()));
  };
};
ajax.core.ajax_request = function() {
  var ajax_request = null;
  var ajax_request__3 = function(uri, method, opts) {
    return ajax_request.call(null, uri, method, opts, new goog.net.XhrIo);
  };
  var ajax_request__4 = function(uri, method, p__25658, js_ajax) {
    var map__25661 = p__25658;
    var map__25661__$1 = cljs.core.seq_QMARK_.call(null, map__25661) ? cljs.core.apply.call(null, cljs.core.hash_map, map__25661) : map__25661;
    var opts = map__25661__$1;
    var format = cljs.core.get.call(null, map__25661__$1, new cljs.core.Keyword(null, "format", "format", 4040092521));
    var format__$1 = ajax.core.get_format.call(null, format);
    var method__$1 = ajax.core.normalize_method.call(null, method);
    var vec__25662 = ajax.core.process_inputs.call(null, uri, method__$1, format__$1, opts);
    var uri__$1 = cljs.core.nth.call(null, vec__25662, 0, null);
    var body = cljs.core.nth.call(null, vec__25662, 1, null);
    var headers = cljs.core.nth.call(null, vec__25662, 2, null);
    var handler = ajax.core.base_handler.call(null, format__$1, opts);
    return ajax.core._js_ajax_request.call(null, js_ajax, uri__$1, method__$1, body, cljs.core.clj__GT_js.call(null, headers), handler, opts);
  };
  ajax_request = function(uri, method, p__25658, js_ajax) {
    switch(arguments.length) {
      case 3:
        return ajax_request__3.call(this, uri, method, p__25658);
      case 4:
        return ajax_request__4.call(this, uri, method, p__25658, js_ajax);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ajax_request.cljs$core$IFn$_invoke$arity$3 = ajax_request__3;
  ajax_request.cljs$core$IFn$_invoke$arity$4 = ajax_request__4;
  return ajax_request;
}();
ajax.core.json_format = function json_format(format_params) {
  return ajax.core.codec.call(null, ajax.core.json_request_format.call(null), ajax.core.json_response_format.call(null, format_params));
};
ajax.core.edn_format = function edn_format() {
  return ajax.core.codec.call(null, ajax.core.edn_request_format.call(null), ajax.core.edn_response_format.call(null));
};
ajax.core.raw_format = function raw_format() {
  return ajax.core.codec.call(null, ajax.core.url_request_format.call(null), ajax.core.raw_response_format.call(null));
};
ajax.core.keyword_request_format = function keyword_request_format(format, format_params) {
  var G__25664 = format;
  if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "url", "url", 1014020321), G__25664)) {
    return ajax.core.url_request_format.call(null);
  } else {
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "raw", "raw", 1014016922), G__25664)) {
      return ajax.core.url_request_format.call(null);
    } else {
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "edn", "edn", 1014004513), G__25664)) {
        return ajax.core.edn_request_format.call(null);
      } else {
        if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "json", "json", 1017176154), G__25664)) {
          return ajax.core.json_request_format.call(null);
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw new Error([cljs.core.str("unrecognized request format: "), cljs.core.str(format)].join(""));
          } else {
            return null;
          }
        }
      }
    }
  }
};
ajax.core.keyword_response_format = function keyword_response_format(format, format_params) {
  var G__25666 = format;
  if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "raw", "raw", 1014016922), G__25666)) {
    return ajax.core.raw_response_format.call(null);
  } else {
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "edn", "edn", 1014004513), G__25666)) {
      return ajax.core.edn_response_format.call(null);
    } else {
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "json", "json", 1017176154), G__25666)) {
        return ajax.core.json_response_format.call(null, format_params);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return null;
        } else {
          return null;
        }
      }
    }
  }
};
ajax.core.transform_handler = function transform_handler(p__25667) {
  var map__25672 = p__25667;
  var map__25672__$1 = cljs.core.seq_QMARK_.call(null, map__25672) ? cljs.core.apply.call(null, cljs.core.hash_map, map__25672) : map__25672;
  var finally$ = cljs.core.get.call(null, map__25672__$1, new cljs.core.Keyword(null, "finally", "finally", 4455611637));
  var error_handler = cljs.core.get.call(null, map__25672__$1, new cljs.core.Keyword(null, "error-handler", "error-handler", 1866823671));
  var handler = cljs.core.get.call(null, map__25672__$1, new cljs.core.Keyword(null, "handler", "handler", 1706707644));
  return function easy_handler(p__25673) {
    var vec__25675 = p__25673;
    var ok = cljs.core.nth.call(null, vec__25675, 0, null);
    var result = cljs.core.nth.call(null, vec__25675, 1, null);
    var temp__4090__auto___25676 = cljs.core.truth_(ok) ? handler : error_handler;
    if (cljs.core.truth_(temp__4090__auto___25676)) {
      var h_25677 = temp__4090__auto___25676;
      h_25677.call(null, result);
    } else {
    }
    if (cljs.core.fn_QMARK_.call(null, finally$)) {
      return finally$.call(null);
    } else {
      return null;
    }
  };
};
ajax.core.transform_format = function transform_format(p__25678) {
  var map__25680 = p__25678;
  var map__25680__$1 = cljs.core.seq_QMARK_.call(null, map__25680) ? cljs.core.apply.call(null, cljs.core.hash_map, map__25680) : map__25680;
  var opts = map__25680__$1;
  var response_format = cljs.core.get.call(null, map__25680__$1, new cljs.core.Keyword(null, "response-format", "response-format", 4250805877));
  var format = cljs.core.get.call(null, map__25680__$1, new cljs.core.Keyword(null, "format", "format", 4040092521));
  var rf = ajax.core.keyword_response_format.call(null, response_format, opts);
  if (format == null) {
    return ajax.core.codec.call(null, ajax.core.edn_request_format.call(null), rf);
  } else {
    if (format instanceof cljs.core.Keyword) {
      return ajax.core.codec.call(null, ajax.core.keyword_request_format.call(null, format, opts), rf);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return format;
      } else {
        return null;
      }
    }
  }
};
ajax.core.transform_opts = function transform_opts(opts) {
  return cljs.core.assoc.call(null, opts, new cljs.core.Keyword(null, "handler", "handler", 1706707644), ajax.core.transform_handler.call(null, opts), new cljs.core.Keyword(null, "format", "format", 4040092521), ajax.core.transform_format.call(null, opts), new cljs.core.Keyword(null, "get-default-format", "get-default-format", 1021569996), ajax.core.get_default_format);
};
ajax.core.GET = function() {
  var GET__delegate = function(uri, p__25681) {
    var vec__25683 = p__25681;
    var opts = cljs.core.nth.call(null, vec__25683, 0, null);
    return ajax.core.ajax_request.call(null, uri, "GET", ajax.core.transform_opts.call(null, opts));
  };
  var GET = function(uri, var_args) {
    var p__25681 = null;
    if (arguments.length > 1) {
      p__25681 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return GET__delegate.call(this, uri, p__25681);
  };
  GET.cljs$lang$maxFixedArity = 1;
  GET.cljs$lang$applyTo = function(arglist__25684) {
    var uri = cljs.core.first(arglist__25684);
    var p__25681 = cljs.core.rest(arglist__25684);
    return GET__delegate(uri, p__25681);
  };
  GET.cljs$core$IFn$_invoke$arity$variadic = GET__delegate;
  return GET;
}();
ajax.core.PUT = function() {
  var PUT__delegate = function(uri, p__25685) {
    var vec__25687 = p__25685;
    var opts = cljs.core.nth.call(null, vec__25687, 0, null);
    return ajax.core.ajax_request.call(null, uri, "PUT", ajax.core.transform_opts.call(null, opts));
  };
  var PUT = function(uri, var_args) {
    var p__25685 = null;
    if (arguments.length > 1) {
      p__25685 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return PUT__delegate.call(this, uri, p__25685);
  };
  PUT.cljs$lang$maxFixedArity = 1;
  PUT.cljs$lang$applyTo = function(arglist__25688) {
    var uri = cljs.core.first(arglist__25688);
    var p__25685 = cljs.core.rest(arglist__25688);
    return PUT__delegate(uri, p__25685);
  };
  PUT.cljs$core$IFn$_invoke$arity$variadic = PUT__delegate;
  return PUT;
}();
ajax.core.POST = function() {
  var POST__delegate = function(uri, p__25689) {
    var vec__25691 = p__25689;
    var opts = cljs.core.nth.call(null, vec__25691, 0, null);
    return ajax.core.ajax_request.call(null, uri, "POST", ajax.core.transform_opts.call(null, opts));
  };
  var POST = function(uri, var_args) {
    var p__25689 = null;
    if (arguments.length > 1) {
      p__25689 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return POST__delegate.call(this, uri, p__25689);
  };
  POST.cljs$lang$maxFixedArity = 1;
  POST.cljs$lang$applyTo = function(arglist__25692) {
    var uri = cljs.core.first(arglist__25692);
    var p__25689 = cljs.core.rest(arglist__25692);
    return POST__delegate(uri, p__25689);
  };
  POST.cljs$core$IFn$_invoke$arity$variadic = POST__delegate;
  return POST;
}();
goog.provide("goog.functions");
goog.functions.constant = function(retValue) {
  return function() {
    return retValue;
  };
};
goog.functions.FALSE = goog.functions.constant(false);
goog.functions.TRUE = goog.functions.constant(true);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.functions.error = function(message) {
  return function() {
    throw Error(message);
  };
};
goog.functions.lock = function(f, opt_numArgs) {
  opt_numArgs = opt_numArgs || 0;
  return function() {
    return f.apply(this, Array.prototype.slice.call(arguments, 0, opt_numArgs));
  };
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue));
};
goog.functions.compose = function(fn, var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    if (length) {
      result = functions[length - 1].apply(this, arguments);
    }
    for (var i = length - 2;i >= 0;i--) {
      result = functions[i].call(this, result);
    }
    return result;
  };
};
goog.functions.sequence = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    for (var i = 0;i < length;i++) {
      result = functions[i].apply(this, arguments);
    }
    return result;
  };
};
goog.functions.and = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (!functions[i].apply(this, arguments)) {
        return false;
      }
    }
    return true;
  };
};
goog.functions.or = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (functions[i].apply(this, arguments)) {
        return true;
      }
    }
    return false;
  };
};
goog.functions.not = function(f) {
  return function() {
    return!f.apply(this, arguments);
  };
};
goog.functions.create = function(constructor, var_args) {
  var temp = function() {
  };
  temp.prototype = constructor.prototype;
  var obj = new temp;
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj;
};
goog.provide("quiescent");
goog.require("cljs.core");
quiescent._STAR_component_STAR_ = null;
quiescent.component = function component(renderer) {
  var react_component = React.createClass({"render":function() {
    var this$ = this;
    var _STAR_component_STAR_25622 = quiescent._STAR_component_STAR_;
    try {
      quiescent._STAR_component_STAR_ = this$;
      return cljs.core.apply.call(null, renderer, this$.props["value"], this$.props["statics"]);
    } finally {
      quiescent._STAR_component_STAR_ = _STAR_component_STAR_25622;
    }
  }, "shouldComponentUpdate":function(next_props, _) {
    var this$ = this;
    return cljs.core.not_EQ_.call(null, this$.props["value"], next_props["value"]);
  }});
  return function() {
    var G__25623__delegate = function(value, static_args) {
      return react_component.call(null, {"statics":static_args, "value":value});
    };
    var G__25623 = function(value, var_args) {
      var static_args = null;
      if (arguments.length > 1) {
        static_args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__25623__delegate.call(this, value, static_args);
    };
    G__25623.cljs$lang$maxFixedArity = 1;
    G__25623.cljs$lang$applyTo = function(arglist__25624) {
      var value = cljs.core.first(arglist__25624);
      var static_args = cljs.core.rest(arglist__25624);
      return G__25623__delegate(value, static_args);
    };
    G__25623.cljs$core$IFn$_invoke$arity$variadic = G__25623__delegate;
    return G__25623;
  }();
};
quiescent.WrapperComponent = React.createClass({"componentDidMount":function() {
  var this$ = this;
  var temp__4092__auto__ = this$.props["onMount"];
  if (cljs.core.truth_(temp__4092__auto__)) {
    var f = temp__4092__auto__;
    return f.call(null, this$.getDOMNode());
  } else {
    return null;
  }
}, "componentDidUpdate":function(prev_props, prev_state) {
  var this$ = this;
  var temp__4092__auto__ = this$.props["onUpdate"];
  if (cljs.core.truth_(temp__4092__auto__)) {
    var f = temp__4092__auto__;
    var _STAR_component_STAR_25625 = quiescent._STAR_component_STAR_;
    try {
      quiescent._STAR_component_STAR_ = this$;
      return f.call(null, this$.getDOMNode());
    } finally {
      quiescent._STAR_component_STAR_ = _STAR_component_STAR_25625;
    }
  } else {
    return null;
  }
}, "render":function() {
  var this$ = this;
  return this$.props["wrappee"];
}});
quiescent.on_update = function on_update(child, f) {
  return quiescent.WrapperComponent.call(null, {"onUpdate":f, "wrappee":child});
};
quiescent.on_initial_render = function on_initial_render(child, f) {
  return quiescent.WrapperComponent.call(null, {"onMount":f, "wrappee":child});
};
quiescent.on_render = function on_render(child, f) {
  return quiescent.WrapperComponent.call(null, {"onMount":f, "onUpdate":f, "wrappee":child});
};
quiescent.render = function render(component, node) {
  return React.renderComponent(component, node);
};
goog.provide("quiescent.dom");
goog.require("cljs.core");
goog.require("quiescent");
goog.require("quiescent");
quiescent.dom.js_props = function js_props(obj) {
  if (cljs.core.map_QMARK_.call(null, obj)) {
    var o = function() {
      var obj22019 = {};
      return obj22019;
    }();
    var seq__22020_22026 = cljs.core.seq.call(null, obj);
    var chunk__22021_22027 = null;
    var count__22022_22028 = 0;
    var i__22023_22029 = 0;
    while (true) {
      if (i__22023_22029 < count__22022_22028) {
        var vec__22024_22030 = cljs.core._nth.call(null, chunk__22021_22027, i__22023_22029);
        var k_22031 = cljs.core.nth.call(null, vec__22024_22030, 0, null);
        var v_22032 = cljs.core.nth.call(null, vec__22024_22030, 1, null);
        o[cljs.core.name.call(null, k_22031)] = js_props.call(null, v_22032);
        var G__22033 = seq__22020_22026;
        var G__22034 = chunk__22021_22027;
        var G__22035 = count__22022_22028;
        var G__22036 = i__22023_22029 + 1;
        seq__22020_22026 = G__22033;
        chunk__22021_22027 = G__22034;
        count__22022_22028 = G__22035;
        i__22023_22029 = G__22036;
        continue;
      } else {
        var temp__4092__auto___22037 = cljs.core.seq.call(null, seq__22020_22026);
        if (temp__4092__auto___22037) {
          var seq__22020_22038__$1 = temp__4092__auto___22037;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22020_22038__$1)) {
            var c__11077__auto___22039 = cljs.core.chunk_first.call(null, seq__22020_22038__$1);
            var G__22040 = cljs.core.chunk_rest.call(null, seq__22020_22038__$1);
            var G__22041 = c__11077__auto___22039;
            var G__22042 = cljs.core.count.call(null, c__11077__auto___22039);
            var G__22043 = 0;
            seq__22020_22026 = G__22040;
            chunk__22021_22027 = G__22041;
            count__22022_22028 = G__22042;
            i__22023_22029 = G__22043;
            continue;
          } else {
            var vec__22025_22044 = cljs.core.first.call(null, seq__22020_22038__$1);
            var k_22045 = cljs.core.nth.call(null, vec__22025_22044, 0, null);
            var v_22046 = cljs.core.nth.call(null, vec__22025_22044, 1, null);
            o[cljs.core.name.call(null, k_22045)] = js_props.call(null, v_22046);
            var G__22047 = cljs.core.next.call(null, seq__22020_22038__$1);
            var G__22048 = null;
            var G__22049 = 0;
            var G__22050 = 0;
            seq__22020_22026 = G__22047;
            chunk__22021_22027 = G__22048;
            count__22022_22028 = G__22049;
            i__22023_22029 = G__22050;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return o;
  } else {
    return obj;
  }
};
quiescent.dom.a = function() {
  var a__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22055_23003 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22056_23004 = null;
    var count__22057_23005 = 0;
    var i__22058_23006 = 0;
    while (true) {
      if (i__22058_23006 < count__22057_23005) {
        var arg__11936__auto___23007 = cljs.core._nth.call(null, chunk__22056_23004, i__22058_23006);
        a__11935__auto__.push(arg__11936__auto___23007);
        var G__23008 = seq__22055_23003;
        var G__23009 = chunk__22056_23004;
        var G__23010 = count__22057_23005;
        var G__23011 = i__22058_23006 + 1;
        seq__22055_23003 = G__23008;
        chunk__22056_23004 = G__23009;
        count__22057_23005 = G__23010;
        i__22058_23006 = G__23011;
        continue;
      } else {
        var temp__4092__auto___23012 = cljs.core.seq.call(null, seq__22055_23003);
        if (temp__4092__auto___23012) {
          var seq__22055_23013__$1 = temp__4092__auto___23012;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22055_23013__$1)) {
            var c__11077__auto___23014 = cljs.core.chunk_first.call(null, seq__22055_23013__$1);
            var G__23015 = cljs.core.chunk_rest.call(null, seq__22055_23013__$1);
            var G__23016 = c__11077__auto___23014;
            var G__23017 = cljs.core.count.call(null, c__11077__auto___23014);
            var G__23018 = 0;
            seq__22055_23003 = G__23015;
            chunk__22056_23004 = G__23016;
            count__22057_23005 = G__23017;
            i__22058_23006 = G__23018;
            continue;
          } else {
            var arg__11936__auto___23019 = cljs.core.first.call(null, seq__22055_23013__$1);
            a__11935__auto__.push(arg__11936__auto___23019);
            var G__23020 = cljs.core.next.call(null, seq__22055_23013__$1);
            var G__23021 = null;
            var G__23022 = 0;
            var G__23023 = 0;
            seq__22055_23003 = G__23020;
            chunk__22056_23004 = G__23021;
            count__22057_23005 = G__23022;
            i__22058_23006 = G__23023;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.a.apply(null, a__11935__auto__);
  };
  var a = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return a__delegate.call(this, args__11934__auto__);
  };
  a.cljs$lang$maxFixedArity = 0;
  a.cljs$lang$applyTo = function(arglist__23024) {
    var args__11934__auto__ = cljs.core.seq(arglist__23024);
    return a__delegate(args__11934__auto__);
  };
  a.cljs$core$IFn$_invoke$arity$variadic = a__delegate;
  return a;
}();
quiescent.dom.abbr = function() {
  var abbr__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22063_23025 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22064_23026 = null;
    var count__22065_23027 = 0;
    var i__22066_23028 = 0;
    while (true) {
      if (i__22066_23028 < count__22065_23027) {
        var arg__11936__auto___23029 = cljs.core._nth.call(null, chunk__22064_23026, i__22066_23028);
        a__11935__auto__.push(arg__11936__auto___23029);
        var G__23030 = seq__22063_23025;
        var G__23031 = chunk__22064_23026;
        var G__23032 = count__22065_23027;
        var G__23033 = i__22066_23028 + 1;
        seq__22063_23025 = G__23030;
        chunk__22064_23026 = G__23031;
        count__22065_23027 = G__23032;
        i__22066_23028 = G__23033;
        continue;
      } else {
        var temp__4092__auto___23034 = cljs.core.seq.call(null, seq__22063_23025);
        if (temp__4092__auto___23034) {
          var seq__22063_23035__$1 = temp__4092__auto___23034;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22063_23035__$1)) {
            var c__11077__auto___23036 = cljs.core.chunk_first.call(null, seq__22063_23035__$1);
            var G__23037 = cljs.core.chunk_rest.call(null, seq__22063_23035__$1);
            var G__23038 = c__11077__auto___23036;
            var G__23039 = cljs.core.count.call(null, c__11077__auto___23036);
            var G__23040 = 0;
            seq__22063_23025 = G__23037;
            chunk__22064_23026 = G__23038;
            count__22065_23027 = G__23039;
            i__22066_23028 = G__23040;
            continue;
          } else {
            var arg__11936__auto___23041 = cljs.core.first.call(null, seq__22063_23035__$1);
            a__11935__auto__.push(arg__11936__auto___23041);
            var G__23042 = cljs.core.next.call(null, seq__22063_23035__$1);
            var G__23043 = null;
            var G__23044 = 0;
            var G__23045 = 0;
            seq__22063_23025 = G__23042;
            chunk__22064_23026 = G__23043;
            count__22065_23027 = G__23044;
            i__22066_23028 = G__23045;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.abbr.apply(null, a__11935__auto__);
  };
  var abbr = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return abbr__delegate.call(this, args__11934__auto__);
  };
  abbr.cljs$lang$maxFixedArity = 0;
  abbr.cljs$lang$applyTo = function(arglist__23046) {
    var args__11934__auto__ = cljs.core.seq(arglist__23046);
    return abbr__delegate(args__11934__auto__);
  };
  abbr.cljs$core$IFn$_invoke$arity$variadic = abbr__delegate;
  return abbr;
}();
quiescent.dom.address = function() {
  var address__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22071_23047 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22072_23048 = null;
    var count__22073_23049 = 0;
    var i__22074_23050 = 0;
    while (true) {
      if (i__22074_23050 < count__22073_23049) {
        var arg__11936__auto___23051 = cljs.core._nth.call(null, chunk__22072_23048, i__22074_23050);
        a__11935__auto__.push(arg__11936__auto___23051);
        var G__23052 = seq__22071_23047;
        var G__23053 = chunk__22072_23048;
        var G__23054 = count__22073_23049;
        var G__23055 = i__22074_23050 + 1;
        seq__22071_23047 = G__23052;
        chunk__22072_23048 = G__23053;
        count__22073_23049 = G__23054;
        i__22074_23050 = G__23055;
        continue;
      } else {
        var temp__4092__auto___23056 = cljs.core.seq.call(null, seq__22071_23047);
        if (temp__4092__auto___23056) {
          var seq__22071_23057__$1 = temp__4092__auto___23056;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22071_23057__$1)) {
            var c__11077__auto___23058 = cljs.core.chunk_first.call(null, seq__22071_23057__$1);
            var G__23059 = cljs.core.chunk_rest.call(null, seq__22071_23057__$1);
            var G__23060 = c__11077__auto___23058;
            var G__23061 = cljs.core.count.call(null, c__11077__auto___23058);
            var G__23062 = 0;
            seq__22071_23047 = G__23059;
            chunk__22072_23048 = G__23060;
            count__22073_23049 = G__23061;
            i__22074_23050 = G__23062;
            continue;
          } else {
            var arg__11936__auto___23063 = cljs.core.first.call(null, seq__22071_23057__$1);
            a__11935__auto__.push(arg__11936__auto___23063);
            var G__23064 = cljs.core.next.call(null, seq__22071_23057__$1);
            var G__23065 = null;
            var G__23066 = 0;
            var G__23067 = 0;
            seq__22071_23047 = G__23064;
            chunk__22072_23048 = G__23065;
            count__22073_23049 = G__23066;
            i__22074_23050 = G__23067;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.address.apply(null, a__11935__auto__);
  };
  var address = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return address__delegate.call(this, args__11934__auto__);
  };
  address.cljs$lang$maxFixedArity = 0;
  address.cljs$lang$applyTo = function(arglist__23068) {
    var args__11934__auto__ = cljs.core.seq(arglist__23068);
    return address__delegate(args__11934__auto__);
  };
  address.cljs$core$IFn$_invoke$arity$variadic = address__delegate;
  return address;
}();
quiescent.dom.area = function() {
  var area__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22079_23069 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22080_23070 = null;
    var count__22081_23071 = 0;
    var i__22082_23072 = 0;
    while (true) {
      if (i__22082_23072 < count__22081_23071) {
        var arg__11936__auto___23073 = cljs.core._nth.call(null, chunk__22080_23070, i__22082_23072);
        a__11935__auto__.push(arg__11936__auto___23073);
        var G__23074 = seq__22079_23069;
        var G__23075 = chunk__22080_23070;
        var G__23076 = count__22081_23071;
        var G__23077 = i__22082_23072 + 1;
        seq__22079_23069 = G__23074;
        chunk__22080_23070 = G__23075;
        count__22081_23071 = G__23076;
        i__22082_23072 = G__23077;
        continue;
      } else {
        var temp__4092__auto___23078 = cljs.core.seq.call(null, seq__22079_23069);
        if (temp__4092__auto___23078) {
          var seq__22079_23079__$1 = temp__4092__auto___23078;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22079_23079__$1)) {
            var c__11077__auto___23080 = cljs.core.chunk_first.call(null, seq__22079_23079__$1);
            var G__23081 = cljs.core.chunk_rest.call(null, seq__22079_23079__$1);
            var G__23082 = c__11077__auto___23080;
            var G__23083 = cljs.core.count.call(null, c__11077__auto___23080);
            var G__23084 = 0;
            seq__22079_23069 = G__23081;
            chunk__22080_23070 = G__23082;
            count__22081_23071 = G__23083;
            i__22082_23072 = G__23084;
            continue;
          } else {
            var arg__11936__auto___23085 = cljs.core.first.call(null, seq__22079_23079__$1);
            a__11935__auto__.push(arg__11936__auto___23085);
            var G__23086 = cljs.core.next.call(null, seq__22079_23079__$1);
            var G__23087 = null;
            var G__23088 = 0;
            var G__23089 = 0;
            seq__22079_23069 = G__23086;
            chunk__22080_23070 = G__23087;
            count__22081_23071 = G__23088;
            i__22082_23072 = G__23089;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.area.apply(null, a__11935__auto__);
  };
  var area = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return area__delegate.call(this, args__11934__auto__);
  };
  area.cljs$lang$maxFixedArity = 0;
  area.cljs$lang$applyTo = function(arglist__23090) {
    var args__11934__auto__ = cljs.core.seq(arglist__23090);
    return area__delegate(args__11934__auto__);
  };
  area.cljs$core$IFn$_invoke$arity$variadic = area__delegate;
  return area;
}();
quiescent.dom.article = function() {
  var article__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22087_23091 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22088_23092 = null;
    var count__22089_23093 = 0;
    var i__22090_23094 = 0;
    while (true) {
      if (i__22090_23094 < count__22089_23093) {
        var arg__11936__auto___23095 = cljs.core._nth.call(null, chunk__22088_23092, i__22090_23094);
        a__11935__auto__.push(arg__11936__auto___23095);
        var G__23096 = seq__22087_23091;
        var G__23097 = chunk__22088_23092;
        var G__23098 = count__22089_23093;
        var G__23099 = i__22090_23094 + 1;
        seq__22087_23091 = G__23096;
        chunk__22088_23092 = G__23097;
        count__22089_23093 = G__23098;
        i__22090_23094 = G__23099;
        continue;
      } else {
        var temp__4092__auto___23100 = cljs.core.seq.call(null, seq__22087_23091);
        if (temp__4092__auto___23100) {
          var seq__22087_23101__$1 = temp__4092__auto___23100;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22087_23101__$1)) {
            var c__11077__auto___23102 = cljs.core.chunk_first.call(null, seq__22087_23101__$1);
            var G__23103 = cljs.core.chunk_rest.call(null, seq__22087_23101__$1);
            var G__23104 = c__11077__auto___23102;
            var G__23105 = cljs.core.count.call(null, c__11077__auto___23102);
            var G__23106 = 0;
            seq__22087_23091 = G__23103;
            chunk__22088_23092 = G__23104;
            count__22089_23093 = G__23105;
            i__22090_23094 = G__23106;
            continue;
          } else {
            var arg__11936__auto___23107 = cljs.core.first.call(null, seq__22087_23101__$1);
            a__11935__auto__.push(arg__11936__auto___23107);
            var G__23108 = cljs.core.next.call(null, seq__22087_23101__$1);
            var G__23109 = null;
            var G__23110 = 0;
            var G__23111 = 0;
            seq__22087_23091 = G__23108;
            chunk__22088_23092 = G__23109;
            count__22089_23093 = G__23110;
            i__22090_23094 = G__23111;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.article.apply(null, a__11935__auto__);
  };
  var article = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return article__delegate.call(this, args__11934__auto__);
  };
  article.cljs$lang$maxFixedArity = 0;
  article.cljs$lang$applyTo = function(arglist__23112) {
    var args__11934__auto__ = cljs.core.seq(arglist__23112);
    return article__delegate(args__11934__auto__);
  };
  article.cljs$core$IFn$_invoke$arity$variadic = article__delegate;
  return article;
}();
quiescent.dom.aside = function() {
  var aside__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22095_23113 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22096_23114 = null;
    var count__22097_23115 = 0;
    var i__22098_23116 = 0;
    while (true) {
      if (i__22098_23116 < count__22097_23115) {
        var arg__11936__auto___23117 = cljs.core._nth.call(null, chunk__22096_23114, i__22098_23116);
        a__11935__auto__.push(arg__11936__auto___23117);
        var G__23118 = seq__22095_23113;
        var G__23119 = chunk__22096_23114;
        var G__23120 = count__22097_23115;
        var G__23121 = i__22098_23116 + 1;
        seq__22095_23113 = G__23118;
        chunk__22096_23114 = G__23119;
        count__22097_23115 = G__23120;
        i__22098_23116 = G__23121;
        continue;
      } else {
        var temp__4092__auto___23122 = cljs.core.seq.call(null, seq__22095_23113);
        if (temp__4092__auto___23122) {
          var seq__22095_23123__$1 = temp__4092__auto___23122;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22095_23123__$1)) {
            var c__11077__auto___23124 = cljs.core.chunk_first.call(null, seq__22095_23123__$1);
            var G__23125 = cljs.core.chunk_rest.call(null, seq__22095_23123__$1);
            var G__23126 = c__11077__auto___23124;
            var G__23127 = cljs.core.count.call(null, c__11077__auto___23124);
            var G__23128 = 0;
            seq__22095_23113 = G__23125;
            chunk__22096_23114 = G__23126;
            count__22097_23115 = G__23127;
            i__22098_23116 = G__23128;
            continue;
          } else {
            var arg__11936__auto___23129 = cljs.core.first.call(null, seq__22095_23123__$1);
            a__11935__auto__.push(arg__11936__auto___23129);
            var G__23130 = cljs.core.next.call(null, seq__22095_23123__$1);
            var G__23131 = null;
            var G__23132 = 0;
            var G__23133 = 0;
            seq__22095_23113 = G__23130;
            chunk__22096_23114 = G__23131;
            count__22097_23115 = G__23132;
            i__22098_23116 = G__23133;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.aside.apply(null, a__11935__auto__);
  };
  var aside = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return aside__delegate.call(this, args__11934__auto__);
  };
  aside.cljs$lang$maxFixedArity = 0;
  aside.cljs$lang$applyTo = function(arglist__23134) {
    var args__11934__auto__ = cljs.core.seq(arglist__23134);
    return aside__delegate(args__11934__auto__);
  };
  aside.cljs$core$IFn$_invoke$arity$variadic = aside__delegate;
  return aside;
}();
quiescent.dom.audio = function() {
  var audio__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22103_23135 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22104_23136 = null;
    var count__22105_23137 = 0;
    var i__22106_23138 = 0;
    while (true) {
      if (i__22106_23138 < count__22105_23137) {
        var arg__11936__auto___23139 = cljs.core._nth.call(null, chunk__22104_23136, i__22106_23138);
        a__11935__auto__.push(arg__11936__auto___23139);
        var G__23140 = seq__22103_23135;
        var G__23141 = chunk__22104_23136;
        var G__23142 = count__22105_23137;
        var G__23143 = i__22106_23138 + 1;
        seq__22103_23135 = G__23140;
        chunk__22104_23136 = G__23141;
        count__22105_23137 = G__23142;
        i__22106_23138 = G__23143;
        continue;
      } else {
        var temp__4092__auto___23144 = cljs.core.seq.call(null, seq__22103_23135);
        if (temp__4092__auto___23144) {
          var seq__22103_23145__$1 = temp__4092__auto___23144;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22103_23145__$1)) {
            var c__11077__auto___23146 = cljs.core.chunk_first.call(null, seq__22103_23145__$1);
            var G__23147 = cljs.core.chunk_rest.call(null, seq__22103_23145__$1);
            var G__23148 = c__11077__auto___23146;
            var G__23149 = cljs.core.count.call(null, c__11077__auto___23146);
            var G__23150 = 0;
            seq__22103_23135 = G__23147;
            chunk__22104_23136 = G__23148;
            count__22105_23137 = G__23149;
            i__22106_23138 = G__23150;
            continue;
          } else {
            var arg__11936__auto___23151 = cljs.core.first.call(null, seq__22103_23145__$1);
            a__11935__auto__.push(arg__11936__auto___23151);
            var G__23152 = cljs.core.next.call(null, seq__22103_23145__$1);
            var G__23153 = null;
            var G__23154 = 0;
            var G__23155 = 0;
            seq__22103_23135 = G__23152;
            chunk__22104_23136 = G__23153;
            count__22105_23137 = G__23154;
            i__22106_23138 = G__23155;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.audio.apply(null, a__11935__auto__);
  };
  var audio = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return audio__delegate.call(this, args__11934__auto__);
  };
  audio.cljs$lang$maxFixedArity = 0;
  audio.cljs$lang$applyTo = function(arglist__23156) {
    var args__11934__auto__ = cljs.core.seq(arglist__23156);
    return audio__delegate(args__11934__auto__);
  };
  audio.cljs$core$IFn$_invoke$arity$variadic = audio__delegate;
  return audio;
}();
quiescent.dom.b = function() {
  var b__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22111_23157 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22112_23158 = null;
    var count__22113_23159 = 0;
    var i__22114_23160 = 0;
    while (true) {
      if (i__22114_23160 < count__22113_23159) {
        var arg__11936__auto___23161 = cljs.core._nth.call(null, chunk__22112_23158, i__22114_23160);
        a__11935__auto__.push(arg__11936__auto___23161);
        var G__23162 = seq__22111_23157;
        var G__23163 = chunk__22112_23158;
        var G__23164 = count__22113_23159;
        var G__23165 = i__22114_23160 + 1;
        seq__22111_23157 = G__23162;
        chunk__22112_23158 = G__23163;
        count__22113_23159 = G__23164;
        i__22114_23160 = G__23165;
        continue;
      } else {
        var temp__4092__auto___23166 = cljs.core.seq.call(null, seq__22111_23157);
        if (temp__4092__auto___23166) {
          var seq__22111_23167__$1 = temp__4092__auto___23166;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22111_23167__$1)) {
            var c__11077__auto___23168 = cljs.core.chunk_first.call(null, seq__22111_23167__$1);
            var G__23169 = cljs.core.chunk_rest.call(null, seq__22111_23167__$1);
            var G__23170 = c__11077__auto___23168;
            var G__23171 = cljs.core.count.call(null, c__11077__auto___23168);
            var G__23172 = 0;
            seq__22111_23157 = G__23169;
            chunk__22112_23158 = G__23170;
            count__22113_23159 = G__23171;
            i__22114_23160 = G__23172;
            continue;
          } else {
            var arg__11936__auto___23173 = cljs.core.first.call(null, seq__22111_23167__$1);
            a__11935__auto__.push(arg__11936__auto___23173);
            var G__23174 = cljs.core.next.call(null, seq__22111_23167__$1);
            var G__23175 = null;
            var G__23176 = 0;
            var G__23177 = 0;
            seq__22111_23157 = G__23174;
            chunk__22112_23158 = G__23175;
            count__22113_23159 = G__23176;
            i__22114_23160 = G__23177;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.b.apply(null, a__11935__auto__);
  };
  var b = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return b__delegate.call(this, args__11934__auto__);
  };
  b.cljs$lang$maxFixedArity = 0;
  b.cljs$lang$applyTo = function(arglist__23178) {
    var args__11934__auto__ = cljs.core.seq(arglist__23178);
    return b__delegate(args__11934__auto__);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = b__delegate;
  return b;
}();
quiescent.dom.base = function() {
  var base__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22119_23179 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22120_23180 = null;
    var count__22121_23181 = 0;
    var i__22122_23182 = 0;
    while (true) {
      if (i__22122_23182 < count__22121_23181) {
        var arg__11936__auto___23183 = cljs.core._nth.call(null, chunk__22120_23180, i__22122_23182);
        a__11935__auto__.push(arg__11936__auto___23183);
        var G__23184 = seq__22119_23179;
        var G__23185 = chunk__22120_23180;
        var G__23186 = count__22121_23181;
        var G__23187 = i__22122_23182 + 1;
        seq__22119_23179 = G__23184;
        chunk__22120_23180 = G__23185;
        count__22121_23181 = G__23186;
        i__22122_23182 = G__23187;
        continue;
      } else {
        var temp__4092__auto___23188 = cljs.core.seq.call(null, seq__22119_23179);
        if (temp__4092__auto___23188) {
          var seq__22119_23189__$1 = temp__4092__auto___23188;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22119_23189__$1)) {
            var c__11077__auto___23190 = cljs.core.chunk_first.call(null, seq__22119_23189__$1);
            var G__23191 = cljs.core.chunk_rest.call(null, seq__22119_23189__$1);
            var G__23192 = c__11077__auto___23190;
            var G__23193 = cljs.core.count.call(null, c__11077__auto___23190);
            var G__23194 = 0;
            seq__22119_23179 = G__23191;
            chunk__22120_23180 = G__23192;
            count__22121_23181 = G__23193;
            i__22122_23182 = G__23194;
            continue;
          } else {
            var arg__11936__auto___23195 = cljs.core.first.call(null, seq__22119_23189__$1);
            a__11935__auto__.push(arg__11936__auto___23195);
            var G__23196 = cljs.core.next.call(null, seq__22119_23189__$1);
            var G__23197 = null;
            var G__23198 = 0;
            var G__23199 = 0;
            seq__22119_23179 = G__23196;
            chunk__22120_23180 = G__23197;
            count__22121_23181 = G__23198;
            i__22122_23182 = G__23199;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.base.apply(null, a__11935__auto__);
  };
  var base = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return base__delegate.call(this, args__11934__auto__);
  };
  base.cljs$lang$maxFixedArity = 0;
  base.cljs$lang$applyTo = function(arglist__23200) {
    var args__11934__auto__ = cljs.core.seq(arglist__23200);
    return base__delegate(args__11934__auto__);
  };
  base.cljs$core$IFn$_invoke$arity$variadic = base__delegate;
  return base;
}();
quiescent.dom.bdi = function() {
  var bdi__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22127_23201 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22128_23202 = null;
    var count__22129_23203 = 0;
    var i__22130_23204 = 0;
    while (true) {
      if (i__22130_23204 < count__22129_23203) {
        var arg__11936__auto___23205 = cljs.core._nth.call(null, chunk__22128_23202, i__22130_23204);
        a__11935__auto__.push(arg__11936__auto___23205);
        var G__23206 = seq__22127_23201;
        var G__23207 = chunk__22128_23202;
        var G__23208 = count__22129_23203;
        var G__23209 = i__22130_23204 + 1;
        seq__22127_23201 = G__23206;
        chunk__22128_23202 = G__23207;
        count__22129_23203 = G__23208;
        i__22130_23204 = G__23209;
        continue;
      } else {
        var temp__4092__auto___23210 = cljs.core.seq.call(null, seq__22127_23201);
        if (temp__4092__auto___23210) {
          var seq__22127_23211__$1 = temp__4092__auto___23210;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22127_23211__$1)) {
            var c__11077__auto___23212 = cljs.core.chunk_first.call(null, seq__22127_23211__$1);
            var G__23213 = cljs.core.chunk_rest.call(null, seq__22127_23211__$1);
            var G__23214 = c__11077__auto___23212;
            var G__23215 = cljs.core.count.call(null, c__11077__auto___23212);
            var G__23216 = 0;
            seq__22127_23201 = G__23213;
            chunk__22128_23202 = G__23214;
            count__22129_23203 = G__23215;
            i__22130_23204 = G__23216;
            continue;
          } else {
            var arg__11936__auto___23217 = cljs.core.first.call(null, seq__22127_23211__$1);
            a__11935__auto__.push(arg__11936__auto___23217);
            var G__23218 = cljs.core.next.call(null, seq__22127_23211__$1);
            var G__23219 = null;
            var G__23220 = 0;
            var G__23221 = 0;
            seq__22127_23201 = G__23218;
            chunk__22128_23202 = G__23219;
            count__22129_23203 = G__23220;
            i__22130_23204 = G__23221;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.bdi.apply(null, a__11935__auto__);
  };
  var bdi = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return bdi__delegate.call(this, args__11934__auto__);
  };
  bdi.cljs$lang$maxFixedArity = 0;
  bdi.cljs$lang$applyTo = function(arglist__23222) {
    var args__11934__auto__ = cljs.core.seq(arglist__23222);
    return bdi__delegate(args__11934__auto__);
  };
  bdi.cljs$core$IFn$_invoke$arity$variadic = bdi__delegate;
  return bdi;
}();
quiescent.dom.bdo = function() {
  var bdo__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22135_23223 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22136_23224 = null;
    var count__22137_23225 = 0;
    var i__22138_23226 = 0;
    while (true) {
      if (i__22138_23226 < count__22137_23225) {
        var arg__11936__auto___23227 = cljs.core._nth.call(null, chunk__22136_23224, i__22138_23226);
        a__11935__auto__.push(arg__11936__auto___23227);
        var G__23228 = seq__22135_23223;
        var G__23229 = chunk__22136_23224;
        var G__23230 = count__22137_23225;
        var G__23231 = i__22138_23226 + 1;
        seq__22135_23223 = G__23228;
        chunk__22136_23224 = G__23229;
        count__22137_23225 = G__23230;
        i__22138_23226 = G__23231;
        continue;
      } else {
        var temp__4092__auto___23232 = cljs.core.seq.call(null, seq__22135_23223);
        if (temp__4092__auto___23232) {
          var seq__22135_23233__$1 = temp__4092__auto___23232;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22135_23233__$1)) {
            var c__11077__auto___23234 = cljs.core.chunk_first.call(null, seq__22135_23233__$1);
            var G__23235 = cljs.core.chunk_rest.call(null, seq__22135_23233__$1);
            var G__23236 = c__11077__auto___23234;
            var G__23237 = cljs.core.count.call(null, c__11077__auto___23234);
            var G__23238 = 0;
            seq__22135_23223 = G__23235;
            chunk__22136_23224 = G__23236;
            count__22137_23225 = G__23237;
            i__22138_23226 = G__23238;
            continue;
          } else {
            var arg__11936__auto___23239 = cljs.core.first.call(null, seq__22135_23233__$1);
            a__11935__auto__.push(arg__11936__auto___23239);
            var G__23240 = cljs.core.next.call(null, seq__22135_23233__$1);
            var G__23241 = null;
            var G__23242 = 0;
            var G__23243 = 0;
            seq__22135_23223 = G__23240;
            chunk__22136_23224 = G__23241;
            count__22137_23225 = G__23242;
            i__22138_23226 = G__23243;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.bdo.apply(null, a__11935__auto__);
  };
  var bdo = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return bdo__delegate.call(this, args__11934__auto__);
  };
  bdo.cljs$lang$maxFixedArity = 0;
  bdo.cljs$lang$applyTo = function(arglist__23244) {
    var args__11934__auto__ = cljs.core.seq(arglist__23244);
    return bdo__delegate(args__11934__auto__);
  };
  bdo.cljs$core$IFn$_invoke$arity$variadic = bdo__delegate;
  return bdo;
}();
quiescent.dom.big = function() {
  var big__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22143_23245 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22144_23246 = null;
    var count__22145_23247 = 0;
    var i__22146_23248 = 0;
    while (true) {
      if (i__22146_23248 < count__22145_23247) {
        var arg__11936__auto___23249 = cljs.core._nth.call(null, chunk__22144_23246, i__22146_23248);
        a__11935__auto__.push(arg__11936__auto___23249);
        var G__23250 = seq__22143_23245;
        var G__23251 = chunk__22144_23246;
        var G__23252 = count__22145_23247;
        var G__23253 = i__22146_23248 + 1;
        seq__22143_23245 = G__23250;
        chunk__22144_23246 = G__23251;
        count__22145_23247 = G__23252;
        i__22146_23248 = G__23253;
        continue;
      } else {
        var temp__4092__auto___23254 = cljs.core.seq.call(null, seq__22143_23245);
        if (temp__4092__auto___23254) {
          var seq__22143_23255__$1 = temp__4092__auto___23254;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22143_23255__$1)) {
            var c__11077__auto___23256 = cljs.core.chunk_first.call(null, seq__22143_23255__$1);
            var G__23257 = cljs.core.chunk_rest.call(null, seq__22143_23255__$1);
            var G__23258 = c__11077__auto___23256;
            var G__23259 = cljs.core.count.call(null, c__11077__auto___23256);
            var G__23260 = 0;
            seq__22143_23245 = G__23257;
            chunk__22144_23246 = G__23258;
            count__22145_23247 = G__23259;
            i__22146_23248 = G__23260;
            continue;
          } else {
            var arg__11936__auto___23261 = cljs.core.first.call(null, seq__22143_23255__$1);
            a__11935__auto__.push(arg__11936__auto___23261);
            var G__23262 = cljs.core.next.call(null, seq__22143_23255__$1);
            var G__23263 = null;
            var G__23264 = 0;
            var G__23265 = 0;
            seq__22143_23245 = G__23262;
            chunk__22144_23246 = G__23263;
            count__22145_23247 = G__23264;
            i__22146_23248 = G__23265;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.big.apply(null, a__11935__auto__);
  };
  var big = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return big__delegate.call(this, args__11934__auto__);
  };
  big.cljs$lang$maxFixedArity = 0;
  big.cljs$lang$applyTo = function(arglist__23266) {
    var args__11934__auto__ = cljs.core.seq(arglist__23266);
    return big__delegate(args__11934__auto__);
  };
  big.cljs$core$IFn$_invoke$arity$variadic = big__delegate;
  return big;
}();
quiescent.dom.blockquote = function() {
  var blockquote__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22151_23267 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22152_23268 = null;
    var count__22153_23269 = 0;
    var i__22154_23270 = 0;
    while (true) {
      if (i__22154_23270 < count__22153_23269) {
        var arg__11936__auto___23271 = cljs.core._nth.call(null, chunk__22152_23268, i__22154_23270);
        a__11935__auto__.push(arg__11936__auto___23271);
        var G__23272 = seq__22151_23267;
        var G__23273 = chunk__22152_23268;
        var G__23274 = count__22153_23269;
        var G__23275 = i__22154_23270 + 1;
        seq__22151_23267 = G__23272;
        chunk__22152_23268 = G__23273;
        count__22153_23269 = G__23274;
        i__22154_23270 = G__23275;
        continue;
      } else {
        var temp__4092__auto___23276 = cljs.core.seq.call(null, seq__22151_23267);
        if (temp__4092__auto___23276) {
          var seq__22151_23277__$1 = temp__4092__auto___23276;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22151_23277__$1)) {
            var c__11077__auto___23278 = cljs.core.chunk_first.call(null, seq__22151_23277__$1);
            var G__23279 = cljs.core.chunk_rest.call(null, seq__22151_23277__$1);
            var G__23280 = c__11077__auto___23278;
            var G__23281 = cljs.core.count.call(null, c__11077__auto___23278);
            var G__23282 = 0;
            seq__22151_23267 = G__23279;
            chunk__22152_23268 = G__23280;
            count__22153_23269 = G__23281;
            i__22154_23270 = G__23282;
            continue;
          } else {
            var arg__11936__auto___23283 = cljs.core.first.call(null, seq__22151_23277__$1);
            a__11935__auto__.push(arg__11936__auto___23283);
            var G__23284 = cljs.core.next.call(null, seq__22151_23277__$1);
            var G__23285 = null;
            var G__23286 = 0;
            var G__23287 = 0;
            seq__22151_23267 = G__23284;
            chunk__22152_23268 = G__23285;
            count__22153_23269 = G__23286;
            i__22154_23270 = G__23287;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.blockquote.apply(null, a__11935__auto__);
  };
  var blockquote = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return blockquote__delegate.call(this, args__11934__auto__);
  };
  blockquote.cljs$lang$maxFixedArity = 0;
  blockquote.cljs$lang$applyTo = function(arglist__23288) {
    var args__11934__auto__ = cljs.core.seq(arglist__23288);
    return blockquote__delegate(args__11934__auto__);
  };
  blockquote.cljs$core$IFn$_invoke$arity$variadic = blockquote__delegate;
  return blockquote;
}();
quiescent.dom.body = function() {
  var body__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22159_23289 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22160_23290 = null;
    var count__22161_23291 = 0;
    var i__22162_23292 = 0;
    while (true) {
      if (i__22162_23292 < count__22161_23291) {
        var arg__11936__auto___23293 = cljs.core._nth.call(null, chunk__22160_23290, i__22162_23292);
        a__11935__auto__.push(arg__11936__auto___23293);
        var G__23294 = seq__22159_23289;
        var G__23295 = chunk__22160_23290;
        var G__23296 = count__22161_23291;
        var G__23297 = i__22162_23292 + 1;
        seq__22159_23289 = G__23294;
        chunk__22160_23290 = G__23295;
        count__22161_23291 = G__23296;
        i__22162_23292 = G__23297;
        continue;
      } else {
        var temp__4092__auto___23298 = cljs.core.seq.call(null, seq__22159_23289);
        if (temp__4092__auto___23298) {
          var seq__22159_23299__$1 = temp__4092__auto___23298;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22159_23299__$1)) {
            var c__11077__auto___23300 = cljs.core.chunk_first.call(null, seq__22159_23299__$1);
            var G__23301 = cljs.core.chunk_rest.call(null, seq__22159_23299__$1);
            var G__23302 = c__11077__auto___23300;
            var G__23303 = cljs.core.count.call(null, c__11077__auto___23300);
            var G__23304 = 0;
            seq__22159_23289 = G__23301;
            chunk__22160_23290 = G__23302;
            count__22161_23291 = G__23303;
            i__22162_23292 = G__23304;
            continue;
          } else {
            var arg__11936__auto___23305 = cljs.core.first.call(null, seq__22159_23299__$1);
            a__11935__auto__.push(arg__11936__auto___23305);
            var G__23306 = cljs.core.next.call(null, seq__22159_23299__$1);
            var G__23307 = null;
            var G__23308 = 0;
            var G__23309 = 0;
            seq__22159_23289 = G__23306;
            chunk__22160_23290 = G__23307;
            count__22161_23291 = G__23308;
            i__22162_23292 = G__23309;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.body.apply(null, a__11935__auto__);
  };
  var body = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return body__delegate.call(this, args__11934__auto__);
  };
  body.cljs$lang$maxFixedArity = 0;
  body.cljs$lang$applyTo = function(arglist__23310) {
    var args__11934__auto__ = cljs.core.seq(arglist__23310);
    return body__delegate(args__11934__auto__);
  };
  body.cljs$core$IFn$_invoke$arity$variadic = body__delegate;
  return body;
}();
quiescent.dom.br = function() {
  var br__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22167_23311 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22168_23312 = null;
    var count__22169_23313 = 0;
    var i__22170_23314 = 0;
    while (true) {
      if (i__22170_23314 < count__22169_23313) {
        var arg__11936__auto___23315 = cljs.core._nth.call(null, chunk__22168_23312, i__22170_23314);
        a__11935__auto__.push(arg__11936__auto___23315);
        var G__23316 = seq__22167_23311;
        var G__23317 = chunk__22168_23312;
        var G__23318 = count__22169_23313;
        var G__23319 = i__22170_23314 + 1;
        seq__22167_23311 = G__23316;
        chunk__22168_23312 = G__23317;
        count__22169_23313 = G__23318;
        i__22170_23314 = G__23319;
        continue;
      } else {
        var temp__4092__auto___23320 = cljs.core.seq.call(null, seq__22167_23311);
        if (temp__4092__auto___23320) {
          var seq__22167_23321__$1 = temp__4092__auto___23320;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22167_23321__$1)) {
            var c__11077__auto___23322 = cljs.core.chunk_first.call(null, seq__22167_23321__$1);
            var G__23323 = cljs.core.chunk_rest.call(null, seq__22167_23321__$1);
            var G__23324 = c__11077__auto___23322;
            var G__23325 = cljs.core.count.call(null, c__11077__auto___23322);
            var G__23326 = 0;
            seq__22167_23311 = G__23323;
            chunk__22168_23312 = G__23324;
            count__22169_23313 = G__23325;
            i__22170_23314 = G__23326;
            continue;
          } else {
            var arg__11936__auto___23327 = cljs.core.first.call(null, seq__22167_23321__$1);
            a__11935__auto__.push(arg__11936__auto___23327);
            var G__23328 = cljs.core.next.call(null, seq__22167_23321__$1);
            var G__23329 = null;
            var G__23330 = 0;
            var G__23331 = 0;
            seq__22167_23311 = G__23328;
            chunk__22168_23312 = G__23329;
            count__22169_23313 = G__23330;
            i__22170_23314 = G__23331;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.br.apply(null, a__11935__auto__);
  };
  var br = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return br__delegate.call(this, args__11934__auto__);
  };
  br.cljs$lang$maxFixedArity = 0;
  br.cljs$lang$applyTo = function(arglist__23332) {
    var args__11934__auto__ = cljs.core.seq(arglist__23332);
    return br__delegate(args__11934__auto__);
  };
  br.cljs$core$IFn$_invoke$arity$variadic = br__delegate;
  return br;
}();
quiescent.dom.button = function() {
  var button__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22175_23333 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22176_23334 = null;
    var count__22177_23335 = 0;
    var i__22178_23336 = 0;
    while (true) {
      if (i__22178_23336 < count__22177_23335) {
        var arg__11936__auto___23337 = cljs.core._nth.call(null, chunk__22176_23334, i__22178_23336);
        a__11935__auto__.push(arg__11936__auto___23337);
        var G__23338 = seq__22175_23333;
        var G__23339 = chunk__22176_23334;
        var G__23340 = count__22177_23335;
        var G__23341 = i__22178_23336 + 1;
        seq__22175_23333 = G__23338;
        chunk__22176_23334 = G__23339;
        count__22177_23335 = G__23340;
        i__22178_23336 = G__23341;
        continue;
      } else {
        var temp__4092__auto___23342 = cljs.core.seq.call(null, seq__22175_23333);
        if (temp__4092__auto___23342) {
          var seq__22175_23343__$1 = temp__4092__auto___23342;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22175_23343__$1)) {
            var c__11077__auto___23344 = cljs.core.chunk_first.call(null, seq__22175_23343__$1);
            var G__23345 = cljs.core.chunk_rest.call(null, seq__22175_23343__$1);
            var G__23346 = c__11077__auto___23344;
            var G__23347 = cljs.core.count.call(null, c__11077__auto___23344);
            var G__23348 = 0;
            seq__22175_23333 = G__23345;
            chunk__22176_23334 = G__23346;
            count__22177_23335 = G__23347;
            i__22178_23336 = G__23348;
            continue;
          } else {
            var arg__11936__auto___23349 = cljs.core.first.call(null, seq__22175_23343__$1);
            a__11935__auto__.push(arg__11936__auto___23349);
            var G__23350 = cljs.core.next.call(null, seq__22175_23343__$1);
            var G__23351 = null;
            var G__23352 = 0;
            var G__23353 = 0;
            seq__22175_23333 = G__23350;
            chunk__22176_23334 = G__23351;
            count__22177_23335 = G__23352;
            i__22178_23336 = G__23353;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.button.apply(null, a__11935__auto__);
  };
  var button = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return button__delegate.call(this, args__11934__auto__);
  };
  button.cljs$lang$maxFixedArity = 0;
  button.cljs$lang$applyTo = function(arglist__23354) {
    var args__11934__auto__ = cljs.core.seq(arglist__23354);
    return button__delegate(args__11934__auto__);
  };
  button.cljs$core$IFn$_invoke$arity$variadic = button__delegate;
  return button;
}();
quiescent.dom.canvas = function() {
  var canvas__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22183_23355 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22184_23356 = null;
    var count__22185_23357 = 0;
    var i__22186_23358 = 0;
    while (true) {
      if (i__22186_23358 < count__22185_23357) {
        var arg__11936__auto___23359 = cljs.core._nth.call(null, chunk__22184_23356, i__22186_23358);
        a__11935__auto__.push(arg__11936__auto___23359);
        var G__23360 = seq__22183_23355;
        var G__23361 = chunk__22184_23356;
        var G__23362 = count__22185_23357;
        var G__23363 = i__22186_23358 + 1;
        seq__22183_23355 = G__23360;
        chunk__22184_23356 = G__23361;
        count__22185_23357 = G__23362;
        i__22186_23358 = G__23363;
        continue;
      } else {
        var temp__4092__auto___23364 = cljs.core.seq.call(null, seq__22183_23355);
        if (temp__4092__auto___23364) {
          var seq__22183_23365__$1 = temp__4092__auto___23364;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22183_23365__$1)) {
            var c__11077__auto___23366 = cljs.core.chunk_first.call(null, seq__22183_23365__$1);
            var G__23367 = cljs.core.chunk_rest.call(null, seq__22183_23365__$1);
            var G__23368 = c__11077__auto___23366;
            var G__23369 = cljs.core.count.call(null, c__11077__auto___23366);
            var G__23370 = 0;
            seq__22183_23355 = G__23367;
            chunk__22184_23356 = G__23368;
            count__22185_23357 = G__23369;
            i__22186_23358 = G__23370;
            continue;
          } else {
            var arg__11936__auto___23371 = cljs.core.first.call(null, seq__22183_23365__$1);
            a__11935__auto__.push(arg__11936__auto___23371);
            var G__23372 = cljs.core.next.call(null, seq__22183_23365__$1);
            var G__23373 = null;
            var G__23374 = 0;
            var G__23375 = 0;
            seq__22183_23355 = G__23372;
            chunk__22184_23356 = G__23373;
            count__22185_23357 = G__23374;
            i__22186_23358 = G__23375;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.canvas.apply(null, a__11935__auto__);
  };
  var canvas = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return canvas__delegate.call(this, args__11934__auto__);
  };
  canvas.cljs$lang$maxFixedArity = 0;
  canvas.cljs$lang$applyTo = function(arglist__23376) {
    var args__11934__auto__ = cljs.core.seq(arglist__23376);
    return canvas__delegate(args__11934__auto__);
  };
  canvas.cljs$core$IFn$_invoke$arity$variadic = canvas__delegate;
  return canvas;
}();
quiescent.dom.caption = function() {
  var caption__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22191_23377 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22192_23378 = null;
    var count__22193_23379 = 0;
    var i__22194_23380 = 0;
    while (true) {
      if (i__22194_23380 < count__22193_23379) {
        var arg__11936__auto___23381 = cljs.core._nth.call(null, chunk__22192_23378, i__22194_23380);
        a__11935__auto__.push(arg__11936__auto___23381);
        var G__23382 = seq__22191_23377;
        var G__23383 = chunk__22192_23378;
        var G__23384 = count__22193_23379;
        var G__23385 = i__22194_23380 + 1;
        seq__22191_23377 = G__23382;
        chunk__22192_23378 = G__23383;
        count__22193_23379 = G__23384;
        i__22194_23380 = G__23385;
        continue;
      } else {
        var temp__4092__auto___23386 = cljs.core.seq.call(null, seq__22191_23377);
        if (temp__4092__auto___23386) {
          var seq__22191_23387__$1 = temp__4092__auto___23386;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22191_23387__$1)) {
            var c__11077__auto___23388 = cljs.core.chunk_first.call(null, seq__22191_23387__$1);
            var G__23389 = cljs.core.chunk_rest.call(null, seq__22191_23387__$1);
            var G__23390 = c__11077__auto___23388;
            var G__23391 = cljs.core.count.call(null, c__11077__auto___23388);
            var G__23392 = 0;
            seq__22191_23377 = G__23389;
            chunk__22192_23378 = G__23390;
            count__22193_23379 = G__23391;
            i__22194_23380 = G__23392;
            continue;
          } else {
            var arg__11936__auto___23393 = cljs.core.first.call(null, seq__22191_23387__$1);
            a__11935__auto__.push(arg__11936__auto___23393);
            var G__23394 = cljs.core.next.call(null, seq__22191_23387__$1);
            var G__23395 = null;
            var G__23396 = 0;
            var G__23397 = 0;
            seq__22191_23377 = G__23394;
            chunk__22192_23378 = G__23395;
            count__22193_23379 = G__23396;
            i__22194_23380 = G__23397;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.caption.apply(null, a__11935__auto__);
  };
  var caption = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return caption__delegate.call(this, args__11934__auto__);
  };
  caption.cljs$lang$maxFixedArity = 0;
  caption.cljs$lang$applyTo = function(arglist__23398) {
    var args__11934__auto__ = cljs.core.seq(arglist__23398);
    return caption__delegate(args__11934__auto__);
  };
  caption.cljs$core$IFn$_invoke$arity$variadic = caption__delegate;
  return caption;
}();
quiescent.dom.cite = function() {
  var cite__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22199_23399 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22200_23400 = null;
    var count__22201_23401 = 0;
    var i__22202_23402 = 0;
    while (true) {
      if (i__22202_23402 < count__22201_23401) {
        var arg__11936__auto___23403 = cljs.core._nth.call(null, chunk__22200_23400, i__22202_23402);
        a__11935__auto__.push(arg__11936__auto___23403);
        var G__23404 = seq__22199_23399;
        var G__23405 = chunk__22200_23400;
        var G__23406 = count__22201_23401;
        var G__23407 = i__22202_23402 + 1;
        seq__22199_23399 = G__23404;
        chunk__22200_23400 = G__23405;
        count__22201_23401 = G__23406;
        i__22202_23402 = G__23407;
        continue;
      } else {
        var temp__4092__auto___23408 = cljs.core.seq.call(null, seq__22199_23399);
        if (temp__4092__auto___23408) {
          var seq__22199_23409__$1 = temp__4092__auto___23408;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22199_23409__$1)) {
            var c__11077__auto___23410 = cljs.core.chunk_first.call(null, seq__22199_23409__$1);
            var G__23411 = cljs.core.chunk_rest.call(null, seq__22199_23409__$1);
            var G__23412 = c__11077__auto___23410;
            var G__23413 = cljs.core.count.call(null, c__11077__auto___23410);
            var G__23414 = 0;
            seq__22199_23399 = G__23411;
            chunk__22200_23400 = G__23412;
            count__22201_23401 = G__23413;
            i__22202_23402 = G__23414;
            continue;
          } else {
            var arg__11936__auto___23415 = cljs.core.first.call(null, seq__22199_23409__$1);
            a__11935__auto__.push(arg__11936__auto___23415);
            var G__23416 = cljs.core.next.call(null, seq__22199_23409__$1);
            var G__23417 = null;
            var G__23418 = 0;
            var G__23419 = 0;
            seq__22199_23399 = G__23416;
            chunk__22200_23400 = G__23417;
            count__22201_23401 = G__23418;
            i__22202_23402 = G__23419;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.cite.apply(null, a__11935__auto__);
  };
  var cite = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return cite__delegate.call(this, args__11934__auto__);
  };
  cite.cljs$lang$maxFixedArity = 0;
  cite.cljs$lang$applyTo = function(arglist__23420) {
    var args__11934__auto__ = cljs.core.seq(arglist__23420);
    return cite__delegate(args__11934__auto__);
  };
  cite.cljs$core$IFn$_invoke$arity$variadic = cite__delegate;
  return cite;
}();
quiescent.dom.code = function() {
  var code__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22207_23421 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22208_23422 = null;
    var count__22209_23423 = 0;
    var i__22210_23424 = 0;
    while (true) {
      if (i__22210_23424 < count__22209_23423) {
        var arg__11936__auto___23425 = cljs.core._nth.call(null, chunk__22208_23422, i__22210_23424);
        a__11935__auto__.push(arg__11936__auto___23425);
        var G__23426 = seq__22207_23421;
        var G__23427 = chunk__22208_23422;
        var G__23428 = count__22209_23423;
        var G__23429 = i__22210_23424 + 1;
        seq__22207_23421 = G__23426;
        chunk__22208_23422 = G__23427;
        count__22209_23423 = G__23428;
        i__22210_23424 = G__23429;
        continue;
      } else {
        var temp__4092__auto___23430 = cljs.core.seq.call(null, seq__22207_23421);
        if (temp__4092__auto___23430) {
          var seq__22207_23431__$1 = temp__4092__auto___23430;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22207_23431__$1)) {
            var c__11077__auto___23432 = cljs.core.chunk_first.call(null, seq__22207_23431__$1);
            var G__23433 = cljs.core.chunk_rest.call(null, seq__22207_23431__$1);
            var G__23434 = c__11077__auto___23432;
            var G__23435 = cljs.core.count.call(null, c__11077__auto___23432);
            var G__23436 = 0;
            seq__22207_23421 = G__23433;
            chunk__22208_23422 = G__23434;
            count__22209_23423 = G__23435;
            i__22210_23424 = G__23436;
            continue;
          } else {
            var arg__11936__auto___23437 = cljs.core.first.call(null, seq__22207_23431__$1);
            a__11935__auto__.push(arg__11936__auto___23437);
            var G__23438 = cljs.core.next.call(null, seq__22207_23431__$1);
            var G__23439 = null;
            var G__23440 = 0;
            var G__23441 = 0;
            seq__22207_23421 = G__23438;
            chunk__22208_23422 = G__23439;
            count__22209_23423 = G__23440;
            i__22210_23424 = G__23441;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.code.apply(null, a__11935__auto__);
  };
  var code = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return code__delegate.call(this, args__11934__auto__);
  };
  code.cljs$lang$maxFixedArity = 0;
  code.cljs$lang$applyTo = function(arglist__23442) {
    var args__11934__auto__ = cljs.core.seq(arglist__23442);
    return code__delegate(args__11934__auto__);
  };
  code.cljs$core$IFn$_invoke$arity$variadic = code__delegate;
  return code;
}();
quiescent.dom.col = function() {
  var col__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22215_23443 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22216_23444 = null;
    var count__22217_23445 = 0;
    var i__22218_23446 = 0;
    while (true) {
      if (i__22218_23446 < count__22217_23445) {
        var arg__11936__auto___23447 = cljs.core._nth.call(null, chunk__22216_23444, i__22218_23446);
        a__11935__auto__.push(arg__11936__auto___23447);
        var G__23448 = seq__22215_23443;
        var G__23449 = chunk__22216_23444;
        var G__23450 = count__22217_23445;
        var G__23451 = i__22218_23446 + 1;
        seq__22215_23443 = G__23448;
        chunk__22216_23444 = G__23449;
        count__22217_23445 = G__23450;
        i__22218_23446 = G__23451;
        continue;
      } else {
        var temp__4092__auto___23452 = cljs.core.seq.call(null, seq__22215_23443);
        if (temp__4092__auto___23452) {
          var seq__22215_23453__$1 = temp__4092__auto___23452;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22215_23453__$1)) {
            var c__11077__auto___23454 = cljs.core.chunk_first.call(null, seq__22215_23453__$1);
            var G__23455 = cljs.core.chunk_rest.call(null, seq__22215_23453__$1);
            var G__23456 = c__11077__auto___23454;
            var G__23457 = cljs.core.count.call(null, c__11077__auto___23454);
            var G__23458 = 0;
            seq__22215_23443 = G__23455;
            chunk__22216_23444 = G__23456;
            count__22217_23445 = G__23457;
            i__22218_23446 = G__23458;
            continue;
          } else {
            var arg__11936__auto___23459 = cljs.core.first.call(null, seq__22215_23453__$1);
            a__11935__auto__.push(arg__11936__auto___23459);
            var G__23460 = cljs.core.next.call(null, seq__22215_23453__$1);
            var G__23461 = null;
            var G__23462 = 0;
            var G__23463 = 0;
            seq__22215_23443 = G__23460;
            chunk__22216_23444 = G__23461;
            count__22217_23445 = G__23462;
            i__22218_23446 = G__23463;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.col.apply(null, a__11935__auto__);
  };
  var col = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return col__delegate.call(this, args__11934__auto__);
  };
  col.cljs$lang$maxFixedArity = 0;
  col.cljs$lang$applyTo = function(arglist__23464) {
    var args__11934__auto__ = cljs.core.seq(arglist__23464);
    return col__delegate(args__11934__auto__);
  };
  col.cljs$core$IFn$_invoke$arity$variadic = col__delegate;
  return col;
}();
quiescent.dom.colgroup = function() {
  var colgroup__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22223_23465 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22224_23466 = null;
    var count__22225_23467 = 0;
    var i__22226_23468 = 0;
    while (true) {
      if (i__22226_23468 < count__22225_23467) {
        var arg__11936__auto___23469 = cljs.core._nth.call(null, chunk__22224_23466, i__22226_23468);
        a__11935__auto__.push(arg__11936__auto___23469);
        var G__23470 = seq__22223_23465;
        var G__23471 = chunk__22224_23466;
        var G__23472 = count__22225_23467;
        var G__23473 = i__22226_23468 + 1;
        seq__22223_23465 = G__23470;
        chunk__22224_23466 = G__23471;
        count__22225_23467 = G__23472;
        i__22226_23468 = G__23473;
        continue;
      } else {
        var temp__4092__auto___23474 = cljs.core.seq.call(null, seq__22223_23465);
        if (temp__4092__auto___23474) {
          var seq__22223_23475__$1 = temp__4092__auto___23474;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22223_23475__$1)) {
            var c__11077__auto___23476 = cljs.core.chunk_first.call(null, seq__22223_23475__$1);
            var G__23477 = cljs.core.chunk_rest.call(null, seq__22223_23475__$1);
            var G__23478 = c__11077__auto___23476;
            var G__23479 = cljs.core.count.call(null, c__11077__auto___23476);
            var G__23480 = 0;
            seq__22223_23465 = G__23477;
            chunk__22224_23466 = G__23478;
            count__22225_23467 = G__23479;
            i__22226_23468 = G__23480;
            continue;
          } else {
            var arg__11936__auto___23481 = cljs.core.first.call(null, seq__22223_23475__$1);
            a__11935__auto__.push(arg__11936__auto___23481);
            var G__23482 = cljs.core.next.call(null, seq__22223_23475__$1);
            var G__23483 = null;
            var G__23484 = 0;
            var G__23485 = 0;
            seq__22223_23465 = G__23482;
            chunk__22224_23466 = G__23483;
            count__22225_23467 = G__23484;
            i__22226_23468 = G__23485;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.colgroup.apply(null, a__11935__auto__);
  };
  var colgroup = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return colgroup__delegate.call(this, args__11934__auto__);
  };
  colgroup.cljs$lang$maxFixedArity = 0;
  colgroup.cljs$lang$applyTo = function(arglist__23486) {
    var args__11934__auto__ = cljs.core.seq(arglist__23486);
    return colgroup__delegate(args__11934__auto__);
  };
  colgroup.cljs$core$IFn$_invoke$arity$variadic = colgroup__delegate;
  return colgroup;
}();
quiescent.dom.data = function() {
  var data__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22231_23487 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22232_23488 = null;
    var count__22233_23489 = 0;
    var i__22234_23490 = 0;
    while (true) {
      if (i__22234_23490 < count__22233_23489) {
        var arg__11936__auto___23491 = cljs.core._nth.call(null, chunk__22232_23488, i__22234_23490);
        a__11935__auto__.push(arg__11936__auto___23491);
        var G__23492 = seq__22231_23487;
        var G__23493 = chunk__22232_23488;
        var G__23494 = count__22233_23489;
        var G__23495 = i__22234_23490 + 1;
        seq__22231_23487 = G__23492;
        chunk__22232_23488 = G__23493;
        count__22233_23489 = G__23494;
        i__22234_23490 = G__23495;
        continue;
      } else {
        var temp__4092__auto___23496 = cljs.core.seq.call(null, seq__22231_23487);
        if (temp__4092__auto___23496) {
          var seq__22231_23497__$1 = temp__4092__auto___23496;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22231_23497__$1)) {
            var c__11077__auto___23498 = cljs.core.chunk_first.call(null, seq__22231_23497__$1);
            var G__23499 = cljs.core.chunk_rest.call(null, seq__22231_23497__$1);
            var G__23500 = c__11077__auto___23498;
            var G__23501 = cljs.core.count.call(null, c__11077__auto___23498);
            var G__23502 = 0;
            seq__22231_23487 = G__23499;
            chunk__22232_23488 = G__23500;
            count__22233_23489 = G__23501;
            i__22234_23490 = G__23502;
            continue;
          } else {
            var arg__11936__auto___23503 = cljs.core.first.call(null, seq__22231_23497__$1);
            a__11935__auto__.push(arg__11936__auto___23503);
            var G__23504 = cljs.core.next.call(null, seq__22231_23497__$1);
            var G__23505 = null;
            var G__23506 = 0;
            var G__23507 = 0;
            seq__22231_23487 = G__23504;
            chunk__22232_23488 = G__23505;
            count__22233_23489 = G__23506;
            i__22234_23490 = G__23507;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.data.apply(null, a__11935__auto__);
  };
  var data = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return data__delegate.call(this, args__11934__auto__);
  };
  data.cljs$lang$maxFixedArity = 0;
  data.cljs$lang$applyTo = function(arglist__23508) {
    var args__11934__auto__ = cljs.core.seq(arglist__23508);
    return data__delegate(args__11934__auto__);
  };
  data.cljs$core$IFn$_invoke$arity$variadic = data__delegate;
  return data;
}();
quiescent.dom.datalist = function() {
  var datalist__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22239_23509 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22240_23510 = null;
    var count__22241_23511 = 0;
    var i__22242_23512 = 0;
    while (true) {
      if (i__22242_23512 < count__22241_23511) {
        var arg__11936__auto___23513 = cljs.core._nth.call(null, chunk__22240_23510, i__22242_23512);
        a__11935__auto__.push(arg__11936__auto___23513);
        var G__23514 = seq__22239_23509;
        var G__23515 = chunk__22240_23510;
        var G__23516 = count__22241_23511;
        var G__23517 = i__22242_23512 + 1;
        seq__22239_23509 = G__23514;
        chunk__22240_23510 = G__23515;
        count__22241_23511 = G__23516;
        i__22242_23512 = G__23517;
        continue;
      } else {
        var temp__4092__auto___23518 = cljs.core.seq.call(null, seq__22239_23509);
        if (temp__4092__auto___23518) {
          var seq__22239_23519__$1 = temp__4092__auto___23518;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22239_23519__$1)) {
            var c__11077__auto___23520 = cljs.core.chunk_first.call(null, seq__22239_23519__$1);
            var G__23521 = cljs.core.chunk_rest.call(null, seq__22239_23519__$1);
            var G__23522 = c__11077__auto___23520;
            var G__23523 = cljs.core.count.call(null, c__11077__auto___23520);
            var G__23524 = 0;
            seq__22239_23509 = G__23521;
            chunk__22240_23510 = G__23522;
            count__22241_23511 = G__23523;
            i__22242_23512 = G__23524;
            continue;
          } else {
            var arg__11936__auto___23525 = cljs.core.first.call(null, seq__22239_23519__$1);
            a__11935__auto__.push(arg__11936__auto___23525);
            var G__23526 = cljs.core.next.call(null, seq__22239_23519__$1);
            var G__23527 = null;
            var G__23528 = 0;
            var G__23529 = 0;
            seq__22239_23509 = G__23526;
            chunk__22240_23510 = G__23527;
            count__22241_23511 = G__23528;
            i__22242_23512 = G__23529;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.datalist.apply(null, a__11935__auto__);
  };
  var datalist = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return datalist__delegate.call(this, args__11934__auto__);
  };
  datalist.cljs$lang$maxFixedArity = 0;
  datalist.cljs$lang$applyTo = function(arglist__23530) {
    var args__11934__auto__ = cljs.core.seq(arglist__23530);
    return datalist__delegate(args__11934__auto__);
  };
  datalist.cljs$core$IFn$_invoke$arity$variadic = datalist__delegate;
  return datalist;
}();
quiescent.dom.dd = function() {
  var dd__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22247_23531 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22248_23532 = null;
    var count__22249_23533 = 0;
    var i__22250_23534 = 0;
    while (true) {
      if (i__22250_23534 < count__22249_23533) {
        var arg__11936__auto___23535 = cljs.core._nth.call(null, chunk__22248_23532, i__22250_23534);
        a__11935__auto__.push(arg__11936__auto___23535);
        var G__23536 = seq__22247_23531;
        var G__23537 = chunk__22248_23532;
        var G__23538 = count__22249_23533;
        var G__23539 = i__22250_23534 + 1;
        seq__22247_23531 = G__23536;
        chunk__22248_23532 = G__23537;
        count__22249_23533 = G__23538;
        i__22250_23534 = G__23539;
        continue;
      } else {
        var temp__4092__auto___23540 = cljs.core.seq.call(null, seq__22247_23531);
        if (temp__4092__auto___23540) {
          var seq__22247_23541__$1 = temp__4092__auto___23540;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22247_23541__$1)) {
            var c__11077__auto___23542 = cljs.core.chunk_first.call(null, seq__22247_23541__$1);
            var G__23543 = cljs.core.chunk_rest.call(null, seq__22247_23541__$1);
            var G__23544 = c__11077__auto___23542;
            var G__23545 = cljs.core.count.call(null, c__11077__auto___23542);
            var G__23546 = 0;
            seq__22247_23531 = G__23543;
            chunk__22248_23532 = G__23544;
            count__22249_23533 = G__23545;
            i__22250_23534 = G__23546;
            continue;
          } else {
            var arg__11936__auto___23547 = cljs.core.first.call(null, seq__22247_23541__$1);
            a__11935__auto__.push(arg__11936__auto___23547);
            var G__23548 = cljs.core.next.call(null, seq__22247_23541__$1);
            var G__23549 = null;
            var G__23550 = 0;
            var G__23551 = 0;
            seq__22247_23531 = G__23548;
            chunk__22248_23532 = G__23549;
            count__22249_23533 = G__23550;
            i__22250_23534 = G__23551;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.dd.apply(null, a__11935__auto__);
  };
  var dd = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return dd__delegate.call(this, args__11934__auto__);
  };
  dd.cljs$lang$maxFixedArity = 0;
  dd.cljs$lang$applyTo = function(arglist__23552) {
    var args__11934__auto__ = cljs.core.seq(arglist__23552);
    return dd__delegate(args__11934__auto__);
  };
  dd.cljs$core$IFn$_invoke$arity$variadic = dd__delegate;
  return dd;
}();
quiescent.dom.del = function() {
  var del__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22255_23553 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22256_23554 = null;
    var count__22257_23555 = 0;
    var i__22258_23556 = 0;
    while (true) {
      if (i__22258_23556 < count__22257_23555) {
        var arg__11936__auto___23557 = cljs.core._nth.call(null, chunk__22256_23554, i__22258_23556);
        a__11935__auto__.push(arg__11936__auto___23557);
        var G__23558 = seq__22255_23553;
        var G__23559 = chunk__22256_23554;
        var G__23560 = count__22257_23555;
        var G__23561 = i__22258_23556 + 1;
        seq__22255_23553 = G__23558;
        chunk__22256_23554 = G__23559;
        count__22257_23555 = G__23560;
        i__22258_23556 = G__23561;
        continue;
      } else {
        var temp__4092__auto___23562 = cljs.core.seq.call(null, seq__22255_23553);
        if (temp__4092__auto___23562) {
          var seq__22255_23563__$1 = temp__4092__auto___23562;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22255_23563__$1)) {
            var c__11077__auto___23564 = cljs.core.chunk_first.call(null, seq__22255_23563__$1);
            var G__23565 = cljs.core.chunk_rest.call(null, seq__22255_23563__$1);
            var G__23566 = c__11077__auto___23564;
            var G__23567 = cljs.core.count.call(null, c__11077__auto___23564);
            var G__23568 = 0;
            seq__22255_23553 = G__23565;
            chunk__22256_23554 = G__23566;
            count__22257_23555 = G__23567;
            i__22258_23556 = G__23568;
            continue;
          } else {
            var arg__11936__auto___23569 = cljs.core.first.call(null, seq__22255_23563__$1);
            a__11935__auto__.push(arg__11936__auto___23569);
            var G__23570 = cljs.core.next.call(null, seq__22255_23563__$1);
            var G__23571 = null;
            var G__23572 = 0;
            var G__23573 = 0;
            seq__22255_23553 = G__23570;
            chunk__22256_23554 = G__23571;
            count__22257_23555 = G__23572;
            i__22258_23556 = G__23573;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.del.apply(null, a__11935__auto__);
  };
  var del = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return del__delegate.call(this, args__11934__auto__);
  };
  del.cljs$lang$maxFixedArity = 0;
  del.cljs$lang$applyTo = function(arglist__23574) {
    var args__11934__auto__ = cljs.core.seq(arglist__23574);
    return del__delegate(args__11934__auto__);
  };
  del.cljs$core$IFn$_invoke$arity$variadic = del__delegate;
  return del;
}();
quiescent.dom.details = function() {
  var details__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22263_23575 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22264_23576 = null;
    var count__22265_23577 = 0;
    var i__22266_23578 = 0;
    while (true) {
      if (i__22266_23578 < count__22265_23577) {
        var arg__11936__auto___23579 = cljs.core._nth.call(null, chunk__22264_23576, i__22266_23578);
        a__11935__auto__.push(arg__11936__auto___23579);
        var G__23580 = seq__22263_23575;
        var G__23581 = chunk__22264_23576;
        var G__23582 = count__22265_23577;
        var G__23583 = i__22266_23578 + 1;
        seq__22263_23575 = G__23580;
        chunk__22264_23576 = G__23581;
        count__22265_23577 = G__23582;
        i__22266_23578 = G__23583;
        continue;
      } else {
        var temp__4092__auto___23584 = cljs.core.seq.call(null, seq__22263_23575);
        if (temp__4092__auto___23584) {
          var seq__22263_23585__$1 = temp__4092__auto___23584;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22263_23585__$1)) {
            var c__11077__auto___23586 = cljs.core.chunk_first.call(null, seq__22263_23585__$1);
            var G__23587 = cljs.core.chunk_rest.call(null, seq__22263_23585__$1);
            var G__23588 = c__11077__auto___23586;
            var G__23589 = cljs.core.count.call(null, c__11077__auto___23586);
            var G__23590 = 0;
            seq__22263_23575 = G__23587;
            chunk__22264_23576 = G__23588;
            count__22265_23577 = G__23589;
            i__22266_23578 = G__23590;
            continue;
          } else {
            var arg__11936__auto___23591 = cljs.core.first.call(null, seq__22263_23585__$1);
            a__11935__auto__.push(arg__11936__auto___23591);
            var G__23592 = cljs.core.next.call(null, seq__22263_23585__$1);
            var G__23593 = null;
            var G__23594 = 0;
            var G__23595 = 0;
            seq__22263_23575 = G__23592;
            chunk__22264_23576 = G__23593;
            count__22265_23577 = G__23594;
            i__22266_23578 = G__23595;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.details.apply(null, a__11935__auto__);
  };
  var details = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return details__delegate.call(this, args__11934__auto__);
  };
  details.cljs$lang$maxFixedArity = 0;
  details.cljs$lang$applyTo = function(arglist__23596) {
    var args__11934__auto__ = cljs.core.seq(arglist__23596);
    return details__delegate(args__11934__auto__);
  };
  details.cljs$core$IFn$_invoke$arity$variadic = details__delegate;
  return details;
}();
quiescent.dom.dfn = function() {
  var dfn__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22271_23597 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22272_23598 = null;
    var count__22273_23599 = 0;
    var i__22274_23600 = 0;
    while (true) {
      if (i__22274_23600 < count__22273_23599) {
        var arg__11936__auto___23601 = cljs.core._nth.call(null, chunk__22272_23598, i__22274_23600);
        a__11935__auto__.push(arg__11936__auto___23601);
        var G__23602 = seq__22271_23597;
        var G__23603 = chunk__22272_23598;
        var G__23604 = count__22273_23599;
        var G__23605 = i__22274_23600 + 1;
        seq__22271_23597 = G__23602;
        chunk__22272_23598 = G__23603;
        count__22273_23599 = G__23604;
        i__22274_23600 = G__23605;
        continue;
      } else {
        var temp__4092__auto___23606 = cljs.core.seq.call(null, seq__22271_23597);
        if (temp__4092__auto___23606) {
          var seq__22271_23607__$1 = temp__4092__auto___23606;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22271_23607__$1)) {
            var c__11077__auto___23608 = cljs.core.chunk_first.call(null, seq__22271_23607__$1);
            var G__23609 = cljs.core.chunk_rest.call(null, seq__22271_23607__$1);
            var G__23610 = c__11077__auto___23608;
            var G__23611 = cljs.core.count.call(null, c__11077__auto___23608);
            var G__23612 = 0;
            seq__22271_23597 = G__23609;
            chunk__22272_23598 = G__23610;
            count__22273_23599 = G__23611;
            i__22274_23600 = G__23612;
            continue;
          } else {
            var arg__11936__auto___23613 = cljs.core.first.call(null, seq__22271_23607__$1);
            a__11935__auto__.push(arg__11936__auto___23613);
            var G__23614 = cljs.core.next.call(null, seq__22271_23607__$1);
            var G__23615 = null;
            var G__23616 = 0;
            var G__23617 = 0;
            seq__22271_23597 = G__23614;
            chunk__22272_23598 = G__23615;
            count__22273_23599 = G__23616;
            i__22274_23600 = G__23617;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.dfn.apply(null, a__11935__auto__);
  };
  var dfn = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return dfn__delegate.call(this, args__11934__auto__);
  };
  dfn.cljs$lang$maxFixedArity = 0;
  dfn.cljs$lang$applyTo = function(arglist__23618) {
    var args__11934__auto__ = cljs.core.seq(arglist__23618);
    return dfn__delegate(args__11934__auto__);
  };
  dfn.cljs$core$IFn$_invoke$arity$variadic = dfn__delegate;
  return dfn;
}();
quiescent.dom.div = function() {
  var div__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22279_23619 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22280_23620 = null;
    var count__22281_23621 = 0;
    var i__22282_23622 = 0;
    while (true) {
      if (i__22282_23622 < count__22281_23621) {
        var arg__11936__auto___23623 = cljs.core._nth.call(null, chunk__22280_23620, i__22282_23622);
        a__11935__auto__.push(arg__11936__auto___23623);
        var G__23624 = seq__22279_23619;
        var G__23625 = chunk__22280_23620;
        var G__23626 = count__22281_23621;
        var G__23627 = i__22282_23622 + 1;
        seq__22279_23619 = G__23624;
        chunk__22280_23620 = G__23625;
        count__22281_23621 = G__23626;
        i__22282_23622 = G__23627;
        continue;
      } else {
        var temp__4092__auto___23628 = cljs.core.seq.call(null, seq__22279_23619);
        if (temp__4092__auto___23628) {
          var seq__22279_23629__$1 = temp__4092__auto___23628;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22279_23629__$1)) {
            var c__11077__auto___23630 = cljs.core.chunk_first.call(null, seq__22279_23629__$1);
            var G__23631 = cljs.core.chunk_rest.call(null, seq__22279_23629__$1);
            var G__23632 = c__11077__auto___23630;
            var G__23633 = cljs.core.count.call(null, c__11077__auto___23630);
            var G__23634 = 0;
            seq__22279_23619 = G__23631;
            chunk__22280_23620 = G__23632;
            count__22281_23621 = G__23633;
            i__22282_23622 = G__23634;
            continue;
          } else {
            var arg__11936__auto___23635 = cljs.core.first.call(null, seq__22279_23629__$1);
            a__11935__auto__.push(arg__11936__auto___23635);
            var G__23636 = cljs.core.next.call(null, seq__22279_23629__$1);
            var G__23637 = null;
            var G__23638 = 0;
            var G__23639 = 0;
            seq__22279_23619 = G__23636;
            chunk__22280_23620 = G__23637;
            count__22281_23621 = G__23638;
            i__22282_23622 = G__23639;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.div.apply(null, a__11935__auto__);
  };
  var div = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return div__delegate.call(this, args__11934__auto__);
  };
  div.cljs$lang$maxFixedArity = 0;
  div.cljs$lang$applyTo = function(arglist__23640) {
    var args__11934__auto__ = cljs.core.seq(arglist__23640);
    return div__delegate(args__11934__auto__);
  };
  div.cljs$core$IFn$_invoke$arity$variadic = div__delegate;
  return div;
}();
quiescent.dom.dl = function() {
  var dl__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22287_23641 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22288_23642 = null;
    var count__22289_23643 = 0;
    var i__22290_23644 = 0;
    while (true) {
      if (i__22290_23644 < count__22289_23643) {
        var arg__11936__auto___23645 = cljs.core._nth.call(null, chunk__22288_23642, i__22290_23644);
        a__11935__auto__.push(arg__11936__auto___23645);
        var G__23646 = seq__22287_23641;
        var G__23647 = chunk__22288_23642;
        var G__23648 = count__22289_23643;
        var G__23649 = i__22290_23644 + 1;
        seq__22287_23641 = G__23646;
        chunk__22288_23642 = G__23647;
        count__22289_23643 = G__23648;
        i__22290_23644 = G__23649;
        continue;
      } else {
        var temp__4092__auto___23650 = cljs.core.seq.call(null, seq__22287_23641);
        if (temp__4092__auto___23650) {
          var seq__22287_23651__$1 = temp__4092__auto___23650;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22287_23651__$1)) {
            var c__11077__auto___23652 = cljs.core.chunk_first.call(null, seq__22287_23651__$1);
            var G__23653 = cljs.core.chunk_rest.call(null, seq__22287_23651__$1);
            var G__23654 = c__11077__auto___23652;
            var G__23655 = cljs.core.count.call(null, c__11077__auto___23652);
            var G__23656 = 0;
            seq__22287_23641 = G__23653;
            chunk__22288_23642 = G__23654;
            count__22289_23643 = G__23655;
            i__22290_23644 = G__23656;
            continue;
          } else {
            var arg__11936__auto___23657 = cljs.core.first.call(null, seq__22287_23651__$1);
            a__11935__auto__.push(arg__11936__auto___23657);
            var G__23658 = cljs.core.next.call(null, seq__22287_23651__$1);
            var G__23659 = null;
            var G__23660 = 0;
            var G__23661 = 0;
            seq__22287_23641 = G__23658;
            chunk__22288_23642 = G__23659;
            count__22289_23643 = G__23660;
            i__22290_23644 = G__23661;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.dl.apply(null, a__11935__auto__);
  };
  var dl = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return dl__delegate.call(this, args__11934__auto__);
  };
  dl.cljs$lang$maxFixedArity = 0;
  dl.cljs$lang$applyTo = function(arglist__23662) {
    var args__11934__auto__ = cljs.core.seq(arglist__23662);
    return dl__delegate(args__11934__auto__);
  };
  dl.cljs$core$IFn$_invoke$arity$variadic = dl__delegate;
  return dl;
}();
quiescent.dom.dt = function() {
  var dt__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22295_23663 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22296_23664 = null;
    var count__22297_23665 = 0;
    var i__22298_23666 = 0;
    while (true) {
      if (i__22298_23666 < count__22297_23665) {
        var arg__11936__auto___23667 = cljs.core._nth.call(null, chunk__22296_23664, i__22298_23666);
        a__11935__auto__.push(arg__11936__auto___23667);
        var G__23668 = seq__22295_23663;
        var G__23669 = chunk__22296_23664;
        var G__23670 = count__22297_23665;
        var G__23671 = i__22298_23666 + 1;
        seq__22295_23663 = G__23668;
        chunk__22296_23664 = G__23669;
        count__22297_23665 = G__23670;
        i__22298_23666 = G__23671;
        continue;
      } else {
        var temp__4092__auto___23672 = cljs.core.seq.call(null, seq__22295_23663);
        if (temp__4092__auto___23672) {
          var seq__22295_23673__$1 = temp__4092__auto___23672;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22295_23673__$1)) {
            var c__11077__auto___23674 = cljs.core.chunk_first.call(null, seq__22295_23673__$1);
            var G__23675 = cljs.core.chunk_rest.call(null, seq__22295_23673__$1);
            var G__23676 = c__11077__auto___23674;
            var G__23677 = cljs.core.count.call(null, c__11077__auto___23674);
            var G__23678 = 0;
            seq__22295_23663 = G__23675;
            chunk__22296_23664 = G__23676;
            count__22297_23665 = G__23677;
            i__22298_23666 = G__23678;
            continue;
          } else {
            var arg__11936__auto___23679 = cljs.core.first.call(null, seq__22295_23673__$1);
            a__11935__auto__.push(arg__11936__auto___23679);
            var G__23680 = cljs.core.next.call(null, seq__22295_23673__$1);
            var G__23681 = null;
            var G__23682 = 0;
            var G__23683 = 0;
            seq__22295_23663 = G__23680;
            chunk__22296_23664 = G__23681;
            count__22297_23665 = G__23682;
            i__22298_23666 = G__23683;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.dt.apply(null, a__11935__auto__);
  };
  var dt = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return dt__delegate.call(this, args__11934__auto__);
  };
  dt.cljs$lang$maxFixedArity = 0;
  dt.cljs$lang$applyTo = function(arglist__23684) {
    var args__11934__auto__ = cljs.core.seq(arglist__23684);
    return dt__delegate(args__11934__auto__);
  };
  dt.cljs$core$IFn$_invoke$arity$variadic = dt__delegate;
  return dt;
}();
quiescent.dom.em = function() {
  var em__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22303_23685 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22304_23686 = null;
    var count__22305_23687 = 0;
    var i__22306_23688 = 0;
    while (true) {
      if (i__22306_23688 < count__22305_23687) {
        var arg__11936__auto___23689 = cljs.core._nth.call(null, chunk__22304_23686, i__22306_23688);
        a__11935__auto__.push(arg__11936__auto___23689);
        var G__23690 = seq__22303_23685;
        var G__23691 = chunk__22304_23686;
        var G__23692 = count__22305_23687;
        var G__23693 = i__22306_23688 + 1;
        seq__22303_23685 = G__23690;
        chunk__22304_23686 = G__23691;
        count__22305_23687 = G__23692;
        i__22306_23688 = G__23693;
        continue;
      } else {
        var temp__4092__auto___23694 = cljs.core.seq.call(null, seq__22303_23685);
        if (temp__4092__auto___23694) {
          var seq__22303_23695__$1 = temp__4092__auto___23694;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22303_23695__$1)) {
            var c__11077__auto___23696 = cljs.core.chunk_first.call(null, seq__22303_23695__$1);
            var G__23697 = cljs.core.chunk_rest.call(null, seq__22303_23695__$1);
            var G__23698 = c__11077__auto___23696;
            var G__23699 = cljs.core.count.call(null, c__11077__auto___23696);
            var G__23700 = 0;
            seq__22303_23685 = G__23697;
            chunk__22304_23686 = G__23698;
            count__22305_23687 = G__23699;
            i__22306_23688 = G__23700;
            continue;
          } else {
            var arg__11936__auto___23701 = cljs.core.first.call(null, seq__22303_23695__$1);
            a__11935__auto__.push(arg__11936__auto___23701);
            var G__23702 = cljs.core.next.call(null, seq__22303_23695__$1);
            var G__23703 = null;
            var G__23704 = 0;
            var G__23705 = 0;
            seq__22303_23685 = G__23702;
            chunk__22304_23686 = G__23703;
            count__22305_23687 = G__23704;
            i__22306_23688 = G__23705;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.em.apply(null, a__11935__auto__);
  };
  var em = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return em__delegate.call(this, args__11934__auto__);
  };
  em.cljs$lang$maxFixedArity = 0;
  em.cljs$lang$applyTo = function(arglist__23706) {
    var args__11934__auto__ = cljs.core.seq(arglist__23706);
    return em__delegate(args__11934__auto__);
  };
  em.cljs$core$IFn$_invoke$arity$variadic = em__delegate;
  return em;
}();
quiescent.dom.embed = function() {
  var embed__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22319_23707 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22320_23708 = null;
    var count__22321_23709 = 0;
    var i__22322_23710 = 0;
    while (true) {
      if (i__22322_23710 < count__22321_23709) {
        var arg__11936__auto___23711 = cljs.core._nth.call(null, chunk__22320_23708, i__22322_23710);
        a__11935__auto__.push(arg__11936__auto___23711);
        var G__23712 = seq__22319_23707;
        var G__23713 = chunk__22320_23708;
        var G__23714 = count__22321_23709;
        var G__23715 = i__22322_23710 + 1;
        seq__22319_23707 = G__23712;
        chunk__22320_23708 = G__23713;
        count__22321_23709 = G__23714;
        i__22322_23710 = G__23715;
        continue;
      } else {
        var temp__4092__auto___23716 = cljs.core.seq.call(null, seq__22319_23707);
        if (temp__4092__auto___23716) {
          var seq__22319_23717__$1 = temp__4092__auto___23716;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22319_23717__$1)) {
            var c__11077__auto___23718 = cljs.core.chunk_first.call(null, seq__22319_23717__$1);
            var G__23719 = cljs.core.chunk_rest.call(null, seq__22319_23717__$1);
            var G__23720 = c__11077__auto___23718;
            var G__23721 = cljs.core.count.call(null, c__11077__auto___23718);
            var G__23722 = 0;
            seq__22319_23707 = G__23719;
            chunk__22320_23708 = G__23720;
            count__22321_23709 = G__23721;
            i__22322_23710 = G__23722;
            continue;
          } else {
            var arg__11936__auto___23723 = cljs.core.first.call(null, seq__22319_23717__$1);
            a__11935__auto__.push(arg__11936__auto___23723);
            var G__23724 = cljs.core.next.call(null, seq__22319_23717__$1);
            var G__23725 = null;
            var G__23726 = 0;
            var G__23727 = 0;
            seq__22319_23707 = G__23724;
            chunk__22320_23708 = G__23725;
            count__22321_23709 = G__23726;
            i__22322_23710 = G__23727;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.embed.apply(null, a__11935__auto__);
  };
  var embed = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return embed__delegate.call(this, args__11934__auto__);
  };
  embed.cljs$lang$maxFixedArity = 0;
  embed.cljs$lang$applyTo = function(arglist__23728) {
    var args__11934__auto__ = cljs.core.seq(arglist__23728);
    return embed__delegate(args__11934__auto__);
  };
  embed.cljs$core$IFn$_invoke$arity$variadic = embed__delegate;
  return embed;
}();
quiescent.dom.fieldset = function() {
  var fieldset__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22327_23729 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22328_23730 = null;
    var count__22329_23731 = 0;
    var i__22330_23732 = 0;
    while (true) {
      if (i__22330_23732 < count__22329_23731) {
        var arg__11936__auto___23733 = cljs.core._nth.call(null, chunk__22328_23730, i__22330_23732);
        a__11935__auto__.push(arg__11936__auto___23733);
        var G__23734 = seq__22327_23729;
        var G__23735 = chunk__22328_23730;
        var G__23736 = count__22329_23731;
        var G__23737 = i__22330_23732 + 1;
        seq__22327_23729 = G__23734;
        chunk__22328_23730 = G__23735;
        count__22329_23731 = G__23736;
        i__22330_23732 = G__23737;
        continue;
      } else {
        var temp__4092__auto___23738 = cljs.core.seq.call(null, seq__22327_23729);
        if (temp__4092__auto___23738) {
          var seq__22327_23739__$1 = temp__4092__auto___23738;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22327_23739__$1)) {
            var c__11077__auto___23740 = cljs.core.chunk_first.call(null, seq__22327_23739__$1);
            var G__23741 = cljs.core.chunk_rest.call(null, seq__22327_23739__$1);
            var G__23742 = c__11077__auto___23740;
            var G__23743 = cljs.core.count.call(null, c__11077__auto___23740);
            var G__23744 = 0;
            seq__22327_23729 = G__23741;
            chunk__22328_23730 = G__23742;
            count__22329_23731 = G__23743;
            i__22330_23732 = G__23744;
            continue;
          } else {
            var arg__11936__auto___23745 = cljs.core.first.call(null, seq__22327_23739__$1);
            a__11935__auto__.push(arg__11936__auto___23745);
            var G__23746 = cljs.core.next.call(null, seq__22327_23739__$1);
            var G__23747 = null;
            var G__23748 = 0;
            var G__23749 = 0;
            seq__22327_23729 = G__23746;
            chunk__22328_23730 = G__23747;
            count__22329_23731 = G__23748;
            i__22330_23732 = G__23749;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.fieldset.apply(null, a__11935__auto__);
  };
  var fieldset = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return fieldset__delegate.call(this, args__11934__auto__);
  };
  fieldset.cljs$lang$maxFixedArity = 0;
  fieldset.cljs$lang$applyTo = function(arglist__23750) {
    var args__11934__auto__ = cljs.core.seq(arglist__23750);
    return fieldset__delegate(args__11934__auto__);
  };
  fieldset.cljs$core$IFn$_invoke$arity$variadic = fieldset__delegate;
  return fieldset;
}();
quiescent.dom.figcaption = function() {
  var figcaption__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22335_23751 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22336_23752 = null;
    var count__22337_23753 = 0;
    var i__22338_23754 = 0;
    while (true) {
      if (i__22338_23754 < count__22337_23753) {
        var arg__11936__auto___23755 = cljs.core._nth.call(null, chunk__22336_23752, i__22338_23754);
        a__11935__auto__.push(arg__11936__auto___23755);
        var G__23756 = seq__22335_23751;
        var G__23757 = chunk__22336_23752;
        var G__23758 = count__22337_23753;
        var G__23759 = i__22338_23754 + 1;
        seq__22335_23751 = G__23756;
        chunk__22336_23752 = G__23757;
        count__22337_23753 = G__23758;
        i__22338_23754 = G__23759;
        continue;
      } else {
        var temp__4092__auto___23760 = cljs.core.seq.call(null, seq__22335_23751);
        if (temp__4092__auto___23760) {
          var seq__22335_23761__$1 = temp__4092__auto___23760;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22335_23761__$1)) {
            var c__11077__auto___23762 = cljs.core.chunk_first.call(null, seq__22335_23761__$1);
            var G__23763 = cljs.core.chunk_rest.call(null, seq__22335_23761__$1);
            var G__23764 = c__11077__auto___23762;
            var G__23765 = cljs.core.count.call(null, c__11077__auto___23762);
            var G__23766 = 0;
            seq__22335_23751 = G__23763;
            chunk__22336_23752 = G__23764;
            count__22337_23753 = G__23765;
            i__22338_23754 = G__23766;
            continue;
          } else {
            var arg__11936__auto___23767 = cljs.core.first.call(null, seq__22335_23761__$1);
            a__11935__auto__.push(arg__11936__auto___23767);
            var G__23768 = cljs.core.next.call(null, seq__22335_23761__$1);
            var G__23769 = null;
            var G__23770 = 0;
            var G__23771 = 0;
            seq__22335_23751 = G__23768;
            chunk__22336_23752 = G__23769;
            count__22337_23753 = G__23770;
            i__22338_23754 = G__23771;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.figcaption.apply(null, a__11935__auto__);
  };
  var figcaption = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return figcaption__delegate.call(this, args__11934__auto__);
  };
  figcaption.cljs$lang$maxFixedArity = 0;
  figcaption.cljs$lang$applyTo = function(arglist__23772) {
    var args__11934__auto__ = cljs.core.seq(arglist__23772);
    return figcaption__delegate(args__11934__auto__);
  };
  figcaption.cljs$core$IFn$_invoke$arity$variadic = figcaption__delegate;
  return figcaption;
}();
quiescent.dom.figure = function() {
  var figure__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22343_23773 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22344_23774 = null;
    var count__22345_23775 = 0;
    var i__22346_23776 = 0;
    while (true) {
      if (i__22346_23776 < count__22345_23775) {
        var arg__11936__auto___23777 = cljs.core._nth.call(null, chunk__22344_23774, i__22346_23776);
        a__11935__auto__.push(arg__11936__auto___23777);
        var G__23778 = seq__22343_23773;
        var G__23779 = chunk__22344_23774;
        var G__23780 = count__22345_23775;
        var G__23781 = i__22346_23776 + 1;
        seq__22343_23773 = G__23778;
        chunk__22344_23774 = G__23779;
        count__22345_23775 = G__23780;
        i__22346_23776 = G__23781;
        continue;
      } else {
        var temp__4092__auto___23782 = cljs.core.seq.call(null, seq__22343_23773);
        if (temp__4092__auto___23782) {
          var seq__22343_23783__$1 = temp__4092__auto___23782;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22343_23783__$1)) {
            var c__11077__auto___23784 = cljs.core.chunk_first.call(null, seq__22343_23783__$1);
            var G__23785 = cljs.core.chunk_rest.call(null, seq__22343_23783__$1);
            var G__23786 = c__11077__auto___23784;
            var G__23787 = cljs.core.count.call(null, c__11077__auto___23784);
            var G__23788 = 0;
            seq__22343_23773 = G__23785;
            chunk__22344_23774 = G__23786;
            count__22345_23775 = G__23787;
            i__22346_23776 = G__23788;
            continue;
          } else {
            var arg__11936__auto___23789 = cljs.core.first.call(null, seq__22343_23783__$1);
            a__11935__auto__.push(arg__11936__auto___23789);
            var G__23790 = cljs.core.next.call(null, seq__22343_23783__$1);
            var G__23791 = null;
            var G__23792 = 0;
            var G__23793 = 0;
            seq__22343_23773 = G__23790;
            chunk__22344_23774 = G__23791;
            count__22345_23775 = G__23792;
            i__22346_23776 = G__23793;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.figure.apply(null, a__11935__auto__);
  };
  var figure = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return figure__delegate.call(this, args__11934__auto__);
  };
  figure.cljs$lang$maxFixedArity = 0;
  figure.cljs$lang$applyTo = function(arglist__23794) {
    var args__11934__auto__ = cljs.core.seq(arglist__23794);
    return figure__delegate(args__11934__auto__);
  };
  figure.cljs$core$IFn$_invoke$arity$variadic = figure__delegate;
  return figure;
}();
quiescent.dom.footer = function() {
  var footer__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22351_23795 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22352_23796 = null;
    var count__22353_23797 = 0;
    var i__22354_23798 = 0;
    while (true) {
      if (i__22354_23798 < count__22353_23797) {
        var arg__11936__auto___23799 = cljs.core._nth.call(null, chunk__22352_23796, i__22354_23798);
        a__11935__auto__.push(arg__11936__auto___23799);
        var G__23800 = seq__22351_23795;
        var G__23801 = chunk__22352_23796;
        var G__23802 = count__22353_23797;
        var G__23803 = i__22354_23798 + 1;
        seq__22351_23795 = G__23800;
        chunk__22352_23796 = G__23801;
        count__22353_23797 = G__23802;
        i__22354_23798 = G__23803;
        continue;
      } else {
        var temp__4092__auto___23804 = cljs.core.seq.call(null, seq__22351_23795);
        if (temp__4092__auto___23804) {
          var seq__22351_23805__$1 = temp__4092__auto___23804;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22351_23805__$1)) {
            var c__11077__auto___23806 = cljs.core.chunk_first.call(null, seq__22351_23805__$1);
            var G__23807 = cljs.core.chunk_rest.call(null, seq__22351_23805__$1);
            var G__23808 = c__11077__auto___23806;
            var G__23809 = cljs.core.count.call(null, c__11077__auto___23806);
            var G__23810 = 0;
            seq__22351_23795 = G__23807;
            chunk__22352_23796 = G__23808;
            count__22353_23797 = G__23809;
            i__22354_23798 = G__23810;
            continue;
          } else {
            var arg__11936__auto___23811 = cljs.core.first.call(null, seq__22351_23805__$1);
            a__11935__auto__.push(arg__11936__auto___23811);
            var G__23812 = cljs.core.next.call(null, seq__22351_23805__$1);
            var G__23813 = null;
            var G__23814 = 0;
            var G__23815 = 0;
            seq__22351_23795 = G__23812;
            chunk__22352_23796 = G__23813;
            count__22353_23797 = G__23814;
            i__22354_23798 = G__23815;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.footer.apply(null, a__11935__auto__);
  };
  var footer = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return footer__delegate.call(this, args__11934__auto__);
  };
  footer.cljs$lang$maxFixedArity = 0;
  footer.cljs$lang$applyTo = function(arglist__23816) {
    var args__11934__auto__ = cljs.core.seq(arglist__23816);
    return footer__delegate(args__11934__auto__);
  };
  footer.cljs$core$IFn$_invoke$arity$variadic = footer__delegate;
  return footer;
}();
quiescent.dom.form = function() {
  var form__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22359_23817 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22360_23818 = null;
    var count__22361_23819 = 0;
    var i__22362_23820 = 0;
    while (true) {
      if (i__22362_23820 < count__22361_23819) {
        var arg__11936__auto___23821 = cljs.core._nth.call(null, chunk__22360_23818, i__22362_23820);
        a__11935__auto__.push(arg__11936__auto___23821);
        var G__23822 = seq__22359_23817;
        var G__23823 = chunk__22360_23818;
        var G__23824 = count__22361_23819;
        var G__23825 = i__22362_23820 + 1;
        seq__22359_23817 = G__23822;
        chunk__22360_23818 = G__23823;
        count__22361_23819 = G__23824;
        i__22362_23820 = G__23825;
        continue;
      } else {
        var temp__4092__auto___23826 = cljs.core.seq.call(null, seq__22359_23817);
        if (temp__4092__auto___23826) {
          var seq__22359_23827__$1 = temp__4092__auto___23826;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22359_23827__$1)) {
            var c__11077__auto___23828 = cljs.core.chunk_first.call(null, seq__22359_23827__$1);
            var G__23829 = cljs.core.chunk_rest.call(null, seq__22359_23827__$1);
            var G__23830 = c__11077__auto___23828;
            var G__23831 = cljs.core.count.call(null, c__11077__auto___23828);
            var G__23832 = 0;
            seq__22359_23817 = G__23829;
            chunk__22360_23818 = G__23830;
            count__22361_23819 = G__23831;
            i__22362_23820 = G__23832;
            continue;
          } else {
            var arg__11936__auto___23833 = cljs.core.first.call(null, seq__22359_23827__$1);
            a__11935__auto__.push(arg__11936__auto___23833);
            var G__23834 = cljs.core.next.call(null, seq__22359_23827__$1);
            var G__23835 = null;
            var G__23836 = 0;
            var G__23837 = 0;
            seq__22359_23817 = G__23834;
            chunk__22360_23818 = G__23835;
            count__22361_23819 = G__23836;
            i__22362_23820 = G__23837;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.form.apply(null, a__11935__auto__);
  };
  var form = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return form__delegate.call(this, args__11934__auto__);
  };
  form.cljs$lang$maxFixedArity = 0;
  form.cljs$lang$applyTo = function(arglist__23838) {
    var args__11934__auto__ = cljs.core.seq(arglist__23838);
    return form__delegate(args__11934__auto__);
  };
  form.cljs$core$IFn$_invoke$arity$variadic = form__delegate;
  return form;
}();
quiescent.dom.h1 = function() {
  var h1__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22367_23839 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22368_23840 = null;
    var count__22369_23841 = 0;
    var i__22370_23842 = 0;
    while (true) {
      if (i__22370_23842 < count__22369_23841) {
        var arg__11936__auto___23843 = cljs.core._nth.call(null, chunk__22368_23840, i__22370_23842);
        a__11935__auto__.push(arg__11936__auto___23843);
        var G__23844 = seq__22367_23839;
        var G__23845 = chunk__22368_23840;
        var G__23846 = count__22369_23841;
        var G__23847 = i__22370_23842 + 1;
        seq__22367_23839 = G__23844;
        chunk__22368_23840 = G__23845;
        count__22369_23841 = G__23846;
        i__22370_23842 = G__23847;
        continue;
      } else {
        var temp__4092__auto___23848 = cljs.core.seq.call(null, seq__22367_23839);
        if (temp__4092__auto___23848) {
          var seq__22367_23849__$1 = temp__4092__auto___23848;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22367_23849__$1)) {
            var c__11077__auto___23850 = cljs.core.chunk_first.call(null, seq__22367_23849__$1);
            var G__23851 = cljs.core.chunk_rest.call(null, seq__22367_23849__$1);
            var G__23852 = c__11077__auto___23850;
            var G__23853 = cljs.core.count.call(null, c__11077__auto___23850);
            var G__23854 = 0;
            seq__22367_23839 = G__23851;
            chunk__22368_23840 = G__23852;
            count__22369_23841 = G__23853;
            i__22370_23842 = G__23854;
            continue;
          } else {
            var arg__11936__auto___23855 = cljs.core.first.call(null, seq__22367_23849__$1);
            a__11935__auto__.push(arg__11936__auto___23855);
            var G__23856 = cljs.core.next.call(null, seq__22367_23849__$1);
            var G__23857 = null;
            var G__23858 = 0;
            var G__23859 = 0;
            seq__22367_23839 = G__23856;
            chunk__22368_23840 = G__23857;
            count__22369_23841 = G__23858;
            i__22370_23842 = G__23859;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.h1.apply(null, a__11935__auto__);
  };
  var h1 = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return h1__delegate.call(this, args__11934__auto__);
  };
  h1.cljs$lang$maxFixedArity = 0;
  h1.cljs$lang$applyTo = function(arglist__23860) {
    var args__11934__auto__ = cljs.core.seq(arglist__23860);
    return h1__delegate(args__11934__auto__);
  };
  h1.cljs$core$IFn$_invoke$arity$variadic = h1__delegate;
  return h1;
}();
quiescent.dom.h2 = function() {
  var h2__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22375_23861 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22376_23862 = null;
    var count__22377_23863 = 0;
    var i__22378_23864 = 0;
    while (true) {
      if (i__22378_23864 < count__22377_23863) {
        var arg__11936__auto___23865 = cljs.core._nth.call(null, chunk__22376_23862, i__22378_23864);
        a__11935__auto__.push(arg__11936__auto___23865);
        var G__23866 = seq__22375_23861;
        var G__23867 = chunk__22376_23862;
        var G__23868 = count__22377_23863;
        var G__23869 = i__22378_23864 + 1;
        seq__22375_23861 = G__23866;
        chunk__22376_23862 = G__23867;
        count__22377_23863 = G__23868;
        i__22378_23864 = G__23869;
        continue;
      } else {
        var temp__4092__auto___23870 = cljs.core.seq.call(null, seq__22375_23861);
        if (temp__4092__auto___23870) {
          var seq__22375_23871__$1 = temp__4092__auto___23870;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22375_23871__$1)) {
            var c__11077__auto___23872 = cljs.core.chunk_first.call(null, seq__22375_23871__$1);
            var G__23873 = cljs.core.chunk_rest.call(null, seq__22375_23871__$1);
            var G__23874 = c__11077__auto___23872;
            var G__23875 = cljs.core.count.call(null, c__11077__auto___23872);
            var G__23876 = 0;
            seq__22375_23861 = G__23873;
            chunk__22376_23862 = G__23874;
            count__22377_23863 = G__23875;
            i__22378_23864 = G__23876;
            continue;
          } else {
            var arg__11936__auto___23877 = cljs.core.first.call(null, seq__22375_23871__$1);
            a__11935__auto__.push(arg__11936__auto___23877);
            var G__23878 = cljs.core.next.call(null, seq__22375_23871__$1);
            var G__23879 = null;
            var G__23880 = 0;
            var G__23881 = 0;
            seq__22375_23861 = G__23878;
            chunk__22376_23862 = G__23879;
            count__22377_23863 = G__23880;
            i__22378_23864 = G__23881;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.h2.apply(null, a__11935__auto__);
  };
  var h2 = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return h2__delegate.call(this, args__11934__auto__);
  };
  h2.cljs$lang$maxFixedArity = 0;
  h2.cljs$lang$applyTo = function(arglist__23882) {
    var args__11934__auto__ = cljs.core.seq(arglist__23882);
    return h2__delegate(args__11934__auto__);
  };
  h2.cljs$core$IFn$_invoke$arity$variadic = h2__delegate;
  return h2;
}();
quiescent.dom.h3 = function() {
  var h3__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22383_23883 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22384_23884 = null;
    var count__22385_23885 = 0;
    var i__22386_23886 = 0;
    while (true) {
      if (i__22386_23886 < count__22385_23885) {
        var arg__11936__auto___23887 = cljs.core._nth.call(null, chunk__22384_23884, i__22386_23886);
        a__11935__auto__.push(arg__11936__auto___23887);
        var G__23888 = seq__22383_23883;
        var G__23889 = chunk__22384_23884;
        var G__23890 = count__22385_23885;
        var G__23891 = i__22386_23886 + 1;
        seq__22383_23883 = G__23888;
        chunk__22384_23884 = G__23889;
        count__22385_23885 = G__23890;
        i__22386_23886 = G__23891;
        continue;
      } else {
        var temp__4092__auto___23892 = cljs.core.seq.call(null, seq__22383_23883);
        if (temp__4092__auto___23892) {
          var seq__22383_23893__$1 = temp__4092__auto___23892;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22383_23893__$1)) {
            var c__11077__auto___23894 = cljs.core.chunk_first.call(null, seq__22383_23893__$1);
            var G__23895 = cljs.core.chunk_rest.call(null, seq__22383_23893__$1);
            var G__23896 = c__11077__auto___23894;
            var G__23897 = cljs.core.count.call(null, c__11077__auto___23894);
            var G__23898 = 0;
            seq__22383_23883 = G__23895;
            chunk__22384_23884 = G__23896;
            count__22385_23885 = G__23897;
            i__22386_23886 = G__23898;
            continue;
          } else {
            var arg__11936__auto___23899 = cljs.core.first.call(null, seq__22383_23893__$1);
            a__11935__auto__.push(arg__11936__auto___23899);
            var G__23900 = cljs.core.next.call(null, seq__22383_23893__$1);
            var G__23901 = null;
            var G__23902 = 0;
            var G__23903 = 0;
            seq__22383_23883 = G__23900;
            chunk__22384_23884 = G__23901;
            count__22385_23885 = G__23902;
            i__22386_23886 = G__23903;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.h3.apply(null, a__11935__auto__);
  };
  var h3 = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return h3__delegate.call(this, args__11934__auto__);
  };
  h3.cljs$lang$maxFixedArity = 0;
  h3.cljs$lang$applyTo = function(arglist__23904) {
    var args__11934__auto__ = cljs.core.seq(arglist__23904);
    return h3__delegate(args__11934__auto__);
  };
  h3.cljs$core$IFn$_invoke$arity$variadic = h3__delegate;
  return h3;
}();
quiescent.dom.h4 = function() {
  var h4__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22391_23905 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22392_23906 = null;
    var count__22393_23907 = 0;
    var i__22394_23908 = 0;
    while (true) {
      if (i__22394_23908 < count__22393_23907) {
        var arg__11936__auto___23909 = cljs.core._nth.call(null, chunk__22392_23906, i__22394_23908);
        a__11935__auto__.push(arg__11936__auto___23909);
        var G__23910 = seq__22391_23905;
        var G__23911 = chunk__22392_23906;
        var G__23912 = count__22393_23907;
        var G__23913 = i__22394_23908 + 1;
        seq__22391_23905 = G__23910;
        chunk__22392_23906 = G__23911;
        count__22393_23907 = G__23912;
        i__22394_23908 = G__23913;
        continue;
      } else {
        var temp__4092__auto___23914 = cljs.core.seq.call(null, seq__22391_23905);
        if (temp__4092__auto___23914) {
          var seq__22391_23915__$1 = temp__4092__auto___23914;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22391_23915__$1)) {
            var c__11077__auto___23916 = cljs.core.chunk_first.call(null, seq__22391_23915__$1);
            var G__23917 = cljs.core.chunk_rest.call(null, seq__22391_23915__$1);
            var G__23918 = c__11077__auto___23916;
            var G__23919 = cljs.core.count.call(null, c__11077__auto___23916);
            var G__23920 = 0;
            seq__22391_23905 = G__23917;
            chunk__22392_23906 = G__23918;
            count__22393_23907 = G__23919;
            i__22394_23908 = G__23920;
            continue;
          } else {
            var arg__11936__auto___23921 = cljs.core.first.call(null, seq__22391_23915__$1);
            a__11935__auto__.push(arg__11936__auto___23921);
            var G__23922 = cljs.core.next.call(null, seq__22391_23915__$1);
            var G__23923 = null;
            var G__23924 = 0;
            var G__23925 = 0;
            seq__22391_23905 = G__23922;
            chunk__22392_23906 = G__23923;
            count__22393_23907 = G__23924;
            i__22394_23908 = G__23925;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.h4.apply(null, a__11935__auto__);
  };
  var h4 = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return h4__delegate.call(this, args__11934__auto__);
  };
  h4.cljs$lang$maxFixedArity = 0;
  h4.cljs$lang$applyTo = function(arglist__23926) {
    var args__11934__auto__ = cljs.core.seq(arglist__23926);
    return h4__delegate(args__11934__auto__);
  };
  h4.cljs$core$IFn$_invoke$arity$variadic = h4__delegate;
  return h4;
}();
quiescent.dom.h5 = function() {
  var h5__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22399_23927 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22400_23928 = null;
    var count__22401_23929 = 0;
    var i__22402_23930 = 0;
    while (true) {
      if (i__22402_23930 < count__22401_23929) {
        var arg__11936__auto___23931 = cljs.core._nth.call(null, chunk__22400_23928, i__22402_23930);
        a__11935__auto__.push(arg__11936__auto___23931);
        var G__23932 = seq__22399_23927;
        var G__23933 = chunk__22400_23928;
        var G__23934 = count__22401_23929;
        var G__23935 = i__22402_23930 + 1;
        seq__22399_23927 = G__23932;
        chunk__22400_23928 = G__23933;
        count__22401_23929 = G__23934;
        i__22402_23930 = G__23935;
        continue;
      } else {
        var temp__4092__auto___23936 = cljs.core.seq.call(null, seq__22399_23927);
        if (temp__4092__auto___23936) {
          var seq__22399_23937__$1 = temp__4092__auto___23936;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22399_23937__$1)) {
            var c__11077__auto___23938 = cljs.core.chunk_first.call(null, seq__22399_23937__$1);
            var G__23939 = cljs.core.chunk_rest.call(null, seq__22399_23937__$1);
            var G__23940 = c__11077__auto___23938;
            var G__23941 = cljs.core.count.call(null, c__11077__auto___23938);
            var G__23942 = 0;
            seq__22399_23927 = G__23939;
            chunk__22400_23928 = G__23940;
            count__22401_23929 = G__23941;
            i__22402_23930 = G__23942;
            continue;
          } else {
            var arg__11936__auto___23943 = cljs.core.first.call(null, seq__22399_23937__$1);
            a__11935__auto__.push(arg__11936__auto___23943);
            var G__23944 = cljs.core.next.call(null, seq__22399_23937__$1);
            var G__23945 = null;
            var G__23946 = 0;
            var G__23947 = 0;
            seq__22399_23927 = G__23944;
            chunk__22400_23928 = G__23945;
            count__22401_23929 = G__23946;
            i__22402_23930 = G__23947;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.h5.apply(null, a__11935__auto__);
  };
  var h5 = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return h5__delegate.call(this, args__11934__auto__);
  };
  h5.cljs$lang$maxFixedArity = 0;
  h5.cljs$lang$applyTo = function(arglist__23948) {
    var args__11934__auto__ = cljs.core.seq(arglist__23948);
    return h5__delegate(args__11934__auto__);
  };
  h5.cljs$core$IFn$_invoke$arity$variadic = h5__delegate;
  return h5;
}();
quiescent.dom.h6 = function() {
  var h6__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22407_23949 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22408_23950 = null;
    var count__22409_23951 = 0;
    var i__22410_23952 = 0;
    while (true) {
      if (i__22410_23952 < count__22409_23951) {
        var arg__11936__auto___23953 = cljs.core._nth.call(null, chunk__22408_23950, i__22410_23952);
        a__11935__auto__.push(arg__11936__auto___23953);
        var G__23954 = seq__22407_23949;
        var G__23955 = chunk__22408_23950;
        var G__23956 = count__22409_23951;
        var G__23957 = i__22410_23952 + 1;
        seq__22407_23949 = G__23954;
        chunk__22408_23950 = G__23955;
        count__22409_23951 = G__23956;
        i__22410_23952 = G__23957;
        continue;
      } else {
        var temp__4092__auto___23958 = cljs.core.seq.call(null, seq__22407_23949);
        if (temp__4092__auto___23958) {
          var seq__22407_23959__$1 = temp__4092__auto___23958;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22407_23959__$1)) {
            var c__11077__auto___23960 = cljs.core.chunk_first.call(null, seq__22407_23959__$1);
            var G__23961 = cljs.core.chunk_rest.call(null, seq__22407_23959__$1);
            var G__23962 = c__11077__auto___23960;
            var G__23963 = cljs.core.count.call(null, c__11077__auto___23960);
            var G__23964 = 0;
            seq__22407_23949 = G__23961;
            chunk__22408_23950 = G__23962;
            count__22409_23951 = G__23963;
            i__22410_23952 = G__23964;
            continue;
          } else {
            var arg__11936__auto___23965 = cljs.core.first.call(null, seq__22407_23959__$1);
            a__11935__auto__.push(arg__11936__auto___23965);
            var G__23966 = cljs.core.next.call(null, seq__22407_23959__$1);
            var G__23967 = null;
            var G__23968 = 0;
            var G__23969 = 0;
            seq__22407_23949 = G__23966;
            chunk__22408_23950 = G__23967;
            count__22409_23951 = G__23968;
            i__22410_23952 = G__23969;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.h6.apply(null, a__11935__auto__);
  };
  var h6 = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return h6__delegate.call(this, args__11934__auto__);
  };
  h6.cljs$lang$maxFixedArity = 0;
  h6.cljs$lang$applyTo = function(arglist__23970) {
    var args__11934__auto__ = cljs.core.seq(arglist__23970);
    return h6__delegate(args__11934__auto__);
  };
  h6.cljs$core$IFn$_invoke$arity$variadic = h6__delegate;
  return h6;
}();
quiescent.dom.head = function() {
  var head__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22415_23971 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22416_23972 = null;
    var count__22417_23973 = 0;
    var i__22418_23974 = 0;
    while (true) {
      if (i__22418_23974 < count__22417_23973) {
        var arg__11936__auto___23975 = cljs.core._nth.call(null, chunk__22416_23972, i__22418_23974);
        a__11935__auto__.push(arg__11936__auto___23975);
        var G__23976 = seq__22415_23971;
        var G__23977 = chunk__22416_23972;
        var G__23978 = count__22417_23973;
        var G__23979 = i__22418_23974 + 1;
        seq__22415_23971 = G__23976;
        chunk__22416_23972 = G__23977;
        count__22417_23973 = G__23978;
        i__22418_23974 = G__23979;
        continue;
      } else {
        var temp__4092__auto___23980 = cljs.core.seq.call(null, seq__22415_23971);
        if (temp__4092__auto___23980) {
          var seq__22415_23981__$1 = temp__4092__auto___23980;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22415_23981__$1)) {
            var c__11077__auto___23982 = cljs.core.chunk_first.call(null, seq__22415_23981__$1);
            var G__23983 = cljs.core.chunk_rest.call(null, seq__22415_23981__$1);
            var G__23984 = c__11077__auto___23982;
            var G__23985 = cljs.core.count.call(null, c__11077__auto___23982);
            var G__23986 = 0;
            seq__22415_23971 = G__23983;
            chunk__22416_23972 = G__23984;
            count__22417_23973 = G__23985;
            i__22418_23974 = G__23986;
            continue;
          } else {
            var arg__11936__auto___23987 = cljs.core.first.call(null, seq__22415_23981__$1);
            a__11935__auto__.push(arg__11936__auto___23987);
            var G__23988 = cljs.core.next.call(null, seq__22415_23981__$1);
            var G__23989 = null;
            var G__23990 = 0;
            var G__23991 = 0;
            seq__22415_23971 = G__23988;
            chunk__22416_23972 = G__23989;
            count__22417_23973 = G__23990;
            i__22418_23974 = G__23991;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.head.apply(null, a__11935__auto__);
  };
  var head = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return head__delegate.call(this, args__11934__auto__);
  };
  head.cljs$lang$maxFixedArity = 0;
  head.cljs$lang$applyTo = function(arglist__23992) {
    var args__11934__auto__ = cljs.core.seq(arglist__23992);
    return head__delegate(args__11934__auto__);
  };
  head.cljs$core$IFn$_invoke$arity$variadic = head__delegate;
  return head;
}();
quiescent.dom.header = function() {
  var header__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22423_23993 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22424_23994 = null;
    var count__22425_23995 = 0;
    var i__22426_23996 = 0;
    while (true) {
      if (i__22426_23996 < count__22425_23995) {
        var arg__11936__auto___23997 = cljs.core._nth.call(null, chunk__22424_23994, i__22426_23996);
        a__11935__auto__.push(arg__11936__auto___23997);
        var G__23998 = seq__22423_23993;
        var G__23999 = chunk__22424_23994;
        var G__24000 = count__22425_23995;
        var G__24001 = i__22426_23996 + 1;
        seq__22423_23993 = G__23998;
        chunk__22424_23994 = G__23999;
        count__22425_23995 = G__24000;
        i__22426_23996 = G__24001;
        continue;
      } else {
        var temp__4092__auto___24002 = cljs.core.seq.call(null, seq__22423_23993);
        if (temp__4092__auto___24002) {
          var seq__22423_24003__$1 = temp__4092__auto___24002;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22423_24003__$1)) {
            var c__11077__auto___24004 = cljs.core.chunk_first.call(null, seq__22423_24003__$1);
            var G__24005 = cljs.core.chunk_rest.call(null, seq__22423_24003__$1);
            var G__24006 = c__11077__auto___24004;
            var G__24007 = cljs.core.count.call(null, c__11077__auto___24004);
            var G__24008 = 0;
            seq__22423_23993 = G__24005;
            chunk__22424_23994 = G__24006;
            count__22425_23995 = G__24007;
            i__22426_23996 = G__24008;
            continue;
          } else {
            var arg__11936__auto___24009 = cljs.core.first.call(null, seq__22423_24003__$1);
            a__11935__auto__.push(arg__11936__auto___24009);
            var G__24010 = cljs.core.next.call(null, seq__22423_24003__$1);
            var G__24011 = null;
            var G__24012 = 0;
            var G__24013 = 0;
            seq__22423_23993 = G__24010;
            chunk__22424_23994 = G__24011;
            count__22425_23995 = G__24012;
            i__22426_23996 = G__24013;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.header.apply(null, a__11935__auto__);
  };
  var header = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return header__delegate.call(this, args__11934__auto__);
  };
  header.cljs$lang$maxFixedArity = 0;
  header.cljs$lang$applyTo = function(arglist__24014) {
    var args__11934__auto__ = cljs.core.seq(arglist__24014);
    return header__delegate(args__11934__auto__);
  };
  header.cljs$core$IFn$_invoke$arity$variadic = header__delegate;
  return header;
}();
quiescent.dom.hr = function() {
  var hr__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22431_24015 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22432_24016 = null;
    var count__22433_24017 = 0;
    var i__22434_24018 = 0;
    while (true) {
      if (i__22434_24018 < count__22433_24017) {
        var arg__11936__auto___24019 = cljs.core._nth.call(null, chunk__22432_24016, i__22434_24018);
        a__11935__auto__.push(arg__11936__auto___24019);
        var G__24020 = seq__22431_24015;
        var G__24021 = chunk__22432_24016;
        var G__24022 = count__22433_24017;
        var G__24023 = i__22434_24018 + 1;
        seq__22431_24015 = G__24020;
        chunk__22432_24016 = G__24021;
        count__22433_24017 = G__24022;
        i__22434_24018 = G__24023;
        continue;
      } else {
        var temp__4092__auto___24024 = cljs.core.seq.call(null, seq__22431_24015);
        if (temp__4092__auto___24024) {
          var seq__22431_24025__$1 = temp__4092__auto___24024;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22431_24025__$1)) {
            var c__11077__auto___24026 = cljs.core.chunk_first.call(null, seq__22431_24025__$1);
            var G__24027 = cljs.core.chunk_rest.call(null, seq__22431_24025__$1);
            var G__24028 = c__11077__auto___24026;
            var G__24029 = cljs.core.count.call(null, c__11077__auto___24026);
            var G__24030 = 0;
            seq__22431_24015 = G__24027;
            chunk__22432_24016 = G__24028;
            count__22433_24017 = G__24029;
            i__22434_24018 = G__24030;
            continue;
          } else {
            var arg__11936__auto___24031 = cljs.core.first.call(null, seq__22431_24025__$1);
            a__11935__auto__.push(arg__11936__auto___24031);
            var G__24032 = cljs.core.next.call(null, seq__22431_24025__$1);
            var G__24033 = null;
            var G__24034 = 0;
            var G__24035 = 0;
            seq__22431_24015 = G__24032;
            chunk__22432_24016 = G__24033;
            count__22433_24017 = G__24034;
            i__22434_24018 = G__24035;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.hr.apply(null, a__11935__auto__);
  };
  var hr = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return hr__delegate.call(this, args__11934__auto__);
  };
  hr.cljs$lang$maxFixedArity = 0;
  hr.cljs$lang$applyTo = function(arglist__24036) {
    var args__11934__auto__ = cljs.core.seq(arglist__24036);
    return hr__delegate(args__11934__auto__);
  };
  hr.cljs$core$IFn$_invoke$arity$variadic = hr__delegate;
  return hr;
}();
quiescent.dom.html = function() {
  var html__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22439_24037 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22440_24038 = null;
    var count__22441_24039 = 0;
    var i__22442_24040 = 0;
    while (true) {
      if (i__22442_24040 < count__22441_24039) {
        var arg__11936__auto___24041 = cljs.core._nth.call(null, chunk__22440_24038, i__22442_24040);
        a__11935__auto__.push(arg__11936__auto___24041);
        var G__24042 = seq__22439_24037;
        var G__24043 = chunk__22440_24038;
        var G__24044 = count__22441_24039;
        var G__24045 = i__22442_24040 + 1;
        seq__22439_24037 = G__24042;
        chunk__22440_24038 = G__24043;
        count__22441_24039 = G__24044;
        i__22442_24040 = G__24045;
        continue;
      } else {
        var temp__4092__auto___24046 = cljs.core.seq.call(null, seq__22439_24037);
        if (temp__4092__auto___24046) {
          var seq__22439_24047__$1 = temp__4092__auto___24046;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22439_24047__$1)) {
            var c__11077__auto___24048 = cljs.core.chunk_first.call(null, seq__22439_24047__$1);
            var G__24049 = cljs.core.chunk_rest.call(null, seq__22439_24047__$1);
            var G__24050 = c__11077__auto___24048;
            var G__24051 = cljs.core.count.call(null, c__11077__auto___24048);
            var G__24052 = 0;
            seq__22439_24037 = G__24049;
            chunk__22440_24038 = G__24050;
            count__22441_24039 = G__24051;
            i__22442_24040 = G__24052;
            continue;
          } else {
            var arg__11936__auto___24053 = cljs.core.first.call(null, seq__22439_24047__$1);
            a__11935__auto__.push(arg__11936__auto___24053);
            var G__24054 = cljs.core.next.call(null, seq__22439_24047__$1);
            var G__24055 = null;
            var G__24056 = 0;
            var G__24057 = 0;
            seq__22439_24037 = G__24054;
            chunk__22440_24038 = G__24055;
            count__22441_24039 = G__24056;
            i__22442_24040 = G__24057;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.html.apply(null, a__11935__auto__);
  };
  var html = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return html__delegate.call(this, args__11934__auto__);
  };
  html.cljs$lang$maxFixedArity = 0;
  html.cljs$lang$applyTo = function(arglist__24058) {
    var args__11934__auto__ = cljs.core.seq(arglist__24058);
    return html__delegate(args__11934__auto__);
  };
  html.cljs$core$IFn$_invoke$arity$variadic = html__delegate;
  return html;
}();
quiescent.dom.i = function() {
  var i__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22447_24059 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22448_24060 = null;
    var count__22449_24061 = 0;
    var i__22450_24062 = 0;
    while (true) {
      if (i__22450_24062 < count__22449_24061) {
        var arg__11936__auto___24063 = cljs.core._nth.call(null, chunk__22448_24060, i__22450_24062);
        a__11935__auto__.push(arg__11936__auto___24063);
        var G__24064 = seq__22447_24059;
        var G__24065 = chunk__22448_24060;
        var G__24066 = count__22449_24061;
        var G__24067 = i__22450_24062 + 1;
        seq__22447_24059 = G__24064;
        chunk__22448_24060 = G__24065;
        count__22449_24061 = G__24066;
        i__22450_24062 = G__24067;
        continue;
      } else {
        var temp__4092__auto___24068 = cljs.core.seq.call(null, seq__22447_24059);
        if (temp__4092__auto___24068) {
          var seq__22447_24069__$1 = temp__4092__auto___24068;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22447_24069__$1)) {
            var c__11077__auto___24070 = cljs.core.chunk_first.call(null, seq__22447_24069__$1);
            var G__24071 = cljs.core.chunk_rest.call(null, seq__22447_24069__$1);
            var G__24072 = c__11077__auto___24070;
            var G__24073 = cljs.core.count.call(null, c__11077__auto___24070);
            var G__24074 = 0;
            seq__22447_24059 = G__24071;
            chunk__22448_24060 = G__24072;
            count__22449_24061 = G__24073;
            i__22450_24062 = G__24074;
            continue;
          } else {
            var arg__11936__auto___24075 = cljs.core.first.call(null, seq__22447_24069__$1);
            a__11935__auto__.push(arg__11936__auto___24075);
            var G__24076 = cljs.core.next.call(null, seq__22447_24069__$1);
            var G__24077 = null;
            var G__24078 = 0;
            var G__24079 = 0;
            seq__22447_24059 = G__24076;
            chunk__22448_24060 = G__24077;
            count__22449_24061 = G__24078;
            i__22450_24062 = G__24079;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.i.apply(null, a__11935__auto__);
  };
  var i = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return i__delegate.call(this, args__11934__auto__);
  };
  i.cljs$lang$maxFixedArity = 0;
  i.cljs$lang$applyTo = function(arglist__24080) {
    var args__11934__auto__ = cljs.core.seq(arglist__24080);
    return i__delegate(args__11934__auto__);
  };
  i.cljs$core$IFn$_invoke$arity$variadic = i__delegate;
  return i;
}();
quiescent.dom.iframe = function() {
  var iframe__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22455_24081 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22456_24082 = null;
    var count__22457_24083 = 0;
    var i__22458_24084 = 0;
    while (true) {
      if (i__22458_24084 < count__22457_24083) {
        var arg__11936__auto___24085 = cljs.core._nth.call(null, chunk__22456_24082, i__22458_24084);
        a__11935__auto__.push(arg__11936__auto___24085);
        var G__24086 = seq__22455_24081;
        var G__24087 = chunk__22456_24082;
        var G__24088 = count__22457_24083;
        var G__24089 = i__22458_24084 + 1;
        seq__22455_24081 = G__24086;
        chunk__22456_24082 = G__24087;
        count__22457_24083 = G__24088;
        i__22458_24084 = G__24089;
        continue;
      } else {
        var temp__4092__auto___24090 = cljs.core.seq.call(null, seq__22455_24081);
        if (temp__4092__auto___24090) {
          var seq__22455_24091__$1 = temp__4092__auto___24090;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22455_24091__$1)) {
            var c__11077__auto___24092 = cljs.core.chunk_first.call(null, seq__22455_24091__$1);
            var G__24093 = cljs.core.chunk_rest.call(null, seq__22455_24091__$1);
            var G__24094 = c__11077__auto___24092;
            var G__24095 = cljs.core.count.call(null, c__11077__auto___24092);
            var G__24096 = 0;
            seq__22455_24081 = G__24093;
            chunk__22456_24082 = G__24094;
            count__22457_24083 = G__24095;
            i__22458_24084 = G__24096;
            continue;
          } else {
            var arg__11936__auto___24097 = cljs.core.first.call(null, seq__22455_24091__$1);
            a__11935__auto__.push(arg__11936__auto___24097);
            var G__24098 = cljs.core.next.call(null, seq__22455_24091__$1);
            var G__24099 = null;
            var G__24100 = 0;
            var G__24101 = 0;
            seq__22455_24081 = G__24098;
            chunk__22456_24082 = G__24099;
            count__22457_24083 = G__24100;
            i__22458_24084 = G__24101;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.iframe.apply(null, a__11935__auto__);
  };
  var iframe = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return iframe__delegate.call(this, args__11934__auto__);
  };
  iframe.cljs$lang$maxFixedArity = 0;
  iframe.cljs$lang$applyTo = function(arglist__24102) {
    var args__11934__auto__ = cljs.core.seq(arglist__24102);
    return iframe__delegate(args__11934__auto__);
  };
  iframe.cljs$core$IFn$_invoke$arity$variadic = iframe__delegate;
  return iframe;
}();
quiescent.dom.img = function() {
  var img__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22463_24103 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22464_24104 = null;
    var count__22465_24105 = 0;
    var i__22466_24106 = 0;
    while (true) {
      if (i__22466_24106 < count__22465_24105) {
        var arg__11936__auto___24107 = cljs.core._nth.call(null, chunk__22464_24104, i__22466_24106);
        a__11935__auto__.push(arg__11936__auto___24107);
        var G__24108 = seq__22463_24103;
        var G__24109 = chunk__22464_24104;
        var G__24110 = count__22465_24105;
        var G__24111 = i__22466_24106 + 1;
        seq__22463_24103 = G__24108;
        chunk__22464_24104 = G__24109;
        count__22465_24105 = G__24110;
        i__22466_24106 = G__24111;
        continue;
      } else {
        var temp__4092__auto___24112 = cljs.core.seq.call(null, seq__22463_24103);
        if (temp__4092__auto___24112) {
          var seq__22463_24113__$1 = temp__4092__auto___24112;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22463_24113__$1)) {
            var c__11077__auto___24114 = cljs.core.chunk_first.call(null, seq__22463_24113__$1);
            var G__24115 = cljs.core.chunk_rest.call(null, seq__22463_24113__$1);
            var G__24116 = c__11077__auto___24114;
            var G__24117 = cljs.core.count.call(null, c__11077__auto___24114);
            var G__24118 = 0;
            seq__22463_24103 = G__24115;
            chunk__22464_24104 = G__24116;
            count__22465_24105 = G__24117;
            i__22466_24106 = G__24118;
            continue;
          } else {
            var arg__11936__auto___24119 = cljs.core.first.call(null, seq__22463_24113__$1);
            a__11935__auto__.push(arg__11936__auto___24119);
            var G__24120 = cljs.core.next.call(null, seq__22463_24113__$1);
            var G__24121 = null;
            var G__24122 = 0;
            var G__24123 = 0;
            seq__22463_24103 = G__24120;
            chunk__22464_24104 = G__24121;
            count__22465_24105 = G__24122;
            i__22466_24106 = G__24123;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.img.apply(null, a__11935__auto__);
  };
  var img = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return img__delegate.call(this, args__11934__auto__);
  };
  img.cljs$lang$maxFixedArity = 0;
  img.cljs$lang$applyTo = function(arglist__24124) {
    var args__11934__auto__ = cljs.core.seq(arglist__24124);
    return img__delegate(args__11934__auto__);
  };
  img.cljs$core$IFn$_invoke$arity$variadic = img__delegate;
  return img;
}();
quiescent.dom.input = function() {
  var input__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22471_24125 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22472_24126 = null;
    var count__22473_24127 = 0;
    var i__22474_24128 = 0;
    while (true) {
      if (i__22474_24128 < count__22473_24127) {
        var arg__11936__auto___24129 = cljs.core._nth.call(null, chunk__22472_24126, i__22474_24128);
        a__11935__auto__.push(arg__11936__auto___24129);
        var G__24130 = seq__22471_24125;
        var G__24131 = chunk__22472_24126;
        var G__24132 = count__22473_24127;
        var G__24133 = i__22474_24128 + 1;
        seq__22471_24125 = G__24130;
        chunk__22472_24126 = G__24131;
        count__22473_24127 = G__24132;
        i__22474_24128 = G__24133;
        continue;
      } else {
        var temp__4092__auto___24134 = cljs.core.seq.call(null, seq__22471_24125);
        if (temp__4092__auto___24134) {
          var seq__22471_24135__$1 = temp__4092__auto___24134;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22471_24135__$1)) {
            var c__11077__auto___24136 = cljs.core.chunk_first.call(null, seq__22471_24135__$1);
            var G__24137 = cljs.core.chunk_rest.call(null, seq__22471_24135__$1);
            var G__24138 = c__11077__auto___24136;
            var G__24139 = cljs.core.count.call(null, c__11077__auto___24136);
            var G__24140 = 0;
            seq__22471_24125 = G__24137;
            chunk__22472_24126 = G__24138;
            count__22473_24127 = G__24139;
            i__22474_24128 = G__24140;
            continue;
          } else {
            var arg__11936__auto___24141 = cljs.core.first.call(null, seq__22471_24135__$1);
            a__11935__auto__.push(arg__11936__auto___24141);
            var G__24142 = cljs.core.next.call(null, seq__22471_24135__$1);
            var G__24143 = null;
            var G__24144 = 0;
            var G__24145 = 0;
            seq__22471_24125 = G__24142;
            chunk__22472_24126 = G__24143;
            count__22473_24127 = G__24144;
            i__22474_24128 = G__24145;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.input.apply(null, a__11935__auto__);
  };
  var input = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return input__delegate.call(this, args__11934__auto__);
  };
  input.cljs$lang$maxFixedArity = 0;
  input.cljs$lang$applyTo = function(arglist__24146) {
    var args__11934__auto__ = cljs.core.seq(arglist__24146);
    return input__delegate(args__11934__auto__);
  };
  input.cljs$core$IFn$_invoke$arity$variadic = input__delegate;
  return input;
}();
quiescent.dom.ins = function() {
  var ins__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22479_24147 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22480_24148 = null;
    var count__22481_24149 = 0;
    var i__22482_24150 = 0;
    while (true) {
      if (i__22482_24150 < count__22481_24149) {
        var arg__11936__auto___24151 = cljs.core._nth.call(null, chunk__22480_24148, i__22482_24150);
        a__11935__auto__.push(arg__11936__auto___24151);
        var G__24152 = seq__22479_24147;
        var G__24153 = chunk__22480_24148;
        var G__24154 = count__22481_24149;
        var G__24155 = i__22482_24150 + 1;
        seq__22479_24147 = G__24152;
        chunk__22480_24148 = G__24153;
        count__22481_24149 = G__24154;
        i__22482_24150 = G__24155;
        continue;
      } else {
        var temp__4092__auto___24156 = cljs.core.seq.call(null, seq__22479_24147);
        if (temp__4092__auto___24156) {
          var seq__22479_24157__$1 = temp__4092__auto___24156;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22479_24157__$1)) {
            var c__11077__auto___24158 = cljs.core.chunk_first.call(null, seq__22479_24157__$1);
            var G__24159 = cljs.core.chunk_rest.call(null, seq__22479_24157__$1);
            var G__24160 = c__11077__auto___24158;
            var G__24161 = cljs.core.count.call(null, c__11077__auto___24158);
            var G__24162 = 0;
            seq__22479_24147 = G__24159;
            chunk__22480_24148 = G__24160;
            count__22481_24149 = G__24161;
            i__22482_24150 = G__24162;
            continue;
          } else {
            var arg__11936__auto___24163 = cljs.core.first.call(null, seq__22479_24157__$1);
            a__11935__auto__.push(arg__11936__auto___24163);
            var G__24164 = cljs.core.next.call(null, seq__22479_24157__$1);
            var G__24165 = null;
            var G__24166 = 0;
            var G__24167 = 0;
            seq__22479_24147 = G__24164;
            chunk__22480_24148 = G__24165;
            count__22481_24149 = G__24166;
            i__22482_24150 = G__24167;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.ins.apply(null, a__11935__auto__);
  };
  var ins = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return ins__delegate.call(this, args__11934__auto__);
  };
  ins.cljs$lang$maxFixedArity = 0;
  ins.cljs$lang$applyTo = function(arglist__24168) {
    var args__11934__auto__ = cljs.core.seq(arglist__24168);
    return ins__delegate(args__11934__auto__);
  };
  ins.cljs$core$IFn$_invoke$arity$variadic = ins__delegate;
  return ins;
}();
quiescent.dom.kbd = function() {
  var kbd__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22487_24169 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22488_24170 = null;
    var count__22489_24171 = 0;
    var i__22490_24172 = 0;
    while (true) {
      if (i__22490_24172 < count__22489_24171) {
        var arg__11936__auto___24173 = cljs.core._nth.call(null, chunk__22488_24170, i__22490_24172);
        a__11935__auto__.push(arg__11936__auto___24173);
        var G__24174 = seq__22487_24169;
        var G__24175 = chunk__22488_24170;
        var G__24176 = count__22489_24171;
        var G__24177 = i__22490_24172 + 1;
        seq__22487_24169 = G__24174;
        chunk__22488_24170 = G__24175;
        count__22489_24171 = G__24176;
        i__22490_24172 = G__24177;
        continue;
      } else {
        var temp__4092__auto___24178 = cljs.core.seq.call(null, seq__22487_24169);
        if (temp__4092__auto___24178) {
          var seq__22487_24179__$1 = temp__4092__auto___24178;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22487_24179__$1)) {
            var c__11077__auto___24180 = cljs.core.chunk_first.call(null, seq__22487_24179__$1);
            var G__24181 = cljs.core.chunk_rest.call(null, seq__22487_24179__$1);
            var G__24182 = c__11077__auto___24180;
            var G__24183 = cljs.core.count.call(null, c__11077__auto___24180);
            var G__24184 = 0;
            seq__22487_24169 = G__24181;
            chunk__22488_24170 = G__24182;
            count__22489_24171 = G__24183;
            i__22490_24172 = G__24184;
            continue;
          } else {
            var arg__11936__auto___24185 = cljs.core.first.call(null, seq__22487_24179__$1);
            a__11935__auto__.push(arg__11936__auto___24185);
            var G__24186 = cljs.core.next.call(null, seq__22487_24179__$1);
            var G__24187 = null;
            var G__24188 = 0;
            var G__24189 = 0;
            seq__22487_24169 = G__24186;
            chunk__22488_24170 = G__24187;
            count__22489_24171 = G__24188;
            i__22490_24172 = G__24189;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.kbd.apply(null, a__11935__auto__);
  };
  var kbd = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return kbd__delegate.call(this, args__11934__auto__);
  };
  kbd.cljs$lang$maxFixedArity = 0;
  kbd.cljs$lang$applyTo = function(arglist__24190) {
    var args__11934__auto__ = cljs.core.seq(arglist__24190);
    return kbd__delegate(args__11934__auto__);
  };
  kbd.cljs$core$IFn$_invoke$arity$variadic = kbd__delegate;
  return kbd;
}();
quiescent.dom.keygen = function() {
  var keygen__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22495_24191 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22496_24192 = null;
    var count__22497_24193 = 0;
    var i__22498_24194 = 0;
    while (true) {
      if (i__22498_24194 < count__22497_24193) {
        var arg__11936__auto___24195 = cljs.core._nth.call(null, chunk__22496_24192, i__22498_24194);
        a__11935__auto__.push(arg__11936__auto___24195);
        var G__24196 = seq__22495_24191;
        var G__24197 = chunk__22496_24192;
        var G__24198 = count__22497_24193;
        var G__24199 = i__22498_24194 + 1;
        seq__22495_24191 = G__24196;
        chunk__22496_24192 = G__24197;
        count__22497_24193 = G__24198;
        i__22498_24194 = G__24199;
        continue;
      } else {
        var temp__4092__auto___24200 = cljs.core.seq.call(null, seq__22495_24191);
        if (temp__4092__auto___24200) {
          var seq__22495_24201__$1 = temp__4092__auto___24200;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22495_24201__$1)) {
            var c__11077__auto___24202 = cljs.core.chunk_first.call(null, seq__22495_24201__$1);
            var G__24203 = cljs.core.chunk_rest.call(null, seq__22495_24201__$1);
            var G__24204 = c__11077__auto___24202;
            var G__24205 = cljs.core.count.call(null, c__11077__auto___24202);
            var G__24206 = 0;
            seq__22495_24191 = G__24203;
            chunk__22496_24192 = G__24204;
            count__22497_24193 = G__24205;
            i__22498_24194 = G__24206;
            continue;
          } else {
            var arg__11936__auto___24207 = cljs.core.first.call(null, seq__22495_24201__$1);
            a__11935__auto__.push(arg__11936__auto___24207);
            var G__24208 = cljs.core.next.call(null, seq__22495_24201__$1);
            var G__24209 = null;
            var G__24210 = 0;
            var G__24211 = 0;
            seq__22495_24191 = G__24208;
            chunk__22496_24192 = G__24209;
            count__22497_24193 = G__24210;
            i__22498_24194 = G__24211;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.keygen.apply(null, a__11935__auto__);
  };
  var keygen = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return keygen__delegate.call(this, args__11934__auto__);
  };
  keygen.cljs$lang$maxFixedArity = 0;
  keygen.cljs$lang$applyTo = function(arglist__24212) {
    var args__11934__auto__ = cljs.core.seq(arglist__24212);
    return keygen__delegate(args__11934__auto__);
  };
  keygen.cljs$core$IFn$_invoke$arity$variadic = keygen__delegate;
  return keygen;
}();
quiescent.dom.label = function() {
  var label__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22503_24213 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22504_24214 = null;
    var count__22505_24215 = 0;
    var i__22506_24216 = 0;
    while (true) {
      if (i__22506_24216 < count__22505_24215) {
        var arg__11936__auto___24217 = cljs.core._nth.call(null, chunk__22504_24214, i__22506_24216);
        a__11935__auto__.push(arg__11936__auto___24217);
        var G__24218 = seq__22503_24213;
        var G__24219 = chunk__22504_24214;
        var G__24220 = count__22505_24215;
        var G__24221 = i__22506_24216 + 1;
        seq__22503_24213 = G__24218;
        chunk__22504_24214 = G__24219;
        count__22505_24215 = G__24220;
        i__22506_24216 = G__24221;
        continue;
      } else {
        var temp__4092__auto___24222 = cljs.core.seq.call(null, seq__22503_24213);
        if (temp__4092__auto___24222) {
          var seq__22503_24223__$1 = temp__4092__auto___24222;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22503_24223__$1)) {
            var c__11077__auto___24224 = cljs.core.chunk_first.call(null, seq__22503_24223__$1);
            var G__24225 = cljs.core.chunk_rest.call(null, seq__22503_24223__$1);
            var G__24226 = c__11077__auto___24224;
            var G__24227 = cljs.core.count.call(null, c__11077__auto___24224);
            var G__24228 = 0;
            seq__22503_24213 = G__24225;
            chunk__22504_24214 = G__24226;
            count__22505_24215 = G__24227;
            i__22506_24216 = G__24228;
            continue;
          } else {
            var arg__11936__auto___24229 = cljs.core.first.call(null, seq__22503_24223__$1);
            a__11935__auto__.push(arg__11936__auto___24229);
            var G__24230 = cljs.core.next.call(null, seq__22503_24223__$1);
            var G__24231 = null;
            var G__24232 = 0;
            var G__24233 = 0;
            seq__22503_24213 = G__24230;
            chunk__22504_24214 = G__24231;
            count__22505_24215 = G__24232;
            i__22506_24216 = G__24233;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.label.apply(null, a__11935__auto__);
  };
  var label = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return label__delegate.call(this, args__11934__auto__);
  };
  label.cljs$lang$maxFixedArity = 0;
  label.cljs$lang$applyTo = function(arglist__24234) {
    var args__11934__auto__ = cljs.core.seq(arglist__24234);
    return label__delegate(args__11934__auto__);
  };
  label.cljs$core$IFn$_invoke$arity$variadic = label__delegate;
  return label;
}();
quiescent.dom.legend = function() {
  var legend__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22511_24235 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22512_24236 = null;
    var count__22513_24237 = 0;
    var i__22514_24238 = 0;
    while (true) {
      if (i__22514_24238 < count__22513_24237) {
        var arg__11936__auto___24239 = cljs.core._nth.call(null, chunk__22512_24236, i__22514_24238);
        a__11935__auto__.push(arg__11936__auto___24239);
        var G__24240 = seq__22511_24235;
        var G__24241 = chunk__22512_24236;
        var G__24242 = count__22513_24237;
        var G__24243 = i__22514_24238 + 1;
        seq__22511_24235 = G__24240;
        chunk__22512_24236 = G__24241;
        count__22513_24237 = G__24242;
        i__22514_24238 = G__24243;
        continue;
      } else {
        var temp__4092__auto___24244 = cljs.core.seq.call(null, seq__22511_24235);
        if (temp__4092__auto___24244) {
          var seq__22511_24245__$1 = temp__4092__auto___24244;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22511_24245__$1)) {
            var c__11077__auto___24246 = cljs.core.chunk_first.call(null, seq__22511_24245__$1);
            var G__24247 = cljs.core.chunk_rest.call(null, seq__22511_24245__$1);
            var G__24248 = c__11077__auto___24246;
            var G__24249 = cljs.core.count.call(null, c__11077__auto___24246);
            var G__24250 = 0;
            seq__22511_24235 = G__24247;
            chunk__22512_24236 = G__24248;
            count__22513_24237 = G__24249;
            i__22514_24238 = G__24250;
            continue;
          } else {
            var arg__11936__auto___24251 = cljs.core.first.call(null, seq__22511_24245__$1);
            a__11935__auto__.push(arg__11936__auto___24251);
            var G__24252 = cljs.core.next.call(null, seq__22511_24245__$1);
            var G__24253 = null;
            var G__24254 = 0;
            var G__24255 = 0;
            seq__22511_24235 = G__24252;
            chunk__22512_24236 = G__24253;
            count__22513_24237 = G__24254;
            i__22514_24238 = G__24255;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.legend.apply(null, a__11935__auto__);
  };
  var legend = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return legend__delegate.call(this, args__11934__auto__);
  };
  legend.cljs$lang$maxFixedArity = 0;
  legend.cljs$lang$applyTo = function(arglist__24256) {
    var args__11934__auto__ = cljs.core.seq(arglist__24256);
    return legend__delegate(args__11934__auto__);
  };
  legend.cljs$core$IFn$_invoke$arity$variadic = legend__delegate;
  return legend;
}();
quiescent.dom.li = function() {
  var li__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22519_24257 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22520_24258 = null;
    var count__22521_24259 = 0;
    var i__22522_24260 = 0;
    while (true) {
      if (i__22522_24260 < count__22521_24259) {
        var arg__11936__auto___24261 = cljs.core._nth.call(null, chunk__22520_24258, i__22522_24260);
        a__11935__auto__.push(arg__11936__auto___24261);
        var G__24262 = seq__22519_24257;
        var G__24263 = chunk__22520_24258;
        var G__24264 = count__22521_24259;
        var G__24265 = i__22522_24260 + 1;
        seq__22519_24257 = G__24262;
        chunk__22520_24258 = G__24263;
        count__22521_24259 = G__24264;
        i__22522_24260 = G__24265;
        continue;
      } else {
        var temp__4092__auto___24266 = cljs.core.seq.call(null, seq__22519_24257);
        if (temp__4092__auto___24266) {
          var seq__22519_24267__$1 = temp__4092__auto___24266;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22519_24267__$1)) {
            var c__11077__auto___24268 = cljs.core.chunk_first.call(null, seq__22519_24267__$1);
            var G__24269 = cljs.core.chunk_rest.call(null, seq__22519_24267__$1);
            var G__24270 = c__11077__auto___24268;
            var G__24271 = cljs.core.count.call(null, c__11077__auto___24268);
            var G__24272 = 0;
            seq__22519_24257 = G__24269;
            chunk__22520_24258 = G__24270;
            count__22521_24259 = G__24271;
            i__22522_24260 = G__24272;
            continue;
          } else {
            var arg__11936__auto___24273 = cljs.core.first.call(null, seq__22519_24267__$1);
            a__11935__auto__.push(arg__11936__auto___24273);
            var G__24274 = cljs.core.next.call(null, seq__22519_24267__$1);
            var G__24275 = null;
            var G__24276 = 0;
            var G__24277 = 0;
            seq__22519_24257 = G__24274;
            chunk__22520_24258 = G__24275;
            count__22521_24259 = G__24276;
            i__22522_24260 = G__24277;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.li.apply(null, a__11935__auto__);
  };
  var li = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return li__delegate.call(this, args__11934__auto__);
  };
  li.cljs$lang$maxFixedArity = 0;
  li.cljs$lang$applyTo = function(arglist__24278) {
    var args__11934__auto__ = cljs.core.seq(arglist__24278);
    return li__delegate(args__11934__auto__);
  };
  li.cljs$core$IFn$_invoke$arity$variadic = li__delegate;
  return li;
}();
quiescent.dom.link = function() {
  var link__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22527_24279 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22528_24280 = null;
    var count__22529_24281 = 0;
    var i__22530_24282 = 0;
    while (true) {
      if (i__22530_24282 < count__22529_24281) {
        var arg__11936__auto___24283 = cljs.core._nth.call(null, chunk__22528_24280, i__22530_24282);
        a__11935__auto__.push(arg__11936__auto___24283);
        var G__24284 = seq__22527_24279;
        var G__24285 = chunk__22528_24280;
        var G__24286 = count__22529_24281;
        var G__24287 = i__22530_24282 + 1;
        seq__22527_24279 = G__24284;
        chunk__22528_24280 = G__24285;
        count__22529_24281 = G__24286;
        i__22530_24282 = G__24287;
        continue;
      } else {
        var temp__4092__auto___24288 = cljs.core.seq.call(null, seq__22527_24279);
        if (temp__4092__auto___24288) {
          var seq__22527_24289__$1 = temp__4092__auto___24288;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22527_24289__$1)) {
            var c__11077__auto___24290 = cljs.core.chunk_first.call(null, seq__22527_24289__$1);
            var G__24291 = cljs.core.chunk_rest.call(null, seq__22527_24289__$1);
            var G__24292 = c__11077__auto___24290;
            var G__24293 = cljs.core.count.call(null, c__11077__auto___24290);
            var G__24294 = 0;
            seq__22527_24279 = G__24291;
            chunk__22528_24280 = G__24292;
            count__22529_24281 = G__24293;
            i__22530_24282 = G__24294;
            continue;
          } else {
            var arg__11936__auto___24295 = cljs.core.first.call(null, seq__22527_24289__$1);
            a__11935__auto__.push(arg__11936__auto___24295);
            var G__24296 = cljs.core.next.call(null, seq__22527_24289__$1);
            var G__24297 = null;
            var G__24298 = 0;
            var G__24299 = 0;
            seq__22527_24279 = G__24296;
            chunk__22528_24280 = G__24297;
            count__22529_24281 = G__24298;
            i__22530_24282 = G__24299;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.link.apply(null, a__11935__auto__);
  };
  var link = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return link__delegate.call(this, args__11934__auto__);
  };
  link.cljs$lang$maxFixedArity = 0;
  link.cljs$lang$applyTo = function(arglist__24300) {
    var args__11934__auto__ = cljs.core.seq(arglist__24300);
    return link__delegate(args__11934__auto__);
  };
  link.cljs$core$IFn$_invoke$arity$variadic = link__delegate;
  return link;
}();
quiescent.dom.main = function() {
  var main__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22535_24301 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22536_24302 = null;
    var count__22537_24303 = 0;
    var i__22538_24304 = 0;
    while (true) {
      if (i__22538_24304 < count__22537_24303) {
        var arg__11936__auto___24305 = cljs.core._nth.call(null, chunk__22536_24302, i__22538_24304);
        a__11935__auto__.push(arg__11936__auto___24305);
        var G__24306 = seq__22535_24301;
        var G__24307 = chunk__22536_24302;
        var G__24308 = count__22537_24303;
        var G__24309 = i__22538_24304 + 1;
        seq__22535_24301 = G__24306;
        chunk__22536_24302 = G__24307;
        count__22537_24303 = G__24308;
        i__22538_24304 = G__24309;
        continue;
      } else {
        var temp__4092__auto___24310 = cljs.core.seq.call(null, seq__22535_24301);
        if (temp__4092__auto___24310) {
          var seq__22535_24311__$1 = temp__4092__auto___24310;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22535_24311__$1)) {
            var c__11077__auto___24312 = cljs.core.chunk_first.call(null, seq__22535_24311__$1);
            var G__24313 = cljs.core.chunk_rest.call(null, seq__22535_24311__$1);
            var G__24314 = c__11077__auto___24312;
            var G__24315 = cljs.core.count.call(null, c__11077__auto___24312);
            var G__24316 = 0;
            seq__22535_24301 = G__24313;
            chunk__22536_24302 = G__24314;
            count__22537_24303 = G__24315;
            i__22538_24304 = G__24316;
            continue;
          } else {
            var arg__11936__auto___24317 = cljs.core.first.call(null, seq__22535_24311__$1);
            a__11935__auto__.push(arg__11936__auto___24317);
            var G__24318 = cljs.core.next.call(null, seq__22535_24311__$1);
            var G__24319 = null;
            var G__24320 = 0;
            var G__24321 = 0;
            seq__22535_24301 = G__24318;
            chunk__22536_24302 = G__24319;
            count__22537_24303 = G__24320;
            i__22538_24304 = G__24321;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.main.apply(null, a__11935__auto__);
  };
  var main = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return main__delegate.call(this, args__11934__auto__);
  };
  main.cljs$lang$maxFixedArity = 0;
  main.cljs$lang$applyTo = function(arglist__24322) {
    var args__11934__auto__ = cljs.core.seq(arglist__24322);
    return main__delegate(args__11934__auto__);
  };
  main.cljs$core$IFn$_invoke$arity$variadic = main__delegate;
  return main;
}();
quiescent.dom.map = function() {
  var map__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22543_24323 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22544_24324 = null;
    var count__22545_24325 = 0;
    var i__22546_24326 = 0;
    while (true) {
      if (i__22546_24326 < count__22545_24325) {
        var arg__11936__auto___24327 = cljs.core._nth.call(null, chunk__22544_24324, i__22546_24326);
        a__11935__auto__.push(arg__11936__auto___24327);
        var G__24328 = seq__22543_24323;
        var G__24329 = chunk__22544_24324;
        var G__24330 = count__22545_24325;
        var G__24331 = i__22546_24326 + 1;
        seq__22543_24323 = G__24328;
        chunk__22544_24324 = G__24329;
        count__22545_24325 = G__24330;
        i__22546_24326 = G__24331;
        continue;
      } else {
        var temp__4092__auto___24332 = cljs.core.seq.call(null, seq__22543_24323);
        if (temp__4092__auto___24332) {
          var seq__22543_24333__$1 = temp__4092__auto___24332;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22543_24333__$1)) {
            var c__11077__auto___24334 = cljs.core.chunk_first.call(null, seq__22543_24333__$1);
            var G__24335 = cljs.core.chunk_rest.call(null, seq__22543_24333__$1);
            var G__24336 = c__11077__auto___24334;
            var G__24337 = cljs.core.count.call(null, c__11077__auto___24334);
            var G__24338 = 0;
            seq__22543_24323 = G__24335;
            chunk__22544_24324 = G__24336;
            count__22545_24325 = G__24337;
            i__22546_24326 = G__24338;
            continue;
          } else {
            var arg__11936__auto___24339 = cljs.core.first.call(null, seq__22543_24333__$1);
            a__11935__auto__.push(arg__11936__auto___24339);
            var G__24340 = cljs.core.next.call(null, seq__22543_24333__$1);
            var G__24341 = null;
            var G__24342 = 0;
            var G__24343 = 0;
            seq__22543_24323 = G__24340;
            chunk__22544_24324 = G__24341;
            count__22545_24325 = G__24342;
            i__22546_24326 = G__24343;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.map.apply(null, a__11935__auto__);
  };
  var map = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return map__delegate.call(this, args__11934__auto__);
  };
  map.cljs$lang$maxFixedArity = 0;
  map.cljs$lang$applyTo = function(arglist__24344) {
    var args__11934__auto__ = cljs.core.seq(arglist__24344);
    return map__delegate(args__11934__auto__);
  };
  map.cljs$core$IFn$_invoke$arity$variadic = map__delegate;
  return map;
}();
quiescent.dom.mark = function() {
  var mark__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22551_24345 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22552_24346 = null;
    var count__22553_24347 = 0;
    var i__22554_24348 = 0;
    while (true) {
      if (i__22554_24348 < count__22553_24347) {
        var arg__11936__auto___24349 = cljs.core._nth.call(null, chunk__22552_24346, i__22554_24348);
        a__11935__auto__.push(arg__11936__auto___24349);
        var G__24350 = seq__22551_24345;
        var G__24351 = chunk__22552_24346;
        var G__24352 = count__22553_24347;
        var G__24353 = i__22554_24348 + 1;
        seq__22551_24345 = G__24350;
        chunk__22552_24346 = G__24351;
        count__22553_24347 = G__24352;
        i__22554_24348 = G__24353;
        continue;
      } else {
        var temp__4092__auto___24354 = cljs.core.seq.call(null, seq__22551_24345);
        if (temp__4092__auto___24354) {
          var seq__22551_24355__$1 = temp__4092__auto___24354;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22551_24355__$1)) {
            var c__11077__auto___24356 = cljs.core.chunk_first.call(null, seq__22551_24355__$1);
            var G__24357 = cljs.core.chunk_rest.call(null, seq__22551_24355__$1);
            var G__24358 = c__11077__auto___24356;
            var G__24359 = cljs.core.count.call(null, c__11077__auto___24356);
            var G__24360 = 0;
            seq__22551_24345 = G__24357;
            chunk__22552_24346 = G__24358;
            count__22553_24347 = G__24359;
            i__22554_24348 = G__24360;
            continue;
          } else {
            var arg__11936__auto___24361 = cljs.core.first.call(null, seq__22551_24355__$1);
            a__11935__auto__.push(arg__11936__auto___24361);
            var G__24362 = cljs.core.next.call(null, seq__22551_24355__$1);
            var G__24363 = null;
            var G__24364 = 0;
            var G__24365 = 0;
            seq__22551_24345 = G__24362;
            chunk__22552_24346 = G__24363;
            count__22553_24347 = G__24364;
            i__22554_24348 = G__24365;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.mark.apply(null, a__11935__auto__);
  };
  var mark = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return mark__delegate.call(this, args__11934__auto__);
  };
  mark.cljs$lang$maxFixedArity = 0;
  mark.cljs$lang$applyTo = function(arglist__24366) {
    var args__11934__auto__ = cljs.core.seq(arglist__24366);
    return mark__delegate(args__11934__auto__);
  };
  mark.cljs$core$IFn$_invoke$arity$variadic = mark__delegate;
  return mark;
}();
quiescent.dom.menu = function() {
  var menu__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22559_24367 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22560_24368 = null;
    var count__22561_24369 = 0;
    var i__22562_24370 = 0;
    while (true) {
      if (i__22562_24370 < count__22561_24369) {
        var arg__11936__auto___24371 = cljs.core._nth.call(null, chunk__22560_24368, i__22562_24370);
        a__11935__auto__.push(arg__11936__auto___24371);
        var G__24372 = seq__22559_24367;
        var G__24373 = chunk__22560_24368;
        var G__24374 = count__22561_24369;
        var G__24375 = i__22562_24370 + 1;
        seq__22559_24367 = G__24372;
        chunk__22560_24368 = G__24373;
        count__22561_24369 = G__24374;
        i__22562_24370 = G__24375;
        continue;
      } else {
        var temp__4092__auto___24376 = cljs.core.seq.call(null, seq__22559_24367);
        if (temp__4092__auto___24376) {
          var seq__22559_24377__$1 = temp__4092__auto___24376;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22559_24377__$1)) {
            var c__11077__auto___24378 = cljs.core.chunk_first.call(null, seq__22559_24377__$1);
            var G__24379 = cljs.core.chunk_rest.call(null, seq__22559_24377__$1);
            var G__24380 = c__11077__auto___24378;
            var G__24381 = cljs.core.count.call(null, c__11077__auto___24378);
            var G__24382 = 0;
            seq__22559_24367 = G__24379;
            chunk__22560_24368 = G__24380;
            count__22561_24369 = G__24381;
            i__22562_24370 = G__24382;
            continue;
          } else {
            var arg__11936__auto___24383 = cljs.core.first.call(null, seq__22559_24377__$1);
            a__11935__auto__.push(arg__11936__auto___24383);
            var G__24384 = cljs.core.next.call(null, seq__22559_24377__$1);
            var G__24385 = null;
            var G__24386 = 0;
            var G__24387 = 0;
            seq__22559_24367 = G__24384;
            chunk__22560_24368 = G__24385;
            count__22561_24369 = G__24386;
            i__22562_24370 = G__24387;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.menu.apply(null, a__11935__auto__);
  };
  var menu = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return menu__delegate.call(this, args__11934__auto__);
  };
  menu.cljs$lang$maxFixedArity = 0;
  menu.cljs$lang$applyTo = function(arglist__24388) {
    var args__11934__auto__ = cljs.core.seq(arglist__24388);
    return menu__delegate(args__11934__auto__);
  };
  menu.cljs$core$IFn$_invoke$arity$variadic = menu__delegate;
  return menu;
}();
quiescent.dom.menuitem = function() {
  var menuitem__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22567_24389 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22568_24390 = null;
    var count__22569_24391 = 0;
    var i__22570_24392 = 0;
    while (true) {
      if (i__22570_24392 < count__22569_24391) {
        var arg__11936__auto___24393 = cljs.core._nth.call(null, chunk__22568_24390, i__22570_24392);
        a__11935__auto__.push(arg__11936__auto___24393);
        var G__24394 = seq__22567_24389;
        var G__24395 = chunk__22568_24390;
        var G__24396 = count__22569_24391;
        var G__24397 = i__22570_24392 + 1;
        seq__22567_24389 = G__24394;
        chunk__22568_24390 = G__24395;
        count__22569_24391 = G__24396;
        i__22570_24392 = G__24397;
        continue;
      } else {
        var temp__4092__auto___24398 = cljs.core.seq.call(null, seq__22567_24389);
        if (temp__4092__auto___24398) {
          var seq__22567_24399__$1 = temp__4092__auto___24398;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22567_24399__$1)) {
            var c__11077__auto___24400 = cljs.core.chunk_first.call(null, seq__22567_24399__$1);
            var G__24401 = cljs.core.chunk_rest.call(null, seq__22567_24399__$1);
            var G__24402 = c__11077__auto___24400;
            var G__24403 = cljs.core.count.call(null, c__11077__auto___24400);
            var G__24404 = 0;
            seq__22567_24389 = G__24401;
            chunk__22568_24390 = G__24402;
            count__22569_24391 = G__24403;
            i__22570_24392 = G__24404;
            continue;
          } else {
            var arg__11936__auto___24405 = cljs.core.first.call(null, seq__22567_24399__$1);
            a__11935__auto__.push(arg__11936__auto___24405);
            var G__24406 = cljs.core.next.call(null, seq__22567_24399__$1);
            var G__24407 = null;
            var G__24408 = 0;
            var G__24409 = 0;
            seq__22567_24389 = G__24406;
            chunk__22568_24390 = G__24407;
            count__22569_24391 = G__24408;
            i__22570_24392 = G__24409;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.menuitem.apply(null, a__11935__auto__);
  };
  var menuitem = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return menuitem__delegate.call(this, args__11934__auto__);
  };
  menuitem.cljs$lang$maxFixedArity = 0;
  menuitem.cljs$lang$applyTo = function(arglist__24410) {
    var args__11934__auto__ = cljs.core.seq(arglist__24410);
    return menuitem__delegate(args__11934__auto__);
  };
  menuitem.cljs$core$IFn$_invoke$arity$variadic = menuitem__delegate;
  return menuitem;
}();
quiescent.dom.meta = function() {
  var meta__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22575_24411 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22576_24412 = null;
    var count__22577_24413 = 0;
    var i__22578_24414 = 0;
    while (true) {
      if (i__22578_24414 < count__22577_24413) {
        var arg__11936__auto___24415 = cljs.core._nth.call(null, chunk__22576_24412, i__22578_24414);
        a__11935__auto__.push(arg__11936__auto___24415);
        var G__24416 = seq__22575_24411;
        var G__24417 = chunk__22576_24412;
        var G__24418 = count__22577_24413;
        var G__24419 = i__22578_24414 + 1;
        seq__22575_24411 = G__24416;
        chunk__22576_24412 = G__24417;
        count__22577_24413 = G__24418;
        i__22578_24414 = G__24419;
        continue;
      } else {
        var temp__4092__auto___24420 = cljs.core.seq.call(null, seq__22575_24411);
        if (temp__4092__auto___24420) {
          var seq__22575_24421__$1 = temp__4092__auto___24420;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22575_24421__$1)) {
            var c__11077__auto___24422 = cljs.core.chunk_first.call(null, seq__22575_24421__$1);
            var G__24423 = cljs.core.chunk_rest.call(null, seq__22575_24421__$1);
            var G__24424 = c__11077__auto___24422;
            var G__24425 = cljs.core.count.call(null, c__11077__auto___24422);
            var G__24426 = 0;
            seq__22575_24411 = G__24423;
            chunk__22576_24412 = G__24424;
            count__22577_24413 = G__24425;
            i__22578_24414 = G__24426;
            continue;
          } else {
            var arg__11936__auto___24427 = cljs.core.first.call(null, seq__22575_24421__$1);
            a__11935__auto__.push(arg__11936__auto___24427);
            var G__24428 = cljs.core.next.call(null, seq__22575_24421__$1);
            var G__24429 = null;
            var G__24430 = 0;
            var G__24431 = 0;
            seq__22575_24411 = G__24428;
            chunk__22576_24412 = G__24429;
            count__22577_24413 = G__24430;
            i__22578_24414 = G__24431;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.meta.apply(null, a__11935__auto__);
  };
  var meta = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return meta__delegate.call(this, args__11934__auto__);
  };
  meta.cljs$lang$maxFixedArity = 0;
  meta.cljs$lang$applyTo = function(arglist__24432) {
    var args__11934__auto__ = cljs.core.seq(arglist__24432);
    return meta__delegate(args__11934__auto__);
  };
  meta.cljs$core$IFn$_invoke$arity$variadic = meta__delegate;
  return meta;
}();
quiescent.dom.meter = function() {
  var meter__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22583_24433 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22584_24434 = null;
    var count__22585_24435 = 0;
    var i__22586_24436 = 0;
    while (true) {
      if (i__22586_24436 < count__22585_24435) {
        var arg__11936__auto___24437 = cljs.core._nth.call(null, chunk__22584_24434, i__22586_24436);
        a__11935__auto__.push(arg__11936__auto___24437);
        var G__24438 = seq__22583_24433;
        var G__24439 = chunk__22584_24434;
        var G__24440 = count__22585_24435;
        var G__24441 = i__22586_24436 + 1;
        seq__22583_24433 = G__24438;
        chunk__22584_24434 = G__24439;
        count__22585_24435 = G__24440;
        i__22586_24436 = G__24441;
        continue;
      } else {
        var temp__4092__auto___24442 = cljs.core.seq.call(null, seq__22583_24433);
        if (temp__4092__auto___24442) {
          var seq__22583_24443__$1 = temp__4092__auto___24442;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22583_24443__$1)) {
            var c__11077__auto___24444 = cljs.core.chunk_first.call(null, seq__22583_24443__$1);
            var G__24445 = cljs.core.chunk_rest.call(null, seq__22583_24443__$1);
            var G__24446 = c__11077__auto___24444;
            var G__24447 = cljs.core.count.call(null, c__11077__auto___24444);
            var G__24448 = 0;
            seq__22583_24433 = G__24445;
            chunk__22584_24434 = G__24446;
            count__22585_24435 = G__24447;
            i__22586_24436 = G__24448;
            continue;
          } else {
            var arg__11936__auto___24449 = cljs.core.first.call(null, seq__22583_24443__$1);
            a__11935__auto__.push(arg__11936__auto___24449);
            var G__24450 = cljs.core.next.call(null, seq__22583_24443__$1);
            var G__24451 = null;
            var G__24452 = 0;
            var G__24453 = 0;
            seq__22583_24433 = G__24450;
            chunk__22584_24434 = G__24451;
            count__22585_24435 = G__24452;
            i__22586_24436 = G__24453;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.meter.apply(null, a__11935__auto__);
  };
  var meter = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return meter__delegate.call(this, args__11934__auto__);
  };
  meter.cljs$lang$maxFixedArity = 0;
  meter.cljs$lang$applyTo = function(arglist__24454) {
    var args__11934__auto__ = cljs.core.seq(arglist__24454);
    return meter__delegate(args__11934__auto__);
  };
  meter.cljs$core$IFn$_invoke$arity$variadic = meter__delegate;
  return meter;
}();
quiescent.dom.nav = function() {
  var nav__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22591_24455 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22592_24456 = null;
    var count__22593_24457 = 0;
    var i__22594_24458 = 0;
    while (true) {
      if (i__22594_24458 < count__22593_24457) {
        var arg__11936__auto___24459 = cljs.core._nth.call(null, chunk__22592_24456, i__22594_24458);
        a__11935__auto__.push(arg__11936__auto___24459);
        var G__24460 = seq__22591_24455;
        var G__24461 = chunk__22592_24456;
        var G__24462 = count__22593_24457;
        var G__24463 = i__22594_24458 + 1;
        seq__22591_24455 = G__24460;
        chunk__22592_24456 = G__24461;
        count__22593_24457 = G__24462;
        i__22594_24458 = G__24463;
        continue;
      } else {
        var temp__4092__auto___24464 = cljs.core.seq.call(null, seq__22591_24455);
        if (temp__4092__auto___24464) {
          var seq__22591_24465__$1 = temp__4092__auto___24464;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22591_24465__$1)) {
            var c__11077__auto___24466 = cljs.core.chunk_first.call(null, seq__22591_24465__$1);
            var G__24467 = cljs.core.chunk_rest.call(null, seq__22591_24465__$1);
            var G__24468 = c__11077__auto___24466;
            var G__24469 = cljs.core.count.call(null, c__11077__auto___24466);
            var G__24470 = 0;
            seq__22591_24455 = G__24467;
            chunk__22592_24456 = G__24468;
            count__22593_24457 = G__24469;
            i__22594_24458 = G__24470;
            continue;
          } else {
            var arg__11936__auto___24471 = cljs.core.first.call(null, seq__22591_24465__$1);
            a__11935__auto__.push(arg__11936__auto___24471);
            var G__24472 = cljs.core.next.call(null, seq__22591_24465__$1);
            var G__24473 = null;
            var G__24474 = 0;
            var G__24475 = 0;
            seq__22591_24455 = G__24472;
            chunk__22592_24456 = G__24473;
            count__22593_24457 = G__24474;
            i__22594_24458 = G__24475;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.nav.apply(null, a__11935__auto__);
  };
  var nav = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return nav__delegate.call(this, args__11934__auto__);
  };
  nav.cljs$lang$maxFixedArity = 0;
  nav.cljs$lang$applyTo = function(arglist__24476) {
    var args__11934__auto__ = cljs.core.seq(arglist__24476);
    return nav__delegate(args__11934__auto__);
  };
  nav.cljs$core$IFn$_invoke$arity$variadic = nav__delegate;
  return nav;
}();
quiescent.dom.noscript = function() {
  var noscript__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22599_24477 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22600_24478 = null;
    var count__22601_24479 = 0;
    var i__22602_24480 = 0;
    while (true) {
      if (i__22602_24480 < count__22601_24479) {
        var arg__11936__auto___24481 = cljs.core._nth.call(null, chunk__22600_24478, i__22602_24480);
        a__11935__auto__.push(arg__11936__auto___24481);
        var G__24482 = seq__22599_24477;
        var G__24483 = chunk__22600_24478;
        var G__24484 = count__22601_24479;
        var G__24485 = i__22602_24480 + 1;
        seq__22599_24477 = G__24482;
        chunk__22600_24478 = G__24483;
        count__22601_24479 = G__24484;
        i__22602_24480 = G__24485;
        continue;
      } else {
        var temp__4092__auto___24486 = cljs.core.seq.call(null, seq__22599_24477);
        if (temp__4092__auto___24486) {
          var seq__22599_24487__$1 = temp__4092__auto___24486;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22599_24487__$1)) {
            var c__11077__auto___24488 = cljs.core.chunk_first.call(null, seq__22599_24487__$1);
            var G__24489 = cljs.core.chunk_rest.call(null, seq__22599_24487__$1);
            var G__24490 = c__11077__auto___24488;
            var G__24491 = cljs.core.count.call(null, c__11077__auto___24488);
            var G__24492 = 0;
            seq__22599_24477 = G__24489;
            chunk__22600_24478 = G__24490;
            count__22601_24479 = G__24491;
            i__22602_24480 = G__24492;
            continue;
          } else {
            var arg__11936__auto___24493 = cljs.core.first.call(null, seq__22599_24487__$1);
            a__11935__auto__.push(arg__11936__auto___24493);
            var G__24494 = cljs.core.next.call(null, seq__22599_24487__$1);
            var G__24495 = null;
            var G__24496 = 0;
            var G__24497 = 0;
            seq__22599_24477 = G__24494;
            chunk__22600_24478 = G__24495;
            count__22601_24479 = G__24496;
            i__22602_24480 = G__24497;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.noscript.apply(null, a__11935__auto__);
  };
  var noscript = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return noscript__delegate.call(this, args__11934__auto__);
  };
  noscript.cljs$lang$maxFixedArity = 0;
  noscript.cljs$lang$applyTo = function(arglist__24498) {
    var args__11934__auto__ = cljs.core.seq(arglist__24498);
    return noscript__delegate(args__11934__auto__);
  };
  noscript.cljs$core$IFn$_invoke$arity$variadic = noscript__delegate;
  return noscript;
}();
quiescent.dom.object = function() {
  var object__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22607_24499 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22608_24500 = null;
    var count__22609_24501 = 0;
    var i__22610_24502 = 0;
    while (true) {
      if (i__22610_24502 < count__22609_24501) {
        var arg__11936__auto___24503 = cljs.core._nth.call(null, chunk__22608_24500, i__22610_24502);
        a__11935__auto__.push(arg__11936__auto___24503);
        var G__24504 = seq__22607_24499;
        var G__24505 = chunk__22608_24500;
        var G__24506 = count__22609_24501;
        var G__24507 = i__22610_24502 + 1;
        seq__22607_24499 = G__24504;
        chunk__22608_24500 = G__24505;
        count__22609_24501 = G__24506;
        i__22610_24502 = G__24507;
        continue;
      } else {
        var temp__4092__auto___24508 = cljs.core.seq.call(null, seq__22607_24499);
        if (temp__4092__auto___24508) {
          var seq__22607_24509__$1 = temp__4092__auto___24508;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22607_24509__$1)) {
            var c__11077__auto___24510 = cljs.core.chunk_first.call(null, seq__22607_24509__$1);
            var G__24511 = cljs.core.chunk_rest.call(null, seq__22607_24509__$1);
            var G__24512 = c__11077__auto___24510;
            var G__24513 = cljs.core.count.call(null, c__11077__auto___24510);
            var G__24514 = 0;
            seq__22607_24499 = G__24511;
            chunk__22608_24500 = G__24512;
            count__22609_24501 = G__24513;
            i__22610_24502 = G__24514;
            continue;
          } else {
            var arg__11936__auto___24515 = cljs.core.first.call(null, seq__22607_24509__$1);
            a__11935__auto__.push(arg__11936__auto___24515);
            var G__24516 = cljs.core.next.call(null, seq__22607_24509__$1);
            var G__24517 = null;
            var G__24518 = 0;
            var G__24519 = 0;
            seq__22607_24499 = G__24516;
            chunk__22608_24500 = G__24517;
            count__22609_24501 = G__24518;
            i__22610_24502 = G__24519;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.object.apply(null, a__11935__auto__);
  };
  var object = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return object__delegate.call(this, args__11934__auto__);
  };
  object.cljs$lang$maxFixedArity = 0;
  object.cljs$lang$applyTo = function(arglist__24520) {
    var args__11934__auto__ = cljs.core.seq(arglist__24520);
    return object__delegate(args__11934__auto__);
  };
  object.cljs$core$IFn$_invoke$arity$variadic = object__delegate;
  return object;
}();
quiescent.dom.ol = function() {
  var ol__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22615_24521 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22616_24522 = null;
    var count__22617_24523 = 0;
    var i__22618_24524 = 0;
    while (true) {
      if (i__22618_24524 < count__22617_24523) {
        var arg__11936__auto___24525 = cljs.core._nth.call(null, chunk__22616_24522, i__22618_24524);
        a__11935__auto__.push(arg__11936__auto___24525);
        var G__24526 = seq__22615_24521;
        var G__24527 = chunk__22616_24522;
        var G__24528 = count__22617_24523;
        var G__24529 = i__22618_24524 + 1;
        seq__22615_24521 = G__24526;
        chunk__22616_24522 = G__24527;
        count__22617_24523 = G__24528;
        i__22618_24524 = G__24529;
        continue;
      } else {
        var temp__4092__auto___24530 = cljs.core.seq.call(null, seq__22615_24521);
        if (temp__4092__auto___24530) {
          var seq__22615_24531__$1 = temp__4092__auto___24530;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22615_24531__$1)) {
            var c__11077__auto___24532 = cljs.core.chunk_first.call(null, seq__22615_24531__$1);
            var G__24533 = cljs.core.chunk_rest.call(null, seq__22615_24531__$1);
            var G__24534 = c__11077__auto___24532;
            var G__24535 = cljs.core.count.call(null, c__11077__auto___24532);
            var G__24536 = 0;
            seq__22615_24521 = G__24533;
            chunk__22616_24522 = G__24534;
            count__22617_24523 = G__24535;
            i__22618_24524 = G__24536;
            continue;
          } else {
            var arg__11936__auto___24537 = cljs.core.first.call(null, seq__22615_24531__$1);
            a__11935__auto__.push(arg__11936__auto___24537);
            var G__24538 = cljs.core.next.call(null, seq__22615_24531__$1);
            var G__24539 = null;
            var G__24540 = 0;
            var G__24541 = 0;
            seq__22615_24521 = G__24538;
            chunk__22616_24522 = G__24539;
            count__22617_24523 = G__24540;
            i__22618_24524 = G__24541;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.ol.apply(null, a__11935__auto__);
  };
  var ol = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return ol__delegate.call(this, args__11934__auto__);
  };
  ol.cljs$lang$maxFixedArity = 0;
  ol.cljs$lang$applyTo = function(arglist__24542) {
    var args__11934__auto__ = cljs.core.seq(arglist__24542);
    return ol__delegate(args__11934__auto__);
  };
  ol.cljs$core$IFn$_invoke$arity$variadic = ol__delegate;
  return ol;
}();
quiescent.dom.optgroup = function() {
  var optgroup__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22623_24543 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22624_24544 = null;
    var count__22625_24545 = 0;
    var i__22626_24546 = 0;
    while (true) {
      if (i__22626_24546 < count__22625_24545) {
        var arg__11936__auto___24547 = cljs.core._nth.call(null, chunk__22624_24544, i__22626_24546);
        a__11935__auto__.push(arg__11936__auto___24547);
        var G__24548 = seq__22623_24543;
        var G__24549 = chunk__22624_24544;
        var G__24550 = count__22625_24545;
        var G__24551 = i__22626_24546 + 1;
        seq__22623_24543 = G__24548;
        chunk__22624_24544 = G__24549;
        count__22625_24545 = G__24550;
        i__22626_24546 = G__24551;
        continue;
      } else {
        var temp__4092__auto___24552 = cljs.core.seq.call(null, seq__22623_24543);
        if (temp__4092__auto___24552) {
          var seq__22623_24553__$1 = temp__4092__auto___24552;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22623_24553__$1)) {
            var c__11077__auto___24554 = cljs.core.chunk_first.call(null, seq__22623_24553__$1);
            var G__24555 = cljs.core.chunk_rest.call(null, seq__22623_24553__$1);
            var G__24556 = c__11077__auto___24554;
            var G__24557 = cljs.core.count.call(null, c__11077__auto___24554);
            var G__24558 = 0;
            seq__22623_24543 = G__24555;
            chunk__22624_24544 = G__24556;
            count__22625_24545 = G__24557;
            i__22626_24546 = G__24558;
            continue;
          } else {
            var arg__11936__auto___24559 = cljs.core.first.call(null, seq__22623_24553__$1);
            a__11935__auto__.push(arg__11936__auto___24559);
            var G__24560 = cljs.core.next.call(null, seq__22623_24553__$1);
            var G__24561 = null;
            var G__24562 = 0;
            var G__24563 = 0;
            seq__22623_24543 = G__24560;
            chunk__22624_24544 = G__24561;
            count__22625_24545 = G__24562;
            i__22626_24546 = G__24563;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.optgroup.apply(null, a__11935__auto__);
  };
  var optgroup = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return optgroup__delegate.call(this, args__11934__auto__);
  };
  optgroup.cljs$lang$maxFixedArity = 0;
  optgroup.cljs$lang$applyTo = function(arglist__24564) {
    var args__11934__auto__ = cljs.core.seq(arglist__24564);
    return optgroup__delegate(args__11934__auto__);
  };
  optgroup.cljs$core$IFn$_invoke$arity$variadic = optgroup__delegate;
  return optgroup;
}();
quiescent.dom.option = function() {
  var option__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22631_24565 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22632_24566 = null;
    var count__22633_24567 = 0;
    var i__22634_24568 = 0;
    while (true) {
      if (i__22634_24568 < count__22633_24567) {
        var arg__11936__auto___24569 = cljs.core._nth.call(null, chunk__22632_24566, i__22634_24568);
        a__11935__auto__.push(arg__11936__auto___24569);
        var G__24570 = seq__22631_24565;
        var G__24571 = chunk__22632_24566;
        var G__24572 = count__22633_24567;
        var G__24573 = i__22634_24568 + 1;
        seq__22631_24565 = G__24570;
        chunk__22632_24566 = G__24571;
        count__22633_24567 = G__24572;
        i__22634_24568 = G__24573;
        continue;
      } else {
        var temp__4092__auto___24574 = cljs.core.seq.call(null, seq__22631_24565);
        if (temp__4092__auto___24574) {
          var seq__22631_24575__$1 = temp__4092__auto___24574;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22631_24575__$1)) {
            var c__11077__auto___24576 = cljs.core.chunk_first.call(null, seq__22631_24575__$1);
            var G__24577 = cljs.core.chunk_rest.call(null, seq__22631_24575__$1);
            var G__24578 = c__11077__auto___24576;
            var G__24579 = cljs.core.count.call(null, c__11077__auto___24576);
            var G__24580 = 0;
            seq__22631_24565 = G__24577;
            chunk__22632_24566 = G__24578;
            count__22633_24567 = G__24579;
            i__22634_24568 = G__24580;
            continue;
          } else {
            var arg__11936__auto___24581 = cljs.core.first.call(null, seq__22631_24575__$1);
            a__11935__auto__.push(arg__11936__auto___24581);
            var G__24582 = cljs.core.next.call(null, seq__22631_24575__$1);
            var G__24583 = null;
            var G__24584 = 0;
            var G__24585 = 0;
            seq__22631_24565 = G__24582;
            chunk__22632_24566 = G__24583;
            count__22633_24567 = G__24584;
            i__22634_24568 = G__24585;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.option.apply(null, a__11935__auto__);
  };
  var option = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return option__delegate.call(this, args__11934__auto__);
  };
  option.cljs$lang$maxFixedArity = 0;
  option.cljs$lang$applyTo = function(arglist__24586) {
    var args__11934__auto__ = cljs.core.seq(arglist__24586);
    return option__delegate(args__11934__auto__);
  };
  option.cljs$core$IFn$_invoke$arity$variadic = option__delegate;
  return option;
}();
quiescent.dom.output = function() {
  var output__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22639_24587 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22640_24588 = null;
    var count__22641_24589 = 0;
    var i__22642_24590 = 0;
    while (true) {
      if (i__22642_24590 < count__22641_24589) {
        var arg__11936__auto___24591 = cljs.core._nth.call(null, chunk__22640_24588, i__22642_24590);
        a__11935__auto__.push(arg__11936__auto___24591);
        var G__24592 = seq__22639_24587;
        var G__24593 = chunk__22640_24588;
        var G__24594 = count__22641_24589;
        var G__24595 = i__22642_24590 + 1;
        seq__22639_24587 = G__24592;
        chunk__22640_24588 = G__24593;
        count__22641_24589 = G__24594;
        i__22642_24590 = G__24595;
        continue;
      } else {
        var temp__4092__auto___24596 = cljs.core.seq.call(null, seq__22639_24587);
        if (temp__4092__auto___24596) {
          var seq__22639_24597__$1 = temp__4092__auto___24596;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22639_24597__$1)) {
            var c__11077__auto___24598 = cljs.core.chunk_first.call(null, seq__22639_24597__$1);
            var G__24599 = cljs.core.chunk_rest.call(null, seq__22639_24597__$1);
            var G__24600 = c__11077__auto___24598;
            var G__24601 = cljs.core.count.call(null, c__11077__auto___24598);
            var G__24602 = 0;
            seq__22639_24587 = G__24599;
            chunk__22640_24588 = G__24600;
            count__22641_24589 = G__24601;
            i__22642_24590 = G__24602;
            continue;
          } else {
            var arg__11936__auto___24603 = cljs.core.first.call(null, seq__22639_24597__$1);
            a__11935__auto__.push(arg__11936__auto___24603);
            var G__24604 = cljs.core.next.call(null, seq__22639_24597__$1);
            var G__24605 = null;
            var G__24606 = 0;
            var G__24607 = 0;
            seq__22639_24587 = G__24604;
            chunk__22640_24588 = G__24605;
            count__22641_24589 = G__24606;
            i__22642_24590 = G__24607;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.output.apply(null, a__11935__auto__);
  };
  var output = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return output__delegate.call(this, args__11934__auto__);
  };
  output.cljs$lang$maxFixedArity = 0;
  output.cljs$lang$applyTo = function(arglist__24608) {
    var args__11934__auto__ = cljs.core.seq(arglist__24608);
    return output__delegate(args__11934__auto__);
  };
  output.cljs$core$IFn$_invoke$arity$variadic = output__delegate;
  return output;
}();
quiescent.dom.p = function() {
  var p__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22647_24609 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22648_24610 = null;
    var count__22649_24611 = 0;
    var i__22650_24612 = 0;
    while (true) {
      if (i__22650_24612 < count__22649_24611) {
        var arg__11936__auto___24613 = cljs.core._nth.call(null, chunk__22648_24610, i__22650_24612);
        a__11935__auto__.push(arg__11936__auto___24613);
        var G__24614 = seq__22647_24609;
        var G__24615 = chunk__22648_24610;
        var G__24616 = count__22649_24611;
        var G__24617 = i__22650_24612 + 1;
        seq__22647_24609 = G__24614;
        chunk__22648_24610 = G__24615;
        count__22649_24611 = G__24616;
        i__22650_24612 = G__24617;
        continue;
      } else {
        var temp__4092__auto___24618 = cljs.core.seq.call(null, seq__22647_24609);
        if (temp__4092__auto___24618) {
          var seq__22647_24619__$1 = temp__4092__auto___24618;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22647_24619__$1)) {
            var c__11077__auto___24620 = cljs.core.chunk_first.call(null, seq__22647_24619__$1);
            var G__24621 = cljs.core.chunk_rest.call(null, seq__22647_24619__$1);
            var G__24622 = c__11077__auto___24620;
            var G__24623 = cljs.core.count.call(null, c__11077__auto___24620);
            var G__24624 = 0;
            seq__22647_24609 = G__24621;
            chunk__22648_24610 = G__24622;
            count__22649_24611 = G__24623;
            i__22650_24612 = G__24624;
            continue;
          } else {
            var arg__11936__auto___24625 = cljs.core.first.call(null, seq__22647_24619__$1);
            a__11935__auto__.push(arg__11936__auto___24625);
            var G__24626 = cljs.core.next.call(null, seq__22647_24619__$1);
            var G__24627 = null;
            var G__24628 = 0;
            var G__24629 = 0;
            seq__22647_24609 = G__24626;
            chunk__22648_24610 = G__24627;
            count__22649_24611 = G__24628;
            i__22650_24612 = G__24629;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.p.apply(null, a__11935__auto__);
  };
  var p = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return p__delegate.call(this, args__11934__auto__);
  };
  p.cljs$lang$maxFixedArity = 0;
  p.cljs$lang$applyTo = function(arglist__24630) {
    var args__11934__auto__ = cljs.core.seq(arglist__24630);
    return p__delegate(args__11934__auto__);
  };
  p.cljs$core$IFn$_invoke$arity$variadic = p__delegate;
  return p;
}();
quiescent.dom.param = function() {
  var param__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22655_24631 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22656_24632 = null;
    var count__22657_24633 = 0;
    var i__22658_24634 = 0;
    while (true) {
      if (i__22658_24634 < count__22657_24633) {
        var arg__11936__auto___24635 = cljs.core._nth.call(null, chunk__22656_24632, i__22658_24634);
        a__11935__auto__.push(arg__11936__auto___24635);
        var G__24636 = seq__22655_24631;
        var G__24637 = chunk__22656_24632;
        var G__24638 = count__22657_24633;
        var G__24639 = i__22658_24634 + 1;
        seq__22655_24631 = G__24636;
        chunk__22656_24632 = G__24637;
        count__22657_24633 = G__24638;
        i__22658_24634 = G__24639;
        continue;
      } else {
        var temp__4092__auto___24640 = cljs.core.seq.call(null, seq__22655_24631);
        if (temp__4092__auto___24640) {
          var seq__22655_24641__$1 = temp__4092__auto___24640;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22655_24641__$1)) {
            var c__11077__auto___24642 = cljs.core.chunk_first.call(null, seq__22655_24641__$1);
            var G__24643 = cljs.core.chunk_rest.call(null, seq__22655_24641__$1);
            var G__24644 = c__11077__auto___24642;
            var G__24645 = cljs.core.count.call(null, c__11077__auto___24642);
            var G__24646 = 0;
            seq__22655_24631 = G__24643;
            chunk__22656_24632 = G__24644;
            count__22657_24633 = G__24645;
            i__22658_24634 = G__24646;
            continue;
          } else {
            var arg__11936__auto___24647 = cljs.core.first.call(null, seq__22655_24641__$1);
            a__11935__auto__.push(arg__11936__auto___24647);
            var G__24648 = cljs.core.next.call(null, seq__22655_24641__$1);
            var G__24649 = null;
            var G__24650 = 0;
            var G__24651 = 0;
            seq__22655_24631 = G__24648;
            chunk__22656_24632 = G__24649;
            count__22657_24633 = G__24650;
            i__22658_24634 = G__24651;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.param.apply(null, a__11935__auto__);
  };
  var param = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return param__delegate.call(this, args__11934__auto__);
  };
  param.cljs$lang$maxFixedArity = 0;
  param.cljs$lang$applyTo = function(arglist__24652) {
    var args__11934__auto__ = cljs.core.seq(arglist__24652);
    return param__delegate(args__11934__auto__);
  };
  param.cljs$core$IFn$_invoke$arity$variadic = param__delegate;
  return param;
}();
quiescent.dom.pre = function() {
  var pre__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22663_24653 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22664_24654 = null;
    var count__22665_24655 = 0;
    var i__22666_24656 = 0;
    while (true) {
      if (i__22666_24656 < count__22665_24655) {
        var arg__11936__auto___24657 = cljs.core._nth.call(null, chunk__22664_24654, i__22666_24656);
        a__11935__auto__.push(arg__11936__auto___24657);
        var G__24658 = seq__22663_24653;
        var G__24659 = chunk__22664_24654;
        var G__24660 = count__22665_24655;
        var G__24661 = i__22666_24656 + 1;
        seq__22663_24653 = G__24658;
        chunk__22664_24654 = G__24659;
        count__22665_24655 = G__24660;
        i__22666_24656 = G__24661;
        continue;
      } else {
        var temp__4092__auto___24662 = cljs.core.seq.call(null, seq__22663_24653);
        if (temp__4092__auto___24662) {
          var seq__22663_24663__$1 = temp__4092__auto___24662;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22663_24663__$1)) {
            var c__11077__auto___24664 = cljs.core.chunk_first.call(null, seq__22663_24663__$1);
            var G__24665 = cljs.core.chunk_rest.call(null, seq__22663_24663__$1);
            var G__24666 = c__11077__auto___24664;
            var G__24667 = cljs.core.count.call(null, c__11077__auto___24664);
            var G__24668 = 0;
            seq__22663_24653 = G__24665;
            chunk__22664_24654 = G__24666;
            count__22665_24655 = G__24667;
            i__22666_24656 = G__24668;
            continue;
          } else {
            var arg__11936__auto___24669 = cljs.core.first.call(null, seq__22663_24663__$1);
            a__11935__auto__.push(arg__11936__auto___24669);
            var G__24670 = cljs.core.next.call(null, seq__22663_24663__$1);
            var G__24671 = null;
            var G__24672 = 0;
            var G__24673 = 0;
            seq__22663_24653 = G__24670;
            chunk__22664_24654 = G__24671;
            count__22665_24655 = G__24672;
            i__22666_24656 = G__24673;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.pre.apply(null, a__11935__auto__);
  };
  var pre = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pre__delegate.call(this, args__11934__auto__);
  };
  pre.cljs$lang$maxFixedArity = 0;
  pre.cljs$lang$applyTo = function(arglist__24674) {
    var args__11934__auto__ = cljs.core.seq(arglist__24674);
    return pre__delegate(args__11934__auto__);
  };
  pre.cljs$core$IFn$_invoke$arity$variadic = pre__delegate;
  return pre;
}();
quiescent.dom.progress = function() {
  var progress__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22671_24675 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22672_24676 = null;
    var count__22673_24677 = 0;
    var i__22674_24678 = 0;
    while (true) {
      if (i__22674_24678 < count__22673_24677) {
        var arg__11936__auto___24679 = cljs.core._nth.call(null, chunk__22672_24676, i__22674_24678);
        a__11935__auto__.push(arg__11936__auto___24679);
        var G__24680 = seq__22671_24675;
        var G__24681 = chunk__22672_24676;
        var G__24682 = count__22673_24677;
        var G__24683 = i__22674_24678 + 1;
        seq__22671_24675 = G__24680;
        chunk__22672_24676 = G__24681;
        count__22673_24677 = G__24682;
        i__22674_24678 = G__24683;
        continue;
      } else {
        var temp__4092__auto___24684 = cljs.core.seq.call(null, seq__22671_24675);
        if (temp__4092__auto___24684) {
          var seq__22671_24685__$1 = temp__4092__auto___24684;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22671_24685__$1)) {
            var c__11077__auto___24686 = cljs.core.chunk_first.call(null, seq__22671_24685__$1);
            var G__24687 = cljs.core.chunk_rest.call(null, seq__22671_24685__$1);
            var G__24688 = c__11077__auto___24686;
            var G__24689 = cljs.core.count.call(null, c__11077__auto___24686);
            var G__24690 = 0;
            seq__22671_24675 = G__24687;
            chunk__22672_24676 = G__24688;
            count__22673_24677 = G__24689;
            i__22674_24678 = G__24690;
            continue;
          } else {
            var arg__11936__auto___24691 = cljs.core.first.call(null, seq__22671_24685__$1);
            a__11935__auto__.push(arg__11936__auto___24691);
            var G__24692 = cljs.core.next.call(null, seq__22671_24685__$1);
            var G__24693 = null;
            var G__24694 = 0;
            var G__24695 = 0;
            seq__22671_24675 = G__24692;
            chunk__22672_24676 = G__24693;
            count__22673_24677 = G__24694;
            i__22674_24678 = G__24695;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.progress.apply(null, a__11935__auto__);
  };
  var progress = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return progress__delegate.call(this, args__11934__auto__);
  };
  progress.cljs$lang$maxFixedArity = 0;
  progress.cljs$lang$applyTo = function(arglist__24696) {
    var args__11934__auto__ = cljs.core.seq(arglist__24696);
    return progress__delegate(args__11934__auto__);
  };
  progress.cljs$core$IFn$_invoke$arity$variadic = progress__delegate;
  return progress;
}();
quiescent.dom.q = function() {
  var q__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22679_24697 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22680_24698 = null;
    var count__22681_24699 = 0;
    var i__22682_24700 = 0;
    while (true) {
      if (i__22682_24700 < count__22681_24699) {
        var arg__11936__auto___24701 = cljs.core._nth.call(null, chunk__22680_24698, i__22682_24700);
        a__11935__auto__.push(arg__11936__auto___24701);
        var G__24702 = seq__22679_24697;
        var G__24703 = chunk__22680_24698;
        var G__24704 = count__22681_24699;
        var G__24705 = i__22682_24700 + 1;
        seq__22679_24697 = G__24702;
        chunk__22680_24698 = G__24703;
        count__22681_24699 = G__24704;
        i__22682_24700 = G__24705;
        continue;
      } else {
        var temp__4092__auto___24706 = cljs.core.seq.call(null, seq__22679_24697);
        if (temp__4092__auto___24706) {
          var seq__22679_24707__$1 = temp__4092__auto___24706;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22679_24707__$1)) {
            var c__11077__auto___24708 = cljs.core.chunk_first.call(null, seq__22679_24707__$1);
            var G__24709 = cljs.core.chunk_rest.call(null, seq__22679_24707__$1);
            var G__24710 = c__11077__auto___24708;
            var G__24711 = cljs.core.count.call(null, c__11077__auto___24708);
            var G__24712 = 0;
            seq__22679_24697 = G__24709;
            chunk__22680_24698 = G__24710;
            count__22681_24699 = G__24711;
            i__22682_24700 = G__24712;
            continue;
          } else {
            var arg__11936__auto___24713 = cljs.core.first.call(null, seq__22679_24707__$1);
            a__11935__auto__.push(arg__11936__auto___24713);
            var G__24714 = cljs.core.next.call(null, seq__22679_24707__$1);
            var G__24715 = null;
            var G__24716 = 0;
            var G__24717 = 0;
            seq__22679_24697 = G__24714;
            chunk__22680_24698 = G__24715;
            count__22681_24699 = G__24716;
            i__22682_24700 = G__24717;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.q.apply(null, a__11935__auto__);
  };
  var q = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return q__delegate.call(this, args__11934__auto__);
  };
  q.cljs$lang$maxFixedArity = 0;
  q.cljs$lang$applyTo = function(arglist__24718) {
    var args__11934__auto__ = cljs.core.seq(arglist__24718);
    return q__delegate(args__11934__auto__);
  };
  q.cljs$core$IFn$_invoke$arity$variadic = q__delegate;
  return q;
}();
quiescent.dom.rp = function() {
  var rp__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22687_24719 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22688_24720 = null;
    var count__22689_24721 = 0;
    var i__22690_24722 = 0;
    while (true) {
      if (i__22690_24722 < count__22689_24721) {
        var arg__11936__auto___24723 = cljs.core._nth.call(null, chunk__22688_24720, i__22690_24722);
        a__11935__auto__.push(arg__11936__auto___24723);
        var G__24724 = seq__22687_24719;
        var G__24725 = chunk__22688_24720;
        var G__24726 = count__22689_24721;
        var G__24727 = i__22690_24722 + 1;
        seq__22687_24719 = G__24724;
        chunk__22688_24720 = G__24725;
        count__22689_24721 = G__24726;
        i__22690_24722 = G__24727;
        continue;
      } else {
        var temp__4092__auto___24728 = cljs.core.seq.call(null, seq__22687_24719);
        if (temp__4092__auto___24728) {
          var seq__22687_24729__$1 = temp__4092__auto___24728;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22687_24729__$1)) {
            var c__11077__auto___24730 = cljs.core.chunk_first.call(null, seq__22687_24729__$1);
            var G__24731 = cljs.core.chunk_rest.call(null, seq__22687_24729__$1);
            var G__24732 = c__11077__auto___24730;
            var G__24733 = cljs.core.count.call(null, c__11077__auto___24730);
            var G__24734 = 0;
            seq__22687_24719 = G__24731;
            chunk__22688_24720 = G__24732;
            count__22689_24721 = G__24733;
            i__22690_24722 = G__24734;
            continue;
          } else {
            var arg__11936__auto___24735 = cljs.core.first.call(null, seq__22687_24729__$1);
            a__11935__auto__.push(arg__11936__auto___24735);
            var G__24736 = cljs.core.next.call(null, seq__22687_24729__$1);
            var G__24737 = null;
            var G__24738 = 0;
            var G__24739 = 0;
            seq__22687_24719 = G__24736;
            chunk__22688_24720 = G__24737;
            count__22689_24721 = G__24738;
            i__22690_24722 = G__24739;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.rp.apply(null, a__11935__auto__);
  };
  var rp = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return rp__delegate.call(this, args__11934__auto__);
  };
  rp.cljs$lang$maxFixedArity = 0;
  rp.cljs$lang$applyTo = function(arglist__24740) {
    var args__11934__auto__ = cljs.core.seq(arglist__24740);
    return rp__delegate(args__11934__auto__);
  };
  rp.cljs$core$IFn$_invoke$arity$variadic = rp__delegate;
  return rp;
}();
quiescent.dom.rt = function() {
  var rt__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22695_24741 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22696_24742 = null;
    var count__22697_24743 = 0;
    var i__22698_24744 = 0;
    while (true) {
      if (i__22698_24744 < count__22697_24743) {
        var arg__11936__auto___24745 = cljs.core._nth.call(null, chunk__22696_24742, i__22698_24744);
        a__11935__auto__.push(arg__11936__auto___24745);
        var G__24746 = seq__22695_24741;
        var G__24747 = chunk__22696_24742;
        var G__24748 = count__22697_24743;
        var G__24749 = i__22698_24744 + 1;
        seq__22695_24741 = G__24746;
        chunk__22696_24742 = G__24747;
        count__22697_24743 = G__24748;
        i__22698_24744 = G__24749;
        continue;
      } else {
        var temp__4092__auto___24750 = cljs.core.seq.call(null, seq__22695_24741);
        if (temp__4092__auto___24750) {
          var seq__22695_24751__$1 = temp__4092__auto___24750;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22695_24751__$1)) {
            var c__11077__auto___24752 = cljs.core.chunk_first.call(null, seq__22695_24751__$1);
            var G__24753 = cljs.core.chunk_rest.call(null, seq__22695_24751__$1);
            var G__24754 = c__11077__auto___24752;
            var G__24755 = cljs.core.count.call(null, c__11077__auto___24752);
            var G__24756 = 0;
            seq__22695_24741 = G__24753;
            chunk__22696_24742 = G__24754;
            count__22697_24743 = G__24755;
            i__22698_24744 = G__24756;
            continue;
          } else {
            var arg__11936__auto___24757 = cljs.core.first.call(null, seq__22695_24751__$1);
            a__11935__auto__.push(arg__11936__auto___24757);
            var G__24758 = cljs.core.next.call(null, seq__22695_24751__$1);
            var G__24759 = null;
            var G__24760 = 0;
            var G__24761 = 0;
            seq__22695_24741 = G__24758;
            chunk__22696_24742 = G__24759;
            count__22697_24743 = G__24760;
            i__22698_24744 = G__24761;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.rt.apply(null, a__11935__auto__);
  };
  var rt = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return rt__delegate.call(this, args__11934__auto__);
  };
  rt.cljs$lang$maxFixedArity = 0;
  rt.cljs$lang$applyTo = function(arglist__24762) {
    var args__11934__auto__ = cljs.core.seq(arglist__24762);
    return rt__delegate(args__11934__auto__);
  };
  rt.cljs$core$IFn$_invoke$arity$variadic = rt__delegate;
  return rt;
}();
quiescent.dom.ruby = function() {
  var ruby__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22703_24763 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22704_24764 = null;
    var count__22705_24765 = 0;
    var i__22706_24766 = 0;
    while (true) {
      if (i__22706_24766 < count__22705_24765) {
        var arg__11936__auto___24767 = cljs.core._nth.call(null, chunk__22704_24764, i__22706_24766);
        a__11935__auto__.push(arg__11936__auto___24767);
        var G__24768 = seq__22703_24763;
        var G__24769 = chunk__22704_24764;
        var G__24770 = count__22705_24765;
        var G__24771 = i__22706_24766 + 1;
        seq__22703_24763 = G__24768;
        chunk__22704_24764 = G__24769;
        count__22705_24765 = G__24770;
        i__22706_24766 = G__24771;
        continue;
      } else {
        var temp__4092__auto___24772 = cljs.core.seq.call(null, seq__22703_24763);
        if (temp__4092__auto___24772) {
          var seq__22703_24773__$1 = temp__4092__auto___24772;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22703_24773__$1)) {
            var c__11077__auto___24774 = cljs.core.chunk_first.call(null, seq__22703_24773__$1);
            var G__24775 = cljs.core.chunk_rest.call(null, seq__22703_24773__$1);
            var G__24776 = c__11077__auto___24774;
            var G__24777 = cljs.core.count.call(null, c__11077__auto___24774);
            var G__24778 = 0;
            seq__22703_24763 = G__24775;
            chunk__22704_24764 = G__24776;
            count__22705_24765 = G__24777;
            i__22706_24766 = G__24778;
            continue;
          } else {
            var arg__11936__auto___24779 = cljs.core.first.call(null, seq__22703_24773__$1);
            a__11935__auto__.push(arg__11936__auto___24779);
            var G__24780 = cljs.core.next.call(null, seq__22703_24773__$1);
            var G__24781 = null;
            var G__24782 = 0;
            var G__24783 = 0;
            seq__22703_24763 = G__24780;
            chunk__22704_24764 = G__24781;
            count__22705_24765 = G__24782;
            i__22706_24766 = G__24783;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.ruby.apply(null, a__11935__auto__);
  };
  var ruby = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return ruby__delegate.call(this, args__11934__auto__);
  };
  ruby.cljs$lang$maxFixedArity = 0;
  ruby.cljs$lang$applyTo = function(arglist__24784) {
    var args__11934__auto__ = cljs.core.seq(arglist__24784);
    return ruby__delegate(args__11934__auto__);
  };
  ruby.cljs$core$IFn$_invoke$arity$variadic = ruby__delegate;
  return ruby;
}();
quiescent.dom.s = function() {
  var s__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22711_24785 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22712_24786 = null;
    var count__22713_24787 = 0;
    var i__22714_24788 = 0;
    while (true) {
      if (i__22714_24788 < count__22713_24787) {
        var arg__11936__auto___24789 = cljs.core._nth.call(null, chunk__22712_24786, i__22714_24788);
        a__11935__auto__.push(arg__11936__auto___24789);
        var G__24790 = seq__22711_24785;
        var G__24791 = chunk__22712_24786;
        var G__24792 = count__22713_24787;
        var G__24793 = i__22714_24788 + 1;
        seq__22711_24785 = G__24790;
        chunk__22712_24786 = G__24791;
        count__22713_24787 = G__24792;
        i__22714_24788 = G__24793;
        continue;
      } else {
        var temp__4092__auto___24794 = cljs.core.seq.call(null, seq__22711_24785);
        if (temp__4092__auto___24794) {
          var seq__22711_24795__$1 = temp__4092__auto___24794;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22711_24795__$1)) {
            var c__11077__auto___24796 = cljs.core.chunk_first.call(null, seq__22711_24795__$1);
            var G__24797 = cljs.core.chunk_rest.call(null, seq__22711_24795__$1);
            var G__24798 = c__11077__auto___24796;
            var G__24799 = cljs.core.count.call(null, c__11077__auto___24796);
            var G__24800 = 0;
            seq__22711_24785 = G__24797;
            chunk__22712_24786 = G__24798;
            count__22713_24787 = G__24799;
            i__22714_24788 = G__24800;
            continue;
          } else {
            var arg__11936__auto___24801 = cljs.core.first.call(null, seq__22711_24795__$1);
            a__11935__auto__.push(arg__11936__auto___24801);
            var G__24802 = cljs.core.next.call(null, seq__22711_24795__$1);
            var G__24803 = null;
            var G__24804 = 0;
            var G__24805 = 0;
            seq__22711_24785 = G__24802;
            chunk__22712_24786 = G__24803;
            count__22713_24787 = G__24804;
            i__22714_24788 = G__24805;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.s.apply(null, a__11935__auto__);
  };
  var s = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return s__delegate.call(this, args__11934__auto__);
  };
  s.cljs$lang$maxFixedArity = 0;
  s.cljs$lang$applyTo = function(arglist__24806) {
    var args__11934__auto__ = cljs.core.seq(arglist__24806);
    return s__delegate(args__11934__auto__);
  };
  s.cljs$core$IFn$_invoke$arity$variadic = s__delegate;
  return s;
}();
quiescent.dom.samp = function() {
  var samp__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22719_24807 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22720_24808 = null;
    var count__22721_24809 = 0;
    var i__22722_24810 = 0;
    while (true) {
      if (i__22722_24810 < count__22721_24809) {
        var arg__11936__auto___24811 = cljs.core._nth.call(null, chunk__22720_24808, i__22722_24810);
        a__11935__auto__.push(arg__11936__auto___24811);
        var G__24812 = seq__22719_24807;
        var G__24813 = chunk__22720_24808;
        var G__24814 = count__22721_24809;
        var G__24815 = i__22722_24810 + 1;
        seq__22719_24807 = G__24812;
        chunk__22720_24808 = G__24813;
        count__22721_24809 = G__24814;
        i__22722_24810 = G__24815;
        continue;
      } else {
        var temp__4092__auto___24816 = cljs.core.seq.call(null, seq__22719_24807);
        if (temp__4092__auto___24816) {
          var seq__22719_24817__$1 = temp__4092__auto___24816;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22719_24817__$1)) {
            var c__11077__auto___24818 = cljs.core.chunk_first.call(null, seq__22719_24817__$1);
            var G__24819 = cljs.core.chunk_rest.call(null, seq__22719_24817__$1);
            var G__24820 = c__11077__auto___24818;
            var G__24821 = cljs.core.count.call(null, c__11077__auto___24818);
            var G__24822 = 0;
            seq__22719_24807 = G__24819;
            chunk__22720_24808 = G__24820;
            count__22721_24809 = G__24821;
            i__22722_24810 = G__24822;
            continue;
          } else {
            var arg__11936__auto___24823 = cljs.core.first.call(null, seq__22719_24817__$1);
            a__11935__auto__.push(arg__11936__auto___24823);
            var G__24824 = cljs.core.next.call(null, seq__22719_24817__$1);
            var G__24825 = null;
            var G__24826 = 0;
            var G__24827 = 0;
            seq__22719_24807 = G__24824;
            chunk__22720_24808 = G__24825;
            count__22721_24809 = G__24826;
            i__22722_24810 = G__24827;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.samp.apply(null, a__11935__auto__);
  };
  var samp = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return samp__delegate.call(this, args__11934__auto__);
  };
  samp.cljs$lang$maxFixedArity = 0;
  samp.cljs$lang$applyTo = function(arglist__24828) {
    var args__11934__auto__ = cljs.core.seq(arglist__24828);
    return samp__delegate(args__11934__auto__);
  };
  samp.cljs$core$IFn$_invoke$arity$variadic = samp__delegate;
  return samp;
}();
quiescent.dom.script = function() {
  var script__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22727_24829 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22728_24830 = null;
    var count__22729_24831 = 0;
    var i__22730_24832 = 0;
    while (true) {
      if (i__22730_24832 < count__22729_24831) {
        var arg__11936__auto___24833 = cljs.core._nth.call(null, chunk__22728_24830, i__22730_24832);
        a__11935__auto__.push(arg__11936__auto___24833);
        var G__24834 = seq__22727_24829;
        var G__24835 = chunk__22728_24830;
        var G__24836 = count__22729_24831;
        var G__24837 = i__22730_24832 + 1;
        seq__22727_24829 = G__24834;
        chunk__22728_24830 = G__24835;
        count__22729_24831 = G__24836;
        i__22730_24832 = G__24837;
        continue;
      } else {
        var temp__4092__auto___24838 = cljs.core.seq.call(null, seq__22727_24829);
        if (temp__4092__auto___24838) {
          var seq__22727_24839__$1 = temp__4092__auto___24838;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22727_24839__$1)) {
            var c__11077__auto___24840 = cljs.core.chunk_first.call(null, seq__22727_24839__$1);
            var G__24841 = cljs.core.chunk_rest.call(null, seq__22727_24839__$1);
            var G__24842 = c__11077__auto___24840;
            var G__24843 = cljs.core.count.call(null, c__11077__auto___24840);
            var G__24844 = 0;
            seq__22727_24829 = G__24841;
            chunk__22728_24830 = G__24842;
            count__22729_24831 = G__24843;
            i__22730_24832 = G__24844;
            continue;
          } else {
            var arg__11936__auto___24845 = cljs.core.first.call(null, seq__22727_24839__$1);
            a__11935__auto__.push(arg__11936__auto___24845);
            var G__24846 = cljs.core.next.call(null, seq__22727_24839__$1);
            var G__24847 = null;
            var G__24848 = 0;
            var G__24849 = 0;
            seq__22727_24829 = G__24846;
            chunk__22728_24830 = G__24847;
            count__22729_24831 = G__24848;
            i__22730_24832 = G__24849;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.script.apply(null, a__11935__auto__);
  };
  var script = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return script__delegate.call(this, args__11934__auto__);
  };
  script.cljs$lang$maxFixedArity = 0;
  script.cljs$lang$applyTo = function(arglist__24850) {
    var args__11934__auto__ = cljs.core.seq(arglist__24850);
    return script__delegate(args__11934__auto__);
  };
  script.cljs$core$IFn$_invoke$arity$variadic = script__delegate;
  return script;
}();
quiescent.dom.section = function() {
  var section__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22735_24851 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22736_24852 = null;
    var count__22737_24853 = 0;
    var i__22738_24854 = 0;
    while (true) {
      if (i__22738_24854 < count__22737_24853) {
        var arg__11936__auto___24855 = cljs.core._nth.call(null, chunk__22736_24852, i__22738_24854);
        a__11935__auto__.push(arg__11936__auto___24855);
        var G__24856 = seq__22735_24851;
        var G__24857 = chunk__22736_24852;
        var G__24858 = count__22737_24853;
        var G__24859 = i__22738_24854 + 1;
        seq__22735_24851 = G__24856;
        chunk__22736_24852 = G__24857;
        count__22737_24853 = G__24858;
        i__22738_24854 = G__24859;
        continue;
      } else {
        var temp__4092__auto___24860 = cljs.core.seq.call(null, seq__22735_24851);
        if (temp__4092__auto___24860) {
          var seq__22735_24861__$1 = temp__4092__auto___24860;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22735_24861__$1)) {
            var c__11077__auto___24862 = cljs.core.chunk_first.call(null, seq__22735_24861__$1);
            var G__24863 = cljs.core.chunk_rest.call(null, seq__22735_24861__$1);
            var G__24864 = c__11077__auto___24862;
            var G__24865 = cljs.core.count.call(null, c__11077__auto___24862);
            var G__24866 = 0;
            seq__22735_24851 = G__24863;
            chunk__22736_24852 = G__24864;
            count__22737_24853 = G__24865;
            i__22738_24854 = G__24866;
            continue;
          } else {
            var arg__11936__auto___24867 = cljs.core.first.call(null, seq__22735_24861__$1);
            a__11935__auto__.push(arg__11936__auto___24867);
            var G__24868 = cljs.core.next.call(null, seq__22735_24861__$1);
            var G__24869 = null;
            var G__24870 = 0;
            var G__24871 = 0;
            seq__22735_24851 = G__24868;
            chunk__22736_24852 = G__24869;
            count__22737_24853 = G__24870;
            i__22738_24854 = G__24871;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.section.apply(null, a__11935__auto__);
  };
  var section = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return section__delegate.call(this, args__11934__auto__);
  };
  section.cljs$lang$maxFixedArity = 0;
  section.cljs$lang$applyTo = function(arglist__24872) {
    var args__11934__auto__ = cljs.core.seq(arglist__24872);
    return section__delegate(args__11934__auto__);
  };
  section.cljs$core$IFn$_invoke$arity$variadic = section__delegate;
  return section;
}();
quiescent.dom.select = function() {
  var select__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22743_24873 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22744_24874 = null;
    var count__22745_24875 = 0;
    var i__22746_24876 = 0;
    while (true) {
      if (i__22746_24876 < count__22745_24875) {
        var arg__11936__auto___24877 = cljs.core._nth.call(null, chunk__22744_24874, i__22746_24876);
        a__11935__auto__.push(arg__11936__auto___24877);
        var G__24878 = seq__22743_24873;
        var G__24879 = chunk__22744_24874;
        var G__24880 = count__22745_24875;
        var G__24881 = i__22746_24876 + 1;
        seq__22743_24873 = G__24878;
        chunk__22744_24874 = G__24879;
        count__22745_24875 = G__24880;
        i__22746_24876 = G__24881;
        continue;
      } else {
        var temp__4092__auto___24882 = cljs.core.seq.call(null, seq__22743_24873);
        if (temp__4092__auto___24882) {
          var seq__22743_24883__$1 = temp__4092__auto___24882;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22743_24883__$1)) {
            var c__11077__auto___24884 = cljs.core.chunk_first.call(null, seq__22743_24883__$1);
            var G__24885 = cljs.core.chunk_rest.call(null, seq__22743_24883__$1);
            var G__24886 = c__11077__auto___24884;
            var G__24887 = cljs.core.count.call(null, c__11077__auto___24884);
            var G__24888 = 0;
            seq__22743_24873 = G__24885;
            chunk__22744_24874 = G__24886;
            count__22745_24875 = G__24887;
            i__22746_24876 = G__24888;
            continue;
          } else {
            var arg__11936__auto___24889 = cljs.core.first.call(null, seq__22743_24883__$1);
            a__11935__auto__.push(arg__11936__auto___24889);
            var G__24890 = cljs.core.next.call(null, seq__22743_24883__$1);
            var G__24891 = null;
            var G__24892 = 0;
            var G__24893 = 0;
            seq__22743_24873 = G__24890;
            chunk__22744_24874 = G__24891;
            count__22745_24875 = G__24892;
            i__22746_24876 = G__24893;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.select.apply(null, a__11935__auto__);
  };
  var select = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return select__delegate.call(this, args__11934__auto__);
  };
  select.cljs$lang$maxFixedArity = 0;
  select.cljs$lang$applyTo = function(arglist__24894) {
    var args__11934__auto__ = cljs.core.seq(arglist__24894);
    return select__delegate(args__11934__auto__);
  };
  select.cljs$core$IFn$_invoke$arity$variadic = select__delegate;
  return select;
}();
quiescent.dom.small = function() {
  var small__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22751_24895 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22752_24896 = null;
    var count__22753_24897 = 0;
    var i__22754_24898 = 0;
    while (true) {
      if (i__22754_24898 < count__22753_24897) {
        var arg__11936__auto___24899 = cljs.core._nth.call(null, chunk__22752_24896, i__22754_24898);
        a__11935__auto__.push(arg__11936__auto___24899);
        var G__24900 = seq__22751_24895;
        var G__24901 = chunk__22752_24896;
        var G__24902 = count__22753_24897;
        var G__24903 = i__22754_24898 + 1;
        seq__22751_24895 = G__24900;
        chunk__22752_24896 = G__24901;
        count__22753_24897 = G__24902;
        i__22754_24898 = G__24903;
        continue;
      } else {
        var temp__4092__auto___24904 = cljs.core.seq.call(null, seq__22751_24895);
        if (temp__4092__auto___24904) {
          var seq__22751_24905__$1 = temp__4092__auto___24904;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22751_24905__$1)) {
            var c__11077__auto___24906 = cljs.core.chunk_first.call(null, seq__22751_24905__$1);
            var G__24907 = cljs.core.chunk_rest.call(null, seq__22751_24905__$1);
            var G__24908 = c__11077__auto___24906;
            var G__24909 = cljs.core.count.call(null, c__11077__auto___24906);
            var G__24910 = 0;
            seq__22751_24895 = G__24907;
            chunk__22752_24896 = G__24908;
            count__22753_24897 = G__24909;
            i__22754_24898 = G__24910;
            continue;
          } else {
            var arg__11936__auto___24911 = cljs.core.first.call(null, seq__22751_24905__$1);
            a__11935__auto__.push(arg__11936__auto___24911);
            var G__24912 = cljs.core.next.call(null, seq__22751_24905__$1);
            var G__24913 = null;
            var G__24914 = 0;
            var G__24915 = 0;
            seq__22751_24895 = G__24912;
            chunk__22752_24896 = G__24913;
            count__22753_24897 = G__24914;
            i__22754_24898 = G__24915;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.small.apply(null, a__11935__auto__);
  };
  var small = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return small__delegate.call(this, args__11934__auto__);
  };
  small.cljs$lang$maxFixedArity = 0;
  small.cljs$lang$applyTo = function(arglist__24916) {
    var args__11934__auto__ = cljs.core.seq(arglist__24916);
    return small__delegate(args__11934__auto__);
  };
  small.cljs$core$IFn$_invoke$arity$variadic = small__delegate;
  return small;
}();
quiescent.dom.source = function() {
  var source__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22759_24917 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22760_24918 = null;
    var count__22761_24919 = 0;
    var i__22762_24920 = 0;
    while (true) {
      if (i__22762_24920 < count__22761_24919) {
        var arg__11936__auto___24921 = cljs.core._nth.call(null, chunk__22760_24918, i__22762_24920);
        a__11935__auto__.push(arg__11936__auto___24921);
        var G__24922 = seq__22759_24917;
        var G__24923 = chunk__22760_24918;
        var G__24924 = count__22761_24919;
        var G__24925 = i__22762_24920 + 1;
        seq__22759_24917 = G__24922;
        chunk__22760_24918 = G__24923;
        count__22761_24919 = G__24924;
        i__22762_24920 = G__24925;
        continue;
      } else {
        var temp__4092__auto___24926 = cljs.core.seq.call(null, seq__22759_24917);
        if (temp__4092__auto___24926) {
          var seq__22759_24927__$1 = temp__4092__auto___24926;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22759_24927__$1)) {
            var c__11077__auto___24928 = cljs.core.chunk_first.call(null, seq__22759_24927__$1);
            var G__24929 = cljs.core.chunk_rest.call(null, seq__22759_24927__$1);
            var G__24930 = c__11077__auto___24928;
            var G__24931 = cljs.core.count.call(null, c__11077__auto___24928);
            var G__24932 = 0;
            seq__22759_24917 = G__24929;
            chunk__22760_24918 = G__24930;
            count__22761_24919 = G__24931;
            i__22762_24920 = G__24932;
            continue;
          } else {
            var arg__11936__auto___24933 = cljs.core.first.call(null, seq__22759_24927__$1);
            a__11935__auto__.push(arg__11936__auto___24933);
            var G__24934 = cljs.core.next.call(null, seq__22759_24927__$1);
            var G__24935 = null;
            var G__24936 = 0;
            var G__24937 = 0;
            seq__22759_24917 = G__24934;
            chunk__22760_24918 = G__24935;
            count__22761_24919 = G__24936;
            i__22762_24920 = G__24937;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.source.apply(null, a__11935__auto__);
  };
  var source = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return source__delegate.call(this, args__11934__auto__);
  };
  source.cljs$lang$maxFixedArity = 0;
  source.cljs$lang$applyTo = function(arglist__24938) {
    var args__11934__auto__ = cljs.core.seq(arglist__24938);
    return source__delegate(args__11934__auto__);
  };
  source.cljs$core$IFn$_invoke$arity$variadic = source__delegate;
  return source;
}();
quiescent.dom.span = function() {
  var span__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22767_24939 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22768_24940 = null;
    var count__22769_24941 = 0;
    var i__22770_24942 = 0;
    while (true) {
      if (i__22770_24942 < count__22769_24941) {
        var arg__11936__auto___24943 = cljs.core._nth.call(null, chunk__22768_24940, i__22770_24942);
        a__11935__auto__.push(arg__11936__auto___24943);
        var G__24944 = seq__22767_24939;
        var G__24945 = chunk__22768_24940;
        var G__24946 = count__22769_24941;
        var G__24947 = i__22770_24942 + 1;
        seq__22767_24939 = G__24944;
        chunk__22768_24940 = G__24945;
        count__22769_24941 = G__24946;
        i__22770_24942 = G__24947;
        continue;
      } else {
        var temp__4092__auto___24948 = cljs.core.seq.call(null, seq__22767_24939);
        if (temp__4092__auto___24948) {
          var seq__22767_24949__$1 = temp__4092__auto___24948;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22767_24949__$1)) {
            var c__11077__auto___24950 = cljs.core.chunk_first.call(null, seq__22767_24949__$1);
            var G__24951 = cljs.core.chunk_rest.call(null, seq__22767_24949__$1);
            var G__24952 = c__11077__auto___24950;
            var G__24953 = cljs.core.count.call(null, c__11077__auto___24950);
            var G__24954 = 0;
            seq__22767_24939 = G__24951;
            chunk__22768_24940 = G__24952;
            count__22769_24941 = G__24953;
            i__22770_24942 = G__24954;
            continue;
          } else {
            var arg__11936__auto___24955 = cljs.core.first.call(null, seq__22767_24949__$1);
            a__11935__auto__.push(arg__11936__auto___24955);
            var G__24956 = cljs.core.next.call(null, seq__22767_24949__$1);
            var G__24957 = null;
            var G__24958 = 0;
            var G__24959 = 0;
            seq__22767_24939 = G__24956;
            chunk__22768_24940 = G__24957;
            count__22769_24941 = G__24958;
            i__22770_24942 = G__24959;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.span.apply(null, a__11935__auto__);
  };
  var span = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return span__delegate.call(this, args__11934__auto__);
  };
  span.cljs$lang$maxFixedArity = 0;
  span.cljs$lang$applyTo = function(arglist__24960) {
    var args__11934__auto__ = cljs.core.seq(arglist__24960);
    return span__delegate(args__11934__auto__);
  };
  span.cljs$core$IFn$_invoke$arity$variadic = span__delegate;
  return span;
}();
quiescent.dom.strong = function() {
  var strong__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22775_24961 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22776_24962 = null;
    var count__22777_24963 = 0;
    var i__22778_24964 = 0;
    while (true) {
      if (i__22778_24964 < count__22777_24963) {
        var arg__11936__auto___24965 = cljs.core._nth.call(null, chunk__22776_24962, i__22778_24964);
        a__11935__auto__.push(arg__11936__auto___24965);
        var G__24966 = seq__22775_24961;
        var G__24967 = chunk__22776_24962;
        var G__24968 = count__22777_24963;
        var G__24969 = i__22778_24964 + 1;
        seq__22775_24961 = G__24966;
        chunk__22776_24962 = G__24967;
        count__22777_24963 = G__24968;
        i__22778_24964 = G__24969;
        continue;
      } else {
        var temp__4092__auto___24970 = cljs.core.seq.call(null, seq__22775_24961);
        if (temp__4092__auto___24970) {
          var seq__22775_24971__$1 = temp__4092__auto___24970;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22775_24971__$1)) {
            var c__11077__auto___24972 = cljs.core.chunk_first.call(null, seq__22775_24971__$1);
            var G__24973 = cljs.core.chunk_rest.call(null, seq__22775_24971__$1);
            var G__24974 = c__11077__auto___24972;
            var G__24975 = cljs.core.count.call(null, c__11077__auto___24972);
            var G__24976 = 0;
            seq__22775_24961 = G__24973;
            chunk__22776_24962 = G__24974;
            count__22777_24963 = G__24975;
            i__22778_24964 = G__24976;
            continue;
          } else {
            var arg__11936__auto___24977 = cljs.core.first.call(null, seq__22775_24971__$1);
            a__11935__auto__.push(arg__11936__auto___24977);
            var G__24978 = cljs.core.next.call(null, seq__22775_24971__$1);
            var G__24979 = null;
            var G__24980 = 0;
            var G__24981 = 0;
            seq__22775_24961 = G__24978;
            chunk__22776_24962 = G__24979;
            count__22777_24963 = G__24980;
            i__22778_24964 = G__24981;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.strong.apply(null, a__11935__auto__);
  };
  var strong = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return strong__delegate.call(this, args__11934__auto__);
  };
  strong.cljs$lang$maxFixedArity = 0;
  strong.cljs$lang$applyTo = function(arglist__24982) {
    var args__11934__auto__ = cljs.core.seq(arglist__24982);
    return strong__delegate(args__11934__auto__);
  };
  strong.cljs$core$IFn$_invoke$arity$variadic = strong__delegate;
  return strong;
}();
quiescent.dom.style = function() {
  var style__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22783_24983 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22784_24984 = null;
    var count__22785_24985 = 0;
    var i__22786_24986 = 0;
    while (true) {
      if (i__22786_24986 < count__22785_24985) {
        var arg__11936__auto___24987 = cljs.core._nth.call(null, chunk__22784_24984, i__22786_24986);
        a__11935__auto__.push(arg__11936__auto___24987);
        var G__24988 = seq__22783_24983;
        var G__24989 = chunk__22784_24984;
        var G__24990 = count__22785_24985;
        var G__24991 = i__22786_24986 + 1;
        seq__22783_24983 = G__24988;
        chunk__22784_24984 = G__24989;
        count__22785_24985 = G__24990;
        i__22786_24986 = G__24991;
        continue;
      } else {
        var temp__4092__auto___24992 = cljs.core.seq.call(null, seq__22783_24983);
        if (temp__4092__auto___24992) {
          var seq__22783_24993__$1 = temp__4092__auto___24992;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22783_24993__$1)) {
            var c__11077__auto___24994 = cljs.core.chunk_first.call(null, seq__22783_24993__$1);
            var G__24995 = cljs.core.chunk_rest.call(null, seq__22783_24993__$1);
            var G__24996 = c__11077__auto___24994;
            var G__24997 = cljs.core.count.call(null, c__11077__auto___24994);
            var G__24998 = 0;
            seq__22783_24983 = G__24995;
            chunk__22784_24984 = G__24996;
            count__22785_24985 = G__24997;
            i__22786_24986 = G__24998;
            continue;
          } else {
            var arg__11936__auto___24999 = cljs.core.first.call(null, seq__22783_24993__$1);
            a__11935__auto__.push(arg__11936__auto___24999);
            var G__25000 = cljs.core.next.call(null, seq__22783_24993__$1);
            var G__25001 = null;
            var G__25002 = 0;
            var G__25003 = 0;
            seq__22783_24983 = G__25000;
            chunk__22784_24984 = G__25001;
            count__22785_24985 = G__25002;
            i__22786_24986 = G__25003;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.style.apply(null, a__11935__auto__);
  };
  var style = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return style__delegate.call(this, args__11934__auto__);
  };
  style.cljs$lang$maxFixedArity = 0;
  style.cljs$lang$applyTo = function(arglist__25004) {
    var args__11934__auto__ = cljs.core.seq(arglist__25004);
    return style__delegate(args__11934__auto__);
  };
  style.cljs$core$IFn$_invoke$arity$variadic = style__delegate;
  return style;
}();
quiescent.dom.sub = function() {
  var sub__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22791_25005 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22792_25006 = null;
    var count__22793_25007 = 0;
    var i__22794_25008 = 0;
    while (true) {
      if (i__22794_25008 < count__22793_25007) {
        var arg__11936__auto___25009 = cljs.core._nth.call(null, chunk__22792_25006, i__22794_25008);
        a__11935__auto__.push(arg__11936__auto___25009);
        var G__25010 = seq__22791_25005;
        var G__25011 = chunk__22792_25006;
        var G__25012 = count__22793_25007;
        var G__25013 = i__22794_25008 + 1;
        seq__22791_25005 = G__25010;
        chunk__22792_25006 = G__25011;
        count__22793_25007 = G__25012;
        i__22794_25008 = G__25013;
        continue;
      } else {
        var temp__4092__auto___25014 = cljs.core.seq.call(null, seq__22791_25005);
        if (temp__4092__auto___25014) {
          var seq__22791_25015__$1 = temp__4092__auto___25014;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22791_25015__$1)) {
            var c__11077__auto___25016 = cljs.core.chunk_first.call(null, seq__22791_25015__$1);
            var G__25017 = cljs.core.chunk_rest.call(null, seq__22791_25015__$1);
            var G__25018 = c__11077__auto___25016;
            var G__25019 = cljs.core.count.call(null, c__11077__auto___25016);
            var G__25020 = 0;
            seq__22791_25005 = G__25017;
            chunk__22792_25006 = G__25018;
            count__22793_25007 = G__25019;
            i__22794_25008 = G__25020;
            continue;
          } else {
            var arg__11936__auto___25021 = cljs.core.first.call(null, seq__22791_25015__$1);
            a__11935__auto__.push(arg__11936__auto___25021);
            var G__25022 = cljs.core.next.call(null, seq__22791_25015__$1);
            var G__25023 = null;
            var G__25024 = 0;
            var G__25025 = 0;
            seq__22791_25005 = G__25022;
            chunk__22792_25006 = G__25023;
            count__22793_25007 = G__25024;
            i__22794_25008 = G__25025;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.sub.apply(null, a__11935__auto__);
  };
  var sub = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sub__delegate.call(this, args__11934__auto__);
  };
  sub.cljs$lang$maxFixedArity = 0;
  sub.cljs$lang$applyTo = function(arglist__25026) {
    var args__11934__auto__ = cljs.core.seq(arglist__25026);
    return sub__delegate(args__11934__auto__);
  };
  sub.cljs$core$IFn$_invoke$arity$variadic = sub__delegate;
  return sub;
}();
quiescent.dom.summary = function() {
  var summary__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22799_25027 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22800_25028 = null;
    var count__22801_25029 = 0;
    var i__22802_25030 = 0;
    while (true) {
      if (i__22802_25030 < count__22801_25029) {
        var arg__11936__auto___25031 = cljs.core._nth.call(null, chunk__22800_25028, i__22802_25030);
        a__11935__auto__.push(arg__11936__auto___25031);
        var G__25032 = seq__22799_25027;
        var G__25033 = chunk__22800_25028;
        var G__25034 = count__22801_25029;
        var G__25035 = i__22802_25030 + 1;
        seq__22799_25027 = G__25032;
        chunk__22800_25028 = G__25033;
        count__22801_25029 = G__25034;
        i__22802_25030 = G__25035;
        continue;
      } else {
        var temp__4092__auto___25036 = cljs.core.seq.call(null, seq__22799_25027);
        if (temp__4092__auto___25036) {
          var seq__22799_25037__$1 = temp__4092__auto___25036;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22799_25037__$1)) {
            var c__11077__auto___25038 = cljs.core.chunk_first.call(null, seq__22799_25037__$1);
            var G__25039 = cljs.core.chunk_rest.call(null, seq__22799_25037__$1);
            var G__25040 = c__11077__auto___25038;
            var G__25041 = cljs.core.count.call(null, c__11077__auto___25038);
            var G__25042 = 0;
            seq__22799_25027 = G__25039;
            chunk__22800_25028 = G__25040;
            count__22801_25029 = G__25041;
            i__22802_25030 = G__25042;
            continue;
          } else {
            var arg__11936__auto___25043 = cljs.core.first.call(null, seq__22799_25037__$1);
            a__11935__auto__.push(arg__11936__auto___25043);
            var G__25044 = cljs.core.next.call(null, seq__22799_25037__$1);
            var G__25045 = null;
            var G__25046 = 0;
            var G__25047 = 0;
            seq__22799_25027 = G__25044;
            chunk__22800_25028 = G__25045;
            count__22801_25029 = G__25046;
            i__22802_25030 = G__25047;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.summary.apply(null, a__11935__auto__);
  };
  var summary = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return summary__delegate.call(this, args__11934__auto__);
  };
  summary.cljs$lang$maxFixedArity = 0;
  summary.cljs$lang$applyTo = function(arglist__25048) {
    var args__11934__auto__ = cljs.core.seq(arglist__25048);
    return summary__delegate(args__11934__auto__);
  };
  summary.cljs$core$IFn$_invoke$arity$variadic = summary__delegate;
  return summary;
}();
quiescent.dom.sup = function() {
  var sup__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22807_25049 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22808_25050 = null;
    var count__22809_25051 = 0;
    var i__22810_25052 = 0;
    while (true) {
      if (i__22810_25052 < count__22809_25051) {
        var arg__11936__auto___25053 = cljs.core._nth.call(null, chunk__22808_25050, i__22810_25052);
        a__11935__auto__.push(arg__11936__auto___25053);
        var G__25054 = seq__22807_25049;
        var G__25055 = chunk__22808_25050;
        var G__25056 = count__22809_25051;
        var G__25057 = i__22810_25052 + 1;
        seq__22807_25049 = G__25054;
        chunk__22808_25050 = G__25055;
        count__22809_25051 = G__25056;
        i__22810_25052 = G__25057;
        continue;
      } else {
        var temp__4092__auto___25058 = cljs.core.seq.call(null, seq__22807_25049);
        if (temp__4092__auto___25058) {
          var seq__22807_25059__$1 = temp__4092__auto___25058;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22807_25059__$1)) {
            var c__11077__auto___25060 = cljs.core.chunk_first.call(null, seq__22807_25059__$1);
            var G__25061 = cljs.core.chunk_rest.call(null, seq__22807_25059__$1);
            var G__25062 = c__11077__auto___25060;
            var G__25063 = cljs.core.count.call(null, c__11077__auto___25060);
            var G__25064 = 0;
            seq__22807_25049 = G__25061;
            chunk__22808_25050 = G__25062;
            count__22809_25051 = G__25063;
            i__22810_25052 = G__25064;
            continue;
          } else {
            var arg__11936__auto___25065 = cljs.core.first.call(null, seq__22807_25059__$1);
            a__11935__auto__.push(arg__11936__auto___25065);
            var G__25066 = cljs.core.next.call(null, seq__22807_25059__$1);
            var G__25067 = null;
            var G__25068 = 0;
            var G__25069 = 0;
            seq__22807_25049 = G__25066;
            chunk__22808_25050 = G__25067;
            count__22809_25051 = G__25068;
            i__22810_25052 = G__25069;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.sup.apply(null, a__11935__auto__);
  };
  var sup = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sup__delegate.call(this, args__11934__auto__);
  };
  sup.cljs$lang$maxFixedArity = 0;
  sup.cljs$lang$applyTo = function(arglist__25070) {
    var args__11934__auto__ = cljs.core.seq(arglist__25070);
    return sup__delegate(args__11934__auto__);
  };
  sup.cljs$core$IFn$_invoke$arity$variadic = sup__delegate;
  return sup;
}();
quiescent.dom.table = function() {
  var table__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22815_25071 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22816_25072 = null;
    var count__22817_25073 = 0;
    var i__22818_25074 = 0;
    while (true) {
      if (i__22818_25074 < count__22817_25073) {
        var arg__11936__auto___25075 = cljs.core._nth.call(null, chunk__22816_25072, i__22818_25074);
        a__11935__auto__.push(arg__11936__auto___25075);
        var G__25076 = seq__22815_25071;
        var G__25077 = chunk__22816_25072;
        var G__25078 = count__22817_25073;
        var G__25079 = i__22818_25074 + 1;
        seq__22815_25071 = G__25076;
        chunk__22816_25072 = G__25077;
        count__22817_25073 = G__25078;
        i__22818_25074 = G__25079;
        continue;
      } else {
        var temp__4092__auto___25080 = cljs.core.seq.call(null, seq__22815_25071);
        if (temp__4092__auto___25080) {
          var seq__22815_25081__$1 = temp__4092__auto___25080;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22815_25081__$1)) {
            var c__11077__auto___25082 = cljs.core.chunk_first.call(null, seq__22815_25081__$1);
            var G__25083 = cljs.core.chunk_rest.call(null, seq__22815_25081__$1);
            var G__25084 = c__11077__auto___25082;
            var G__25085 = cljs.core.count.call(null, c__11077__auto___25082);
            var G__25086 = 0;
            seq__22815_25071 = G__25083;
            chunk__22816_25072 = G__25084;
            count__22817_25073 = G__25085;
            i__22818_25074 = G__25086;
            continue;
          } else {
            var arg__11936__auto___25087 = cljs.core.first.call(null, seq__22815_25081__$1);
            a__11935__auto__.push(arg__11936__auto___25087);
            var G__25088 = cljs.core.next.call(null, seq__22815_25081__$1);
            var G__25089 = null;
            var G__25090 = 0;
            var G__25091 = 0;
            seq__22815_25071 = G__25088;
            chunk__22816_25072 = G__25089;
            count__22817_25073 = G__25090;
            i__22818_25074 = G__25091;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.table.apply(null, a__11935__auto__);
  };
  var table = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return table__delegate.call(this, args__11934__auto__);
  };
  table.cljs$lang$maxFixedArity = 0;
  table.cljs$lang$applyTo = function(arglist__25092) {
    var args__11934__auto__ = cljs.core.seq(arglist__25092);
    return table__delegate(args__11934__auto__);
  };
  table.cljs$core$IFn$_invoke$arity$variadic = table__delegate;
  return table;
}();
quiescent.dom.tbody = function() {
  var tbody__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22823_25093 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22824_25094 = null;
    var count__22825_25095 = 0;
    var i__22826_25096 = 0;
    while (true) {
      if (i__22826_25096 < count__22825_25095) {
        var arg__11936__auto___25097 = cljs.core._nth.call(null, chunk__22824_25094, i__22826_25096);
        a__11935__auto__.push(arg__11936__auto___25097);
        var G__25098 = seq__22823_25093;
        var G__25099 = chunk__22824_25094;
        var G__25100 = count__22825_25095;
        var G__25101 = i__22826_25096 + 1;
        seq__22823_25093 = G__25098;
        chunk__22824_25094 = G__25099;
        count__22825_25095 = G__25100;
        i__22826_25096 = G__25101;
        continue;
      } else {
        var temp__4092__auto___25102 = cljs.core.seq.call(null, seq__22823_25093);
        if (temp__4092__auto___25102) {
          var seq__22823_25103__$1 = temp__4092__auto___25102;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22823_25103__$1)) {
            var c__11077__auto___25104 = cljs.core.chunk_first.call(null, seq__22823_25103__$1);
            var G__25105 = cljs.core.chunk_rest.call(null, seq__22823_25103__$1);
            var G__25106 = c__11077__auto___25104;
            var G__25107 = cljs.core.count.call(null, c__11077__auto___25104);
            var G__25108 = 0;
            seq__22823_25093 = G__25105;
            chunk__22824_25094 = G__25106;
            count__22825_25095 = G__25107;
            i__22826_25096 = G__25108;
            continue;
          } else {
            var arg__11936__auto___25109 = cljs.core.first.call(null, seq__22823_25103__$1);
            a__11935__auto__.push(arg__11936__auto___25109);
            var G__25110 = cljs.core.next.call(null, seq__22823_25103__$1);
            var G__25111 = null;
            var G__25112 = 0;
            var G__25113 = 0;
            seq__22823_25093 = G__25110;
            chunk__22824_25094 = G__25111;
            count__22825_25095 = G__25112;
            i__22826_25096 = G__25113;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.tbody.apply(null, a__11935__auto__);
  };
  var tbody = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return tbody__delegate.call(this, args__11934__auto__);
  };
  tbody.cljs$lang$maxFixedArity = 0;
  tbody.cljs$lang$applyTo = function(arglist__25114) {
    var args__11934__auto__ = cljs.core.seq(arglist__25114);
    return tbody__delegate(args__11934__auto__);
  };
  tbody.cljs$core$IFn$_invoke$arity$variadic = tbody__delegate;
  return tbody;
}();
quiescent.dom.td = function() {
  var td__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22831_25115 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22832_25116 = null;
    var count__22833_25117 = 0;
    var i__22834_25118 = 0;
    while (true) {
      if (i__22834_25118 < count__22833_25117) {
        var arg__11936__auto___25119 = cljs.core._nth.call(null, chunk__22832_25116, i__22834_25118);
        a__11935__auto__.push(arg__11936__auto___25119);
        var G__25120 = seq__22831_25115;
        var G__25121 = chunk__22832_25116;
        var G__25122 = count__22833_25117;
        var G__25123 = i__22834_25118 + 1;
        seq__22831_25115 = G__25120;
        chunk__22832_25116 = G__25121;
        count__22833_25117 = G__25122;
        i__22834_25118 = G__25123;
        continue;
      } else {
        var temp__4092__auto___25124 = cljs.core.seq.call(null, seq__22831_25115);
        if (temp__4092__auto___25124) {
          var seq__22831_25125__$1 = temp__4092__auto___25124;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22831_25125__$1)) {
            var c__11077__auto___25126 = cljs.core.chunk_first.call(null, seq__22831_25125__$1);
            var G__25127 = cljs.core.chunk_rest.call(null, seq__22831_25125__$1);
            var G__25128 = c__11077__auto___25126;
            var G__25129 = cljs.core.count.call(null, c__11077__auto___25126);
            var G__25130 = 0;
            seq__22831_25115 = G__25127;
            chunk__22832_25116 = G__25128;
            count__22833_25117 = G__25129;
            i__22834_25118 = G__25130;
            continue;
          } else {
            var arg__11936__auto___25131 = cljs.core.first.call(null, seq__22831_25125__$1);
            a__11935__auto__.push(arg__11936__auto___25131);
            var G__25132 = cljs.core.next.call(null, seq__22831_25125__$1);
            var G__25133 = null;
            var G__25134 = 0;
            var G__25135 = 0;
            seq__22831_25115 = G__25132;
            chunk__22832_25116 = G__25133;
            count__22833_25117 = G__25134;
            i__22834_25118 = G__25135;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.td.apply(null, a__11935__auto__);
  };
  var td = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return td__delegate.call(this, args__11934__auto__);
  };
  td.cljs$lang$maxFixedArity = 0;
  td.cljs$lang$applyTo = function(arglist__25136) {
    var args__11934__auto__ = cljs.core.seq(arglist__25136);
    return td__delegate(args__11934__auto__);
  };
  td.cljs$core$IFn$_invoke$arity$variadic = td__delegate;
  return td;
}();
quiescent.dom.textarea = function() {
  var textarea__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22839_25137 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22840_25138 = null;
    var count__22841_25139 = 0;
    var i__22842_25140 = 0;
    while (true) {
      if (i__22842_25140 < count__22841_25139) {
        var arg__11936__auto___25141 = cljs.core._nth.call(null, chunk__22840_25138, i__22842_25140);
        a__11935__auto__.push(arg__11936__auto___25141);
        var G__25142 = seq__22839_25137;
        var G__25143 = chunk__22840_25138;
        var G__25144 = count__22841_25139;
        var G__25145 = i__22842_25140 + 1;
        seq__22839_25137 = G__25142;
        chunk__22840_25138 = G__25143;
        count__22841_25139 = G__25144;
        i__22842_25140 = G__25145;
        continue;
      } else {
        var temp__4092__auto___25146 = cljs.core.seq.call(null, seq__22839_25137);
        if (temp__4092__auto___25146) {
          var seq__22839_25147__$1 = temp__4092__auto___25146;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22839_25147__$1)) {
            var c__11077__auto___25148 = cljs.core.chunk_first.call(null, seq__22839_25147__$1);
            var G__25149 = cljs.core.chunk_rest.call(null, seq__22839_25147__$1);
            var G__25150 = c__11077__auto___25148;
            var G__25151 = cljs.core.count.call(null, c__11077__auto___25148);
            var G__25152 = 0;
            seq__22839_25137 = G__25149;
            chunk__22840_25138 = G__25150;
            count__22841_25139 = G__25151;
            i__22842_25140 = G__25152;
            continue;
          } else {
            var arg__11936__auto___25153 = cljs.core.first.call(null, seq__22839_25147__$1);
            a__11935__auto__.push(arg__11936__auto___25153);
            var G__25154 = cljs.core.next.call(null, seq__22839_25147__$1);
            var G__25155 = null;
            var G__25156 = 0;
            var G__25157 = 0;
            seq__22839_25137 = G__25154;
            chunk__22840_25138 = G__25155;
            count__22841_25139 = G__25156;
            i__22842_25140 = G__25157;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.textarea.apply(null, a__11935__auto__);
  };
  var textarea = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return textarea__delegate.call(this, args__11934__auto__);
  };
  textarea.cljs$lang$maxFixedArity = 0;
  textarea.cljs$lang$applyTo = function(arglist__25158) {
    var args__11934__auto__ = cljs.core.seq(arglist__25158);
    return textarea__delegate(args__11934__auto__);
  };
  textarea.cljs$core$IFn$_invoke$arity$variadic = textarea__delegate;
  return textarea;
}();
quiescent.dom.tfoot = function() {
  var tfoot__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22847_25159 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22848_25160 = null;
    var count__22849_25161 = 0;
    var i__22850_25162 = 0;
    while (true) {
      if (i__22850_25162 < count__22849_25161) {
        var arg__11936__auto___25163 = cljs.core._nth.call(null, chunk__22848_25160, i__22850_25162);
        a__11935__auto__.push(arg__11936__auto___25163);
        var G__25164 = seq__22847_25159;
        var G__25165 = chunk__22848_25160;
        var G__25166 = count__22849_25161;
        var G__25167 = i__22850_25162 + 1;
        seq__22847_25159 = G__25164;
        chunk__22848_25160 = G__25165;
        count__22849_25161 = G__25166;
        i__22850_25162 = G__25167;
        continue;
      } else {
        var temp__4092__auto___25168 = cljs.core.seq.call(null, seq__22847_25159);
        if (temp__4092__auto___25168) {
          var seq__22847_25169__$1 = temp__4092__auto___25168;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22847_25169__$1)) {
            var c__11077__auto___25170 = cljs.core.chunk_first.call(null, seq__22847_25169__$1);
            var G__25171 = cljs.core.chunk_rest.call(null, seq__22847_25169__$1);
            var G__25172 = c__11077__auto___25170;
            var G__25173 = cljs.core.count.call(null, c__11077__auto___25170);
            var G__25174 = 0;
            seq__22847_25159 = G__25171;
            chunk__22848_25160 = G__25172;
            count__22849_25161 = G__25173;
            i__22850_25162 = G__25174;
            continue;
          } else {
            var arg__11936__auto___25175 = cljs.core.first.call(null, seq__22847_25169__$1);
            a__11935__auto__.push(arg__11936__auto___25175);
            var G__25176 = cljs.core.next.call(null, seq__22847_25169__$1);
            var G__25177 = null;
            var G__25178 = 0;
            var G__25179 = 0;
            seq__22847_25159 = G__25176;
            chunk__22848_25160 = G__25177;
            count__22849_25161 = G__25178;
            i__22850_25162 = G__25179;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.tfoot.apply(null, a__11935__auto__);
  };
  var tfoot = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return tfoot__delegate.call(this, args__11934__auto__);
  };
  tfoot.cljs$lang$maxFixedArity = 0;
  tfoot.cljs$lang$applyTo = function(arglist__25180) {
    var args__11934__auto__ = cljs.core.seq(arglist__25180);
    return tfoot__delegate(args__11934__auto__);
  };
  tfoot.cljs$core$IFn$_invoke$arity$variadic = tfoot__delegate;
  return tfoot;
}();
quiescent.dom.th = function() {
  var th__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22855_25181 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22856_25182 = null;
    var count__22857_25183 = 0;
    var i__22858_25184 = 0;
    while (true) {
      if (i__22858_25184 < count__22857_25183) {
        var arg__11936__auto___25185 = cljs.core._nth.call(null, chunk__22856_25182, i__22858_25184);
        a__11935__auto__.push(arg__11936__auto___25185);
        var G__25186 = seq__22855_25181;
        var G__25187 = chunk__22856_25182;
        var G__25188 = count__22857_25183;
        var G__25189 = i__22858_25184 + 1;
        seq__22855_25181 = G__25186;
        chunk__22856_25182 = G__25187;
        count__22857_25183 = G__25188;
        i__22858_25184 = G__25189;
        continue;
      } else {
        var temp__4092__auto___25190 = cljs.core.seq.call(null, seq__22855_25181);
        if (temp__4092__auto___25190) {
          var seq__22855_25191__$1 = temp__4092__auto___25190;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22855_25191__$1)) {
            var c__11077__auto___25192 = cljs.core.chunk_first.call(null, seq__22855_25191__$1);
            var G__25193 = cljs.core.chunk_rest.call(null, seq__22855_25191__$1);
            var G__25194 = c__11077__auto___25192;
            var G__25195 = cljs.core.count.call(null, c__11077__auto___25192);
            var G__25196 = 0;
            seq__22855_25181 = G__25193;
            chunk__22856_25182 = G__25194;
            count__22857_25183 = G__25195;
            i__22858_25184 = G__25196;
            continue;
          } else {
            var arg__11936__auto___25197 = cljs.core.first.call(null, seq__22855_25191__$1);
            a__11935__auto__.push(arg__11936__auto___25197);
            var G__25198 = cljs.core.next.call(null, seq__22855_25191__$1);
            var G__25199 = null;
            var G__25200 = 0;
            var G__25201 = 0;
            seq__22855_25181 = G__25198;
            chunk__22856_25182 = G__25199;
            count__22857_25183 = G__25200;
            i__22858_25184 = G__25201;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.th.apply(null, a__11935__auto__);
  };
  var th = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return th__delegate.call(this, args__11934__auto__);
  };
  th.cljs$lang$maxFixedArity = 0;
  th.cljs$lang$applyTo = function(arglist__25202) {
    var args__11934__auto__ = cljs.core.seq(arglist__25202);
    return th__delegate(args__11934__auto__);
  };
  th.cljs$core$IFn$_invoke$arity$variadic = th__delegate;
  return th;
}();
quiescent.dom.thead = function() {
  var thead__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22863_25203 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22864_25204 = null;
    var count__22865_25205 = 0;
    var i__22866_25206 = 0;
    while (true) {
      if (i__22866_25206 < count__22865_25205) {
        var arg__11936__auto___25207 = cljs.core._nth.call(null, chunk__22864_25204, i__22866_25206);
        a__11935__auto__.push(arg__11936__auto___25207);
        var G__25208 = seq__22863_25203;
        var G__25209 = chunk__22864_25204;
        var G__25210 = count__22865_25205;
        var G__25211 = i__22866_25206 + 1;
        seq__22863_25203 = G__25208;
        chunk__22864_25204 = G__25209;
        count__22865_25205 = G__25210;
        i__22866_25206 = G__25211;
        continue;
      } else {
        var temp__4092__auto___25212 = cljs.core.seq.call(null, seq__22863_25203);
        if (temp__4092__auto___25212) {
          var seq__22863_25213__$1 = temp__4092__auto___25212;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22863_25213__$1)) {
            var c__11077__auto___25214 = cljs.core.chunk_first.call(null, seq__22863_25213__$1);
            var G__25215 = cljs.core.chunk_rest.call(null, seq__22863_25213__$1);
            var G__25216 = c__11077__auto___25214;
            var G__25217 = cljs.core.count.call(null, c__11077__auto___25214);
            var G__25218 = 0;
            seq__22863_25203 = G__25215;
            chunk__22864_25204 = G__25216;
            count__22865_25205 = G__25217;
            i__22866_25206 = G__25218;
            continue;
          } else {
            var arg__11936__auto___25219 = cljs.core.first.call(null, seq__22863_25213__$1);
            a__11935__auto__.push(arg__11936__auto___25219);
            var G__25220 = cljs.core.next.call(null, seq__22863_25213__$1);
            var G__25221 = null;
            var G__25222 = 0;
            var G__25223 = 0;
            seq__22863_25203 = G__25220;
            chunk__22864_25204 = G__25221;
            count__22865_25205 = G__25222;
            i__22866_25206 = G__25223;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.thead.apply(null, a__11935__auto__);
  };
  var thead = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return thead__delegate.call(this, args__11934__auto__);
  };
  thead.cljs$lang$maxFixedArity = 0;
  thead.cljs$lang$applyTo = function(arglist__25224) {
    var args__11934__auto__ = cljs.core.seq(arglist__25224);
    return thead__delegate(args__11934__auto__);
  };
  thead.cljs$core$IFn$_invoke$arity$variadic = thead__delegate;
  return thead;
}();
quiescent.dom.time = function() {
  var time__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22871_25225 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22872_25226 = null;
    var count__22873_25227 = 0;
    var i__22874_25228 = 0;
    while (true) {
      if (i__22874_25228 < count__22873_25227) {
        var arg__11936__auto___25229 = cljs.core._nth.call(null, chunk__22872_25226, i__22874_25228);
        a__11935__auto__.push(arg__11936__auto___25229);
        var G__25230 = seq__22871_25225;
        var G__25231 = chunk__22872_25226;
        var G__25232 = count__22873_25227;
        var G__25233 = i__22874_25228 + 1;
        seq__22871_25225 = G__25230;
        chunk__22872_25226 = G__25231;
        count__22873_25227 = G__25232;
        i__22874_25228 = G__25233;
        continue;
      } else {
        var temp__4092__auto___25234 = cljs.core.seq.call(null, seq__22871_25225);
        if (temp__4092__auto___25234) {
          var seq__22871_25235__$1 = temp__4092__auto___25234;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22871_25235__$1)) {
            var c__11077__auto___25236 = cljs.core.chunk_first.call(null, seq__22871_25235__$1);
            var G__25237 = cljs.core.chunk_rest.call(null, seq__22871_25235__$1);
            var G__25238 = c__11077__auto___25236;
            var G__25239 = cljs.core.count.call(null, c__11077__auto___25236);
            var G__25240 = 0;
            seq__22871_25225 = G__25237;
            chunk__22872_25226 = G__25238;
            count__22873_25227 = G__25239;
            i__22874_25228 = G__25240;
            continue;
          } else {
            var arg__11936__auto___25241 = cljs.core.first.call(null, seq__22871_25235__$1);
            a__11935__auto__.push(arg__11936__auto___25241);
            var G__25242 = cljs.core.next.call(null, seq__22871_25235__$1);
            var G__25243 = null;
            var G__25244 = 0;
            var G__25245 = 0;
            seq__22871_25225 = G__25242;
            chunk__22872_25226 = G__25243;
            count__22873_25227 = G__25244;
            i__22874_25228 = G__25245;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.time.apply(null, a__11935__auto__);
  };
  var time = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return time__delegate.call(this, args__11934__auto__);
  };
  time.cljs$lang$maxFixedArity = 0;
  time.cljs$lang$applyTo = function(arglist__25246) {
    var args__11934__auto__ = cljs.core.seq(arglist__25246);
    return time__delegate(args__11934__auto__);
  };
  time.cljs$core$IFn$_invoke$arity$variadic = time__delegate;
  return time;
}();
quiescent.dom.title = function() {
  var title__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22879_25247 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22880_25248 = null;
    var count__22881_25249 = 0;
    var i__22882_25250 = 0;
    while (true) {
      if (i__22882_25250 < count__22881_25249) {
        var arg__11936__auto___25251 = cljs.core._nth.call(null, chunk__22880_25248, i__22882_25250);
        a__11935__auto__.push(arg__11936__auto___25251);
        var G__25252 = seq__22879_25247;
        var G__25253 = chunk__22880_25248;
        var G__25254 = count__22881_25249;
        var G__25255 = i__22882_25250 + 1;
        seq__22879_25247 = G__25252;
        chunk__22880_25248 = G__25253;
        count__22881_25249 = G__25254;
        i__22882_25250 = G__25255;
        continue;
      } else {
        var temp__4092__auto___25256 = cljs.core.seq.call(null, seq__22879_25247);
        if (temp__4092__auto___25256) {
          var seq__22879_25257__$1 = temp__4092__auto___25256;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22879_25257__$1)) {
            var c__11077__auto___25258 = cljs.core.chunk_first.call(null, seq__22879_25257__$1);
            var G__25259 = cljs.core.chunk_rest.call(null, seq__22879_25257__$1);
            var G__25260 = c__11077__auto___25258;
            var G__25261 = cljs.core.count.call(null, c__11077__auto___25258);
            var G__25262 = 0;
            seq__22879_25247 = G__25259;
            chunk__22880_25248 = G__25260;
            count__22881_25249 = G__25261;
            i__22882_25250 = G__25262;
            continue;
          } else {
            var arg__11936__auto___25263 = cljs.core.first.call(null, seq__22879_25257__$1);
            a__11935__auto__.push(arg__11936__auto___25263);
            var G__25264 = cljs.core.next.call(null, seq__22879_25257__$1);
            var G__25265 = null;
            var G__25266 = 0;
            var G__25267 = 0;
            seq__22879_25247 = G__25264;
            chunk__22880_25248 = G__25265;
            count__22881_25249 = G__25266;
            i__22882_25250 = G__25267;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.title.apply(null, a__11935__auto__);
  };
  var title = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return title__delegate.call(this, args__11934__auto__);
  };
  title.cljs$lang$maxFixedArity = 0;
  title.cljs$lang$applyTo = function(arglist__25268) {
    var args__11934__auto__ = cljs.core.seq(arglist__25268);
    return title__delegate(args__11934__auto__);
  };
  title.cljs$core$IFn$_invoke$arity$variadic = title__delegate;
  return title;
}();
quiescent.dom.tr = function() {
  var tr__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22887_25269 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22888_25270 = null;
    var count__22889_25271 = 0;
    var i__22890_25272 = 0;
    while (true) {
      if (i__22890_25272 < count__22889_25271) {
        var arg__11936__auto___25273 = cljs.core._nth.call(null, chunk__22888_25270, i__22890_25272);
        a__11935__auto__.push(arg__11936__auto___25273);
        var G__25274 = seq__22887_25269;
        var G__25275 = chunk__22888_25270;
        var G__25276 = count__22889_25271;
        var G__25277 = i__22890_25272 + 1;
        seq__22887_25269 = G__25274;
        chunk__22888_25270 = G__25275;
        count__22889_25271 = G__25276;
        i__22890_25272 = G__25277;
        continue;
      } else {
        var temp__4092__auto___25278 = cljs.core.seq.call(null, seq__22887_25269);
        if (temp__4092__auto___25278) {
          var seq__22887_25279__$1 = temp__4092__auto___25278;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22887_25279__$1)) {
            var c__11077__auto___25280 = cljs.core.chunk_first.call(null, seq__22887_25279__$1);
            var G__25281 = cljs.core.chunk_rest.call(null, seq__22887_25279__$1);
            var G__25282 = c__11077__auto___25280;
            var G__25283 = cljs.core.count.call(null, c__11077__auto___25280);
            var G__25284 = 0;
            seq__22887_25269 = G__25281;
            chunk__22888_25270 = G__25282;
            count__22889_25271 = G__25283;
            i__22890_25272 = G__25284;
            continue;
          } else {
            var arg__11936__auto___25285 = cljs.core.first.call(null, seq__22887_25279__$1);
            a__11935__auto__.push(arg__11936__auto___25285);
            var G__25286 = cljs.core.next.call(null, seq__22887_25279__$1);
            var G__25287 = null;
            var G__25288 = 0;
            var G__25289 = 0;
            seq__22887_25269 = G__25286;
            chunk__22888_25270 = G__25287;
            count__22889_25271 = G__25288;
            i__22890_25272 = G__25289;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.tr.apply(null, a__11935__auto__);
  };
  var tr = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return tr__delegate.call(this, args__11934__auto__);
  };
  tr.cljs$lang$maxFixedArity = 0;
  tr.cljs$lang$applyTo = function(arglist__25290) {
    var args__11934__auto__ = cljs.core.seq(arglist__25290);
    return tr__delegate(args__11934__auto__);
  };
  tr.cljs$core$IFn$_invoke$arity$variadic = tr__delegate;
  return tr;
}();
quiescent.dom.track = function() {
  var track__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22895_25291 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22896_25292 = null;
    var count__22897_25293 = 0;
    var i__22898_25294 = 0;
    while (true) {
      if (i__22898_25294 < count__22897_25293) {
        var arg__11936__auto___25295 = cljs.core._nth.call(null, chunk__22896_25292, i__22898_25294);
        a__11935__auto__.push(arg__11936__auto___25295);
        var G__25296 = seq__22895_25291;
        var G__25297 = chunk__22896_25292;
        var G__25298 = count__22897_25293;
        var G__25299 = i__22898_25294 + 1;
        seq__22895_25291 = G__25296;
        chunk__22896_25292 = G__25297;
        count__22897_25293 = G__25298;
        i__22898_25294 = G__25299;
        continue;
      } else {
        var temp__4092__auto___25300 = cljs.core.seq.call(null, seq__22895_25291);
        if (temp__4092__auto___25300) {
          var seq__22895_25301__$1 = temp__4092__auto___25300;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22895_25301__$1)) {
            var c__11077__auto___25302 = cljs.core.chunk_first.call(null, seq__22895_25301__$1);
            var G__25303 = cljs.core.chunk_rest.call(null, seq__22895_25301__$1);
            var G__25304 = c__11077__auto___25302;
            var G__25305 = cljs.core.count.call(null, c__11077__auto___25302);
            var G__25306 = 0;
            seq__22895_25291 = G__25303;
            chunk__22896_25292 = G__25304;
            count__22897_25293 = G__25305;
            i__22898_25294 = G__25306;
            continue;
          } else {
            var arg__11936__auto___25307 = cljs.core.first.call(null, seq__22895_25301__$1);
            a__11935__auto__.push(arg__11936__auto___25307);
            var G__25308 = cljs.core.next.call(null, seq__22895_25301__$1);
            var G__25309 = null;
            var G__25310 = 0;
            var G__25311 = 0;
            seq__22895_25291 = G__25308;
            chunk__22896_25292 = G__25309;
            count__22897_25293 = G__25310;
            i__22898_25294 = G__25311;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.track.apply(null, a__11935__auto__);
  };
  var track = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return track__delegate.call(this, args__11934__auto__);
  };
  track.cljs$lang$maxFixedArity = 0;
  track.cljs$lang$applyTo = function(arglist__25312) {
    var args__11934__auto__ = cljs.core.seq(arglist__25312);
    return track__delegate(args__11934__auto__);
  };
  track.cljs$core$IFn$_invoke$arity$variadic = track__delegate;
  return track;
}();
quiescent.dom.u = function() {
  var u__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22903_25313 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22904_25314 = null;
    var count__22905_25315 = 0;
    var i__22906_25316 = 0;
    while (true) {
      if (i__22906_25316 < count__22905_25315) {
        var arg__11936__auto___25317 = cljs.core._nth.call(null, chunk__22904_25314, i__22906_25316);
        a__11935__auto__.push(arg__11936__auto___25317);
        var G__25318 = seq__22903_25313;
        var G__25319 = chunk__22904_25314;
        var G__25320 = count__22905_25315;
        var G__25321 = i__22906_25316 + 1;
        seq__22903_25313 = G__25318;
        chunk__22904_25314 = G__25319;
        count__22905_25315 = G__25320;
        i__22906_25316 = G__25321;
        continue;
      } else {
        var temp__4092__auto___25322 = cljs.core.seq.call(null, seq__22903_25313);
        if (temp__4092__auto___25322) {
          var seq__22903_25323__$1 = temp__4092__auto___25322;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22903_25323__$1)) {
            var c__11077__auto___25324 = cljs.core.chunk_first.call(null, seq__22903_25323__$1);
            var G__25325 = cljs.core.chunk_rest.call(null, seq__22903_25323__$1);
            var G__25326 = c__11077__auto___25324;
            var G__25327 = cljs.core.count.call(null, c__11077__auto___25324);
            var G__25328 = 0;
            seq__22903_25313 = G__25325;
            chunk__22904_25314 = G__25326;
            count__22905_25315 = G__25327;
            i__22906_25316 = G__25328;
            continue;
          } else {
            var arg__11936__auto___25329 = cljs.core.first.call(null, seq__22903_25323__$1);
            a__11935__auto__.push(arg__11936__auto___25329);
            var G__25330 = cljs.core.next.call(null, seq__22903_25323__$1);
            var G__25331 = null;
            var G__25332 = 0;
            var G__25333 = 0;
            seq__22903_25313 = G__25330;
            chunk__22904_25314 = G__25331;
            count__22905_25315 = G__25332;
            i__22906_25316 = G__25333;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.u.apply(null, a__11935__auto__);
  };
  var u = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return u__delegate.call(this, args__11934__auto__);
  };
  u.cljs$lang$maxFixedArity = 0;
  u.cljs$lang$applyTo = function(arglist__25334) {
    var args__11934__auto__ = cljs.core.seq(arglist__25334);
    return u__delegate(args__11934__auto__);
  };
  u.cljs$core$IFn$_invoke$arity$variadic = u__delegate;
  return u;
}();
quiescent.dom.ul = function() {
  var ul__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22911_25335 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22912_25336 = null;
    var count__22913_25337 = 0;
    var i__22914_25338 = 0;
    while (true) {
      if (i__22914_25338 < count__22913_25337) {
        var arg__11936__auto___25339 = cljs.core._nth.call(null, chunk__22912_25336, i__22914_25338);
        a__11935__auto__.push(arg__11936__auto___25339);
        var G__25340 = seq__22911_25335;
        var G__25341 = chunk__22912_25336;
        var G__25342 = count__22913_25337;
        var G__25343 = i__22914_25338 + 1;
        seq__22911_25335 = G__25340;
        chunk__22912_25336 = G__25341;
        count__22913_25337 = G__25342;
        i__22914_25338 = G__25343;
        continue;
      } else {
        var temp__4092__auto___25344 = cljs.core.seq.call(null, seq__22911_25335);
        if (temp__4092__auto___25344) {
          var seq__22911_25345__$1 = temp__4092__auto___25344;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22911_25345__$1)) {
            var c__11077__auto___25346 = cljs.core.chunk_first.call(null, seq__22911_25345__$1);
            var G__25347 = cljs.core.chunk_rest.call(null, seq__22911_25345__$1);
            var G__25348 = c__11077__auto___25346;
            var G__25349 = cljs.core.count.call(null, c__11077__auto___25346);
            var G__25350 = 0;
            seq__22911_25335 = G__25347;
            chunk__22912_25336 = G__25348;
            count__22913_25337 = G__25349;
            i__22914_25338 = G__25350;
            continue;
          } else {
            var arg__11936__auto___25351 = cljs.core.first.call(null, seq__22911_25345__$1);
            a__11935__auto__.push(arg__11936__auto___25351);
            var G__25352 = cljs.core.next.call(null, seq__22911_25345__$1);
            var G__25353 = null;
            var G__25354 = 0;
            var G__25355 = 0;
            seq__22911_25335 = G__25352;
            chunk__22912_25336 = G__25353;
            count__22913_25337 = G__25354;
            i__22914_25338 = G__25355;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.ul.apply(null, a__11935__auto__);
  };
  var ul = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return ul__delegate.call(this, args__11934__auto__);
  };
  ul.cljs$lang$maxFixedArity = 0;
  ul.cljs$lang$applyTo = function(arglist__25356) {
    var args__11934__auto__ = cljs.core.seq(arglist__25356);
    return ul__delegate(args__11934__auto__);
  };
  ul.cljs$core$IFn$_invoke$arity$variadic = ul__delegate;
  return ul;
}();
quiescent.dom.var$ = function() {
  var var$__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22919_25357 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22920_25358 = null;
    var count__22921_25359 = 0;
    var i__22922_25360 = 0;
    while (true) {
      if (i__22922_25360 < count__22921_25359) {
        var arg__11936__auto___25361 = cljs.core._nth.call(null, chunk__22920_25358, i__22922_25360);
        a__11935__auto__.push(arg__11936__auto___25361);
        var G__25362 = seq__22919_25357;
        var G__25363 = chunk__22920_25358;
        var G__25364 = count__22921_25359;
        var G__25365 = i__22922_25360 + 1;
        seq__22919_25357 = G__25362;
        chunk__22920_25358 = G__25363;
        count__22921_25359 = G__25364;
        i__22922_25360 = G__25365;
        continue;
      } else {
        var temp__4092__auto___25366 = cljs.core.seq.call(null, seq__22919_25357);
        if (temp__4092__auto___25366) {
          var seq__22919_25367__$1 = temp__4092__auto___25366;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22919_25367__$1)) {
            var c__11077__auto___25368 = cljs.core.chunk_first.call(null, seq__22919_25367__$1);
            var G__25369 = cljs.core.chunk_rest.call(null, seq__22919_25367__$1);
            var G__25370 = c__11077__auto___25368;
            var G__25371 = cljs.core.count.call(null, c__11077__auto___25368);
            var G__25372 = 0;
            seq__22919_25357 = G__25369;
            chunk__22920_25358 = G__25370;
            count__22921_25359 = G__25371;
            i__22922_25360 = G__25372;
            continue;
          } else {
            var arg__11936__auto___25373 = cljs.core.first.call(null, seq__22919_25367__$1);
            a__11935__auto__.push(arg__11936__auto___25373);
            var G__25374 = cljs.core.next.call(null, seq__22919_25367__$1);
            var G__25375 = null;
            var G__25376 = 0;
            var G__25377 = 0;
            seq__22919_25357 = G__25374;
            chunk__22920_25358 = G__25375;
            count__22921_25359 = G__25376;
            i__22922_25360 = G__25377;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.var$.apply(null, a__11935__auto__);
  };
  var var$ = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return var$__delegate.call(this, args__11934__auto__);
  };
  var$.cljs$lang$maxFixedArity = 0;
  var$.cljs$lang$applyTo = function(arglist__25378) {
    var args__11934__auto__ = cljs.core.seq(arglist__25378);
    return var$__delegate(args__11934__auto__);
  };
  var$.cljs$core$IFn$_invoke$arity$variadic = var$__delegate;
  return var$;
}();
quiescent.dom.video = function() {
  var video__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22927_25379 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22928_25380 = null;
    var count__22929_25381 = 0;
    var i__22930_25382 = 0;
    while (true) {
      if (i__22930_25382 < count__22929_25381) {
        var arg__11936__auto___25383 = cljs.core._nth.call(null, chunk__22928_25380, i__22930_25382);
        a__11935__auto__.push(arg__11936__auto___25383);
        var G__25384 = seq__22927_25379;
        var G__25385 = chunk__22928_25380;
        var G__25386 = count__22929_25381;
        var G__25387 = i__22930_25382 + 1;
        seq__22927_25379 = G__25384;
        chunk__22928_25380 = G__25385;
        count__22929_25381 = G__25386;
        i__22930_25382 = G__25387;
        continue;
      } else {
        var temp__4092__auto___25388 = cljs.core.seq.call(null, seq__22927_25379);
        if (temp__4092__auto___25388) {
          var seq__22927_25389__$1 = temp__4092__auto___25388;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22927_25389__$1)) {
            var c__11077__auto___25390 = cljs.core.chunk_first.call(null, seq__22927_25389__$1);
            var G__25391 = cljs.core.chunk_rest.call(null, seq__22927_25389__$1);
            var G__25392 = c__11077__auto___25390;
            var G__25393 = cljs.core.count.call(null, c__11077__auto___25390);
            var G__25394 = 0;
            seq__22927_25379 = G__25391;
            chunk__22928_25380 = G__25392;
            count__22929_25381 = G__25393;
            i__22930_25382 = G__25394;
            continue;
          } else {
            var arg__11936__auto___25395 = cljs.core.first.call(null, seq__22927_25389__$1);
            a__11935__auto__.push(arg__11936__auto___25395);
            var G__25396 = cljs.core.next.call(null, seq__22927_25389__$1);
            var G__25397 = null;
            var G__25398 = 0;
            var G__25399 = 0;
            seq__22927_25379 = G__25396;
            chunk__22928_25380 = G__25397;
            count__22929_25381 = G__25398;
            i__22930_25382 = G__25399;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.video.apply(null, a__11935__auto__);
  };
  var video = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return video__delegate.call(this, args__11934__auto__);
  };
  video.cljs$lang$maxFixedArity = 0;
  video.cljs$lang$applyTo = function(arglist__25400) {
    var args__11934__auto__ = cljs.core.seq(arglist__25400);
    return video__delegate(args__11934__auto__);
  };
  video.cljs$core$IFn$_invoke$arity$variadic = video__delegate;
  return video;
}();
quiescent.dom.wbr = function() {
  var wbr__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22935_25401 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22936_25402 = null;
    var count__22937_25403 = 0;
    var i__22938_25404 = 0;
    while (true) {
      if (i__22938_25404 < count__22937_25403) {
        var arg__11936__auto___25405 = cljs.core._nth.call(null, chunk__22936_25402, i__22938_25404);
        a__11935__auto__.push(arg__11936__auto___25405);
        var G__25406 = seq__22935_25401;
        var G__25407 = chunk__22936_25402;
        var G__25408 = count__22937_25403;
        var G__25409 = i__22938_25404 + 1;
        seq__22935_25401 = G__25406;
        chunk__22936_25402 = G__25407;
        count__22937_25403 = G__25408;
        i__22938_25404 = G__25409;
        continue;
      } else {
        var temp__4092__auto___25410 = cljs.core.seq.call(null, seq__22935_25401);
        if (temp__4092__auto___25410) {
          var seq__22935_25411__$1 = temp__4092__auto___25410;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22935_25411__$1)) {
            var c__11077__auto___25412 = cljs.core.chunk_first.call(null, seq__22935_25411__$1);
            var G__25413 = cljs.core.chunk_rest.call(null, seq__22935_25411__$1);
            var G__25414 = c__11077__auto___25412;
            var G__25415 = cljs.core.count.call(null, c__11077__auto___25412);
            var G__25416 = 0;
            seq__22935_25401 = G__25413;
            chunk__22936_25402 = G__25414;
            count__22937_25403 = G__25415;
            i__22938_25404 = G__25416;
            continue;
          } else {
            var arg__11936__auto___25417 = cljs.core.first.call(null, seq__22935_25411__$1);
            a__11935__auto__.push(arg__11936__auto___25417);
            var G__25418 = cljs.core.next.call(null, seq__22935_25411__$1);
            var G__25419 = null;
            var G__25420 = 0;
            var G__25421 = 0;
            seq__22935_25401 = G__25418;
            chunk__22936_25402 = G__25419;
            count__22937_25403 = G__25420;
            i__22938_25404 = G__25421;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.wbr.apply(null, a__11935__auto__);
  };
  var wbr = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return wbr__delegate.call(this, args__11934__auto__);
  };
  wbr.cljs$lang$maxFixedArity = 0;
  wbr.cljs$lang$applyTo = function(arglist__25422) {
    var args__11934__auto__ = cljs.core.seq(arglist__25422);
    return wbr__delegate(args__11934__auto__);
  };
  wbr.cljs$core$IFn$_invoke$arity$variadic = wbr__delegate;
  return wbr;
}();
quiescent.dom.circle = function() {
  var circle__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22943_25423 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22944_25424 = null;
    var count__22945_25425 = 0;
    var i__22946_25426 = 0;
    while (true) {
      if (i__22946_25426 < count__22945_25425) {
        var arg__11936__auto___25427 = cljs.core._nth.call(null, chunk__22944_25424, i__22946_25426);
        a__11935__auto__.push(arg__11936__auto___25427);
        var G__25428 = seq__22943_25423;
        var G__25429 = chunk__22944_25424;
        var G__25430 = count__22945_25425;
        var G__25431 = i__22946_25426 + 1;
        seq__22943_25423 = G__25428;
        chunk__22944_25424 = G__25429;
        count__22945_25425 = G__25430;
        i__22946_25426 = G__25431;
        continue;
      } else {
        var temp__4092__auto___25432 = cljs.core.seq.call(null, seq__22943_25423);
        if (temp__4092__auto___25432) {
          var seq__22943_25433__$1 = temp__4092__auto___25432;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22943_25433__$1)) {
            var c__11077__auto___25434 = cljs.core.chunk_first.call(null, seq__22943_25433__$1);
            var G__25435 = cljs.core.chunk_rest.call(null, seq__22943_25433__$1);
            var G__25436 = c__11077__auto___25434;
            var G__25437 = cljs.core.count.call(null, c__11077__auto___25434);
            var G__25438 = 0;
            seq__22943_25423 = G__25435;
            chunk__22944_25424 = G__25436;
            count__22945_25425 = G__25437;
            i__22946_25426 = G__25438;
            continue;
          } else {
            var arg__11936__auto___25439 = cljs.core.first.call(null, seq__22943_25433__$1);
            a__11935__auto__.push(arg__11936__auto___25439);
            var G__25440 = cljs.core.next.call(null, seq__22943_25433__$1);
            var G__25441 = null;
            var G__25442 = 0;
            var G__25443 = 0;
            seq__22943_25423 = G__25440;
            chunk__22944_25424 = G__25441;
            count__22945_25425 = G__25442;
            i__22946_25426 = G__25443;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.circle.apply(null, a__11935__auto__);
  };
  var circle = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return circle__delegate.call(this, args__11934__auto__);
  };
  circle.cljs$lang$maxFixedArity = 0;
  circle.cljs$lang$applyTo = function(arglist__25444) {
    var args__11934__auto__ = cljs.core.seq(arglist__25444);
    return circle__delegate(args__11934__auto__);
  };
  circle.cljs$core$IFn$_invoke$arity$variadic = circle__delegate;
  return circle;
}();
quiescent.dom.g = function() {
  var g__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22951_25445 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22952_25446 = null;
    var count__22953_25447 = 0;
    var i__22954_25448 = 0;
    while (true) {
      if (i__22954_25448 < count__22953_25447) {
        var arg__11936__auto___25449 = cljs.core._nth.call(null, chunk__22952_25446, i__22954_25448);
        a__11935__auto__.push(arg__11936__auto___25449);
        var G__25450 = seq__22951_25445;
        var G__25451 = chunk__22952_25446;
        var G__25452 = count__22953_25447;
        var G__25453 = i__22954_25448 + 1;
        seq__22951_25445 = G__25450;
        chunk__22952_25446 = G__25451;
        count__22953_25447 = G__25452;
        i__22954_25448 = G__25453;
        continue;
      } else {
        var temp__4092__auto___25454 = cljs.core.seq.call(null, seq__22951_25445);
        if (temp__4092__auto___25454) {
          var seq__22951_25455__$1 = temp__4092__auto___25454;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22951_25455__$1)) {
            var c__11077__auto___25456 = cljs.core.chunk_first.call(null, seq__22951_25455__$1);
            var G__25457 = cljs.core.chunk_rest.call(null, seq__22951_25455__$1);
            var G__25458 = c__11077__auto___25456;
            var G__25459 = cljs.core.count.call(null, c__11077__auto___25456);
            var G__25460 = 0;
            seq__22951_25445 = G__25457;
            chunk__22952_25446 = G__25458;
            count__22953_25447 = G__25459;
            i__22954_25448 = G__25460;
            continue;
          } else {
            var arg__11936__auto___25461 = cljs.core.first.call(null, seq__22951_25455__$1);
            a__11935__auto__.push(arg__11936__auto___25461);
            var G__25462 = cljs.core.next.call(null, seq__22951_25455__$1);
            var G__25463 = null;
            var G__25464 = 0;
            var G__25465 = 0;
            seq__22951_25445 = G__25462;
            chunk__22952_25446 = G__25463;
            count__22953_25447 = G__25464;
            i__22954_25448 = G__25465;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.g.apply(null, a__11935__auto__);
  };
  var g = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return g__delegate.call(this, args__11934__auto__);
  };
  g.cljs$lang$maxFixedArity = 0;
  g.cljs$lang$applyTo = function(arglist__25466) {
    var args__11934__auto__ = cljs.core.seq(arglist__25466);
    return g__delegate(args__11934__auto__);
  };
  g.cljs$core$IFn$_invoke$arity$variadic = g__delegate;
  return g;
}();
quiescent.dom.line = function() {
  var line__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22959_25467 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22960_25468 = null;
    var count__22961_25469 = 0;
    var i__22962_25470 = 0;
    while (true) {
      if (i__22962_25470 < count__22961_25469) {
        var arg__11936__auto___25471 = cljs.core._nth.call(null, chunk__22960_25468, i__22962_25470);
        a__11935__auto__.push(arg__11936__auto___25471);
        var G__25472 = seq__22959_25467;
        var G__25473 = chunk__22960_25468;
        var G__25474 = count__22961_25469;
        var G__25475 = i__22962_25470 + 1;
        seq__22959_25467 = G__25472;
        chunk__22960_25468 = G__25473;
        count__22961_25469 = G__25474;
        i__22962_25470 = G__25475;
        continue;
      } else {
        var temp__4092__auto___25476 = cljs.core.seq.call(null, seq__22959_25467);
        if (temp__4092__auto___25476) {
          var seq__22959_25477__$1 = temp__4092__auto___25476;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22959_25477__$1)) {
            var c__11077__auto___25478 = cljs.core.chunk_first.call(null, seq__22959_25477__$1);
            var G__25479 = cljs.core.chunk_rest.call(null, seq__22959_25477__$1);
            var G__25480 = c__11077__auto___25478;
            var G__25481 = cljs.core.count.call(null, c__11077__auto___25478);
            var G__25482 = 0;
            seq__22959_25467 = G__25479;
            chunk__22960_25468 = G__25480;
            count__22961_25469 = G__25481;
            i__22962_25470 = G__25482;
            continue;
          } else {
            var arg__11936__auto___25483 = cljs.core.first.call(null, seq__22959_25477__$1);
            a__11935__auto__.push(arg__11936__auto___25483);
            var G__25484 = cljs.core.next.call(null, seq__22959_25477__$1);
            var G__25485 = null;
            var G__25486 = 0;
            var G__25487 = 0;
            seq__22959_25467 = G__25484;
            chunk__22960_25468 = G__25485;
            count__22961_25469 = G__25486;
            i__22962_25470 = G__25487;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.line.apply(null, a__11935__auto__);
  };
  var line = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return line__delegate.call(this, args__11934__auto__);
  };
  line.cljs$lang$maxFixedArity = 0;
  line.cljs$lang$applyTo = function(arglist__25488) {
    var args__11934__auto__ = cljs.core.seq(arglist__25488);
    return line__delegate(args__11934__auto__);
  };
  line.cljs$core$IFn$_invoke$arity$variadic = line__delegate;
  return line;
}();
quiescent.dom.path = function() {
  var path__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22967_25489 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22968_25490 = null;
    var count__22969_25491 = 0;
    var i__22970_25492 = 0;
    while (true) {
      if (i__22970_25492 < count__22969_25491) {
        var arg__11936__auto___25493 = cljs.core._nth.call(null, chunk__22968_25490, i__22970_25492);
        a__11935__auto__.push(arg__11936__auto___25493);
        var G__25494 = seq__22967_25489;
        var G__25495 = chunk__22968_25490;
        var G__25496 = count__22969_25491;
        var G__25497 = i__22970_25492 + 1;
        seq__22967_25489 = G__25494;
        chunk__22968_25490 = G__25495;
        count__22969_25491 = G__25496;
        i__22970_25492 = G__25497;
        continue;
      } else {
        var temp__4092__auto___25498 = cljs.core.seq.call(null, seq__22967_25489);
        if (temp__4092__auto___25498) {
          var seq__22967_25499__$1 = temp__4092__auto___25498;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22967_25499__$1)) {
            var c__11077__auto___25500 = cljs.core.chunk_first.call(null, seq__22967_25499__$1);
            var G__25501 = cljs.core.chunk_rest.call(null, seq__22967_25499__$1);
            var G__25502 = c__11077__auto___25500;
            var G__25503 = cljs.core.count.call(null, c__11077__auto___25500);
            var G__25504 = 0;
            seq__22967_25489 = G__25501;
            chunk__22968_25490 = G__25502;
            count__22969_25491 = G__25503;
            i__22970_25492 = G__25504;
            continue;
          } else {
            var arg__11936__auto___25505 = cljs.core.first.call(null, seq__22967_25499__$1);
            a__11935__auto__.push(arg__11936__auto___25505);
            var G__25506 = cljs.core.next.call(null, seq__22967_25499__$1);
            var G__25507 = null;
            var G__25508 = 0;
            var G__25509 = 0;
            seq__22967_25489 = G__25506;
            chunk__22968_25490 = G__25507;
            count__22969_25491 = G__25508;
            i__22970_25492 = G__25509;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.path.apply(null, a__11935__auto__);
  };
  var path = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return path__delegate.call(this, args__11934__auto__);
  };
  path.cljs$lang$maxFixedArity = 0;
  path.cljs$lang$applyTo = function(arglist__25510) {
    var args__11934__auto__ = cljs.core.seq(arglist__25510);
    return path__delegate(args__11934__auto__);
  };
  path.cljs$core$IFn$_invoke$arity$variadic = path__delegate;
  return path;
}();
quiescent.dom.polygon = function() {
  var polygon__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22975_25511 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22976_25512 = null;
    var count__22977_25513 = 0;
    var i__22978_25514 = 0;
    while (true) {
      if (i__22978_25514 < count__22977_25513) {
        var arg__11936__auto___25515 = cljs.core._nth.call(null, chunk__22976_25512, i__22978_25514);
        a__11935__auto__.push(arg__11936__auto___25515);
        var G__25516 = seq__22975_25511;
        var G__25517 = chunk__22976_25512;
        var G__25518 = count__22977_25513;
        var G__25519 = i__22978_25514 + 1;
        seq__22975_25511 = G__25516;
        chunk__22976_25512 = G__25517;
        count__22977_25513 = G__25518;
        i__22978_25514 = G__25519;
        continue;
      } else {
        var temp__4092__auto___25520 = cljs.core.seq.call(null, seq__22975_25511);
        if (temp__4092__auto___25520) {
          var seq__22975_25521__$1 = temp__4092__auto___25520;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22975_25521__$1)) {
            var c__11077__auto___25522 = cljs.core.chunk_first.call(null, seq__22975_25521__$1);
            var G__25523 = cljs.core.chunk_rest.call(null, seq__22975_25521__$1);
            var G__25524 = c__11077__auto___25522;
            var G__25525 = cljs.core.count.call(null, c__11077__auto___25522);
            var G__25526 = 0;
            seq__22975_25511 = G__25523;
            chunk__22976_25512 = G__25524;
            count__22977_25513 = G__25525;
            i__22978_25514 = G__25526;
            continue;
          } else {
            var arg__11936__auto___25527 = cljs.core.first.call(null, seq__22975_25521__$1);
            a__11935__auto__.push(arg__11936__auto___25527);
            var G__25528 = cljs.core.next.call(null, seq__22975_25521__$1);
            var G__25529 = null;
            var G__25530 = 0;
            var G__25531 = 0;
            seq__22975_25511 = G__25528;
            chunk__22976_25512 = G__25529;
            count__22977_25513 = G__25530;
            i__22978_25514 = G__25531;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.polygon.apply(null, a__11935__auto__);
  };
  var polygon = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return polygon__delegate.call(this, args__11934__auto__);
  };
  polygon.cljs$lang$maxFixedArity = 0;
  polygon.cljs$lang$applyTo = function(arglist__25532) {
    var args__11934__auto__ = cljs.core.seq(arglist__25532);
    return polygon__delegate(args__11934__auto__);
  };
  polygon.cljs$core$IFn$_invoke$arity$variadic = polygon__delegate;
  return polygon;
}();
quiescent.dom.polyline = function() {
  var polyline__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22983_25533 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22984_25534 = null;
    var count__22985_25535 = 0;
    var i__22986_25536 = 0;
    while (true) {
      if (i__22986_25536 < count__22985_25535) {
        var arg__11936__auto___25537 = cljs.core._nth.call(null, chunk__22984_25534, i__22986_25536);
        a__11935__auto__.push(arg__11936__auto___25537);
        var G__25538 = seq__22983_25533;
        var G__25539 = chunk__22984_25534;
        var G__25540 = count__22985_25535;
        var G__25541 = i__22986_25536 + 1;
        seq__22983_25533 = G__25538;
        chunk__22984_25534 = G__25539;
        count__22985_25535 = G__25540;
        i__22986_25536 = G__25541;
        continue;
      } else {
        var temp__4092__auto___25542 = cljs.core.seq.call(null, seq__22983_25533);
        if (temp__4092__auto___25542) {
          var seq__22983_25543__$1 = temp__4092__auto___25542;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22983_25543__$1)) {
            var c__11077__auto___25544 = cljs.core.chunk_first.call(null, seq__22983_25543__$1);
            var G__25545 = cljs.core.chunk_rest.call(null, seq__22983_25543__$1);
            var G__25546 = c__11077__auto___25544;
            var G__25547 = cljs.core.count.call(null, c__11077__auto___25544);
            var G__25548 = 0;
            seq__22983_25533 = G__25545;
            chunk__22984_25534 = G__25546;
            count__22985_25535 = G__25547;
            i__22986_25536 = G__25548;
            continue;
          } else {
            var arg__11936__auto___25549 = cljs.core.first.call(null, seq__22983_25543__$1);
            a__11935__auto__.push(arg__11936__auto___25549);
            var G__25550 = cljs.core.next.call(null, seq__22983_25543__$1);
            var G__25551 = null;
            var G__25552 = 0;
            var G__25553 = 0;
            seq__22983_25533 = G__25550;
            chunk__22984_25534 = G__25551;
            count__22985_25535 = G__25552;
            i__22986_25536 = G__25553;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.polyline.apply(null, a__11935__auto__);
  };
  var polyline = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return polyline__delegate.call(this, args__11934__auto__);
  };
  polyline.cljs$lang$maxFixedArity = 0;
  polyline.cljs$lang$applyTo = function(arglist__25554) {
    var args__11934__auto__ = cljs.core.seq(arglist__25554);
    return polyline__delegate(args__11934__auto__);
  };
  polyline.cljs$core$IFn$_invoke$arity$variadic = polyline__delegate;
  return polyline;
}();
quiescent.dom.rect = function() {
  var rect__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22991_25555 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22992_25556 = null;
    var count__22993_25557 = 0;
    var i__22994_25558 = 0;
    while (true) {
      if (i__22994_25558 < count__22993_25557) {
        var arg__11936__auto___25559 = cljs.core._nth.call(null, chunk__22992_25556, i__22994_25558);
        a__11935__auto__.push(arg__11936__auto___25559);
        var G__25560 = seq__22991_25555;
        var G__25561 = chunk__22992_25556;
        var G__25562 = count__22993_25557;
        var G__25563 = i__22994_25558 + 1;
        seq__22991_25555 = G__25560;
        chunk__22992_25556 = G__25561;
        count__22993_25557 = G__25562;
        i__22994_25558 = G__25563;
        continue;
      } else {
        var temp__4092__auto___25564 = cljs.core.seq.call(null, seq__22991_25555);
        if (temp__4092__auto___25564) {
          var seq__22991_25565__$1 = temp__4092__auto___25564;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22991_25565__$1)) {
            var c__11077__auto___25566 = cljs.core.chunk_first.call(null, seq__22991_25565__$1);
            var G__25567 = cljs.core.chunk_rest.call(null, seq__22991_25565__$1);
            var G__25568 = c__11077__auto___25566;
            var G__25569 = cljs.core.count.call(null, c__11077__auto___25566);
            var G__25570 = 0;
            seq__22991_25555 = G__25567;
            chunk__22992_25556 = G__25568;
            count__22993_25557 = G__25569;
            i__22994_25558 = G__25570;
            continue;
          } else {
            var arg__11936__auto___25571 = cljs.core.first.call(null, seq__22991_25565__$1);
            a__11935__auto__.push(arg__11936__auto___25571);
            var G__25572 = cljs.core.next.call(null, seq__22991_25565__$1);
            var G__25573 = null;
            var G__25574 = 0;
            var G__25575 = 0;
            seq__22991_25555 = G__25572;
            chunk__22992_25556 = G__25573;
            count__22993_25557 = G__25574;
            i__22994_25558 = G__25575;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.rect.apply(null, a__11935__auto__);
  };
  var rect = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return rect__delegate.call(this, args__11934__auto__);
  };
  rect.cljs$lang$maxFixedArity = 0;
  rect.cljs$lang$applyTo = function(arglist__25576) {
    var args__11934__auto__ = cljs.core.seq(arglist__25576);
    return rect__delegate(args__11934__auto__);
  };
  rect.cljs$core$IFn$_invoke$arity$variadic = rect__delegate;
  return rect;
}();
quiescent.dom.svg = function() {
  var svg__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22999_25577 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__23000_25578 = null;
    var count__23001_25579 = 0;
    var i__23002_25580 = 0;
    while (true) {
      if (i__23002_25580 < count__23001_25579) {
        var arg__11936__auto___25581 = cljs.core._nth.call(null, chunk__23000_25578, i__23002_25580);
        a__11935__auto__.push(arg__11936__auto___25581);
        var G__25582 = seq__22999_25577;
        var G__25583 = chunk__23000_25578;
        var G__25584 = count__23001_25579;
        var G__25585 = i__23002_25580 + 1;
        seq__22999_25577 = G__25582;
        chunk__23000_25578 = G__25583;
        count__23001_25579 = G__25584;
        i__23002_25580 = G__25585;
        continue;
      } else {
        var temp__4092__auto___25586 = cljs.core.seq.call(null, seq__22999_25577);
        if (temp__4092__auto___25586) {
          var seq__22999_25587__$1 = temp__4092__auto___25586;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22999_25587__$1)) {
            var c__11077__auto___25588 = cljs.core.chunk_first.call(null, seq__22999_25587__$1);
            var G__25589 = cljs.core.chunk_rest.call(null, seq__22999_25587__$1);
            var G__25590 = c__11077__auto___25588;
            var G__25591 = cljs.core.count.call(null, c__11077__auto___25588);
            var G__25592 = 0;
            seq__22999_25577 = G__25589;
            chunk__23000_25578 = G__25590;
            count__23001_25579 = G__25591;
            i__23002_25580 = G__25592;
            continue;
          } else {
            var arg__11936__auto___25593 = cljs.core.first.call(null, seq__22999_25587__$1);
            a__11935__auto__.push(arg__11936__auto___25593);
            var G__25594 = cljs.core.next.call(null, seq__22999_25587__$1);
            var G__25595 = null;
            var G__25596 = 0;
            var G__25597 = 0;
            seq__22999_25577 = G__25594;
            chunk__23000_25578 = G__25595;
            count__23001_25579 = G__25596;
            i__23002_25580 = G__25597;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.svg.apply(null, a__11935__auto__);
  };
  var svg = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return svg__delegate.call(this, args__11934__auto__);
  };
  svg.cljs$lang$maxFixedArity = 0;
  svg.cljs$lang$applyTo = function(arglist__25598) {
    var args__11934__auto__ = cljs.core.seq(arglist__25598);
    return svg__delegate(args__11934__auto__);
  };
  svg.cljs$core$IFn$_invoke$arity$variadic = svg__delegate;
  return svg;
}();
quiescent.dom.text = function() {
  var text__delegate = function(args__11934__auto__) {
    var a__11935__auto__ = [];
    a__11935__auto__.push(quiescent.dom.js_props.call(null, cljs.core.first.call(null, args__11934__auto__)));
    var seq__22311_25599 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__11934__auto__));
    var chunk__22312_25600 = null;
    var count__22313_25601 = 0;
    var i__22314_25602 = 0;
    while (true) {
      if (i__22314_25602 < count__22313_25601) {
        var arg__11936__auto___25603 = cljs.core._nth.call(null, chunk__22312_25600, i__22314_25602);
        a__11935__auto__.push(arg__11936__auto___25603);
        var G__25604 = seq__22311_25599;
        var G__25605 = chunk__22312_25600;
        var G__25606 = count__22313_25601;
        var G__25607 = i__22314_25602 + 1;
        seq__22311_25599 = G__25604;
        chunk__22312_25600 = G__25605;
        count__22313_25601 = G__25606;
        i__22314_25602 = G__25607;
        continue;
      } else {
        var temp__4092__auto___25608 = cljs.core.seq.call(null, seq__22311_25599);
        if (temp__4092__auto___25608) {
          var seq__22311_25609__$1 = temp__4092__auto___25608;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22311_25609__$1)) {
            var c__11077__auto___25610 = cljs.core.chunk_first.call(null, seq__22311_25609__$1);
            var G__25611 = cljs.core.chunk_rest.call(null, seq__22311_25609__$1);
            var G__25612 = c__11077__auto___25610;
            var G__25613 = cljs.core.count.call(null, c__11077__auto___25610);
            var G__25614 = 0;
            seq__22311_25599 = G__25611;
            chunk__22312_25600 = G__25612;
            count__22313_25601 = G__25613;
            i__22314_25602 = G__25614;
            continue;
          } else {
            var arg__11936__auto___25615 = cljs.core.first.call(null, seq__22311_25609__$1);
            a__11935__auto__.push(arg__11936__auto___25615);
            var G__25616 = cljs.core.next.call(null, seq__22311_25609__$1);
            var G__25617 = null;
            var G__25618 = 0;
            var G__25619 = 0;
            seq__22311_25599 = G__25616;
            chunk__22312_25600 = G__25617;
            count__22313_25601 = G__25618;
            i__22314_25602 = G__25619;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.text.apply(null, a__11935__auto__);
  };
  var text = function(var_args) {
    var args__11934__auto__ = null;
    if (arguments.length > 0) {
      args__11934__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return text__delegate.call(this, args__11934__auto__);
  };
  text.cljs$lang$maxFixedArity = 0;
  text.cljs$lang$applyTo = function(arglist__25620) {
    var args__11934__auto__ = cljs.core.seq(arglist__25620);
    return text__delegate(args__11934__auto__);
  };
  text.cljs$core$IFn$_invoke$arity$variadic = text__delegate;
  return text;
}();
goog.provide("goog.math");
goog.require("goog.array");
goog.require("goog.asserts");
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a);
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a);
};
goog.math.clamp = function(value, min, max) {
  return Math.min(Math.max(value, min), max);
};
goog.math.modulo = function(a, b) {
  var r = a % b;
  return r * b < 0 ? r + b : r;
};
goog.math.lerp = function(a, b, x) {
  return a + x * (b - a);
};
goog.math.nearlyEquals = function(a, b, opt_tolerance) {
  return Math.abs(a - b) <= (opt_tolerance || 1E-6);
};
goog.math.standardAngle = function(angle) {
  return goog.math.modulo(angle, 360);
};
goog.math.toRadians = function(angleDegrees) {
  return angleDegrees * Math.PI / 180;
};
goog.math.toDegrees = function(angleRadians) {
  return angleRadians * 180 / Math.PI;
};
goog.math.angleDx = function(degrees, radius) {
  return radius * Math.cos(goog.math.toRadians(degrees));
};
goog.math.angleDy = function(degrees, radius) {
  return radius * Math.sin(goog.math.toRadians(degrees));
};
goog.math.angle = function(x1, y1, x2, y2) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)));
};
goog.math.angleDifference = function(startAngle, endAngle) {
  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);
  if (d > 180) {
    d = d - 360;
  } else {
    if (d <= -180) {
      d = 360 + d;
    }
  }
  return d;
};
goog.math.sign = function(x) {
  return x == 0 ? 0 : x < 0 ? -1 : 1;
};
goog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {
  var compare = opt_compareFn || function(a, b) {
    return a == b;
  };
  var collect = opt_collectorFn || function(i1, i2) {
    return array1[i1];
  };
  var length1 = array1.length;
  var length2 = array2.length;
  var arr = [];
  for (var i = 0;i < length1 + 1;i++) {
    arr[i] = [];
    arr[i][0] = 0;
  }
  for (var j = 0;j < length2 + 1;j++) {
    arr[0][j] = 0;
  }
  for (i = 1;i <= length1;i++) {
    for (j = 1;j <= length1;j++) {
      if (compare(array1[i - 1], array2[j - 1])) {
        arr[i][j] = arr[i - 1][j - 1] + 1;
      } else {
        arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1]);
      }
    }
  }
  var result = [];
  var i = length1, j = length2;
  while (i > 0 && j > 0) {
    if (compare(array1[i - 1], array2[j - 1])) {
      result.unshift(collect(i - 1, j - 1));
      i--;
      j--;
    } else {
      if (arr[i - 1][j] > arr[i][j - 1]) {
        i--;
      } else {
        j--;
      }
    }
  }
  return result;
};
goog.math.sum = function(var_args) {
  return(goog.array.reduce(arguments, function(sum, value) {
    return sum + value;
  }, 0));
};
goog.math.average = function(var_args) {
  return goog.math.sum.apply(null, arguments) / arguments.length;
};
goog.math.standardDeviation = function(var_args) {
  var sampleSize = arguments.length;
  if (sampleSize < 2) {
    return 0;
  }
  var mean = goog.math.average.apply(null, arguments);
  var variance = goog.math.sum.apply(null, goog.array.map(arguments, function(val) {
    return Math.pow(val - mean, 2);
  })) / (sampleSize - 1);
  return Math.sqrt(variance);
};
goog.math.isInt = function(num) {
  return isFinite(num) && num % 1 == 0;
};
goog.math.isFiniteNumber = function(num) {
  return isFinite(num) && !isNaN(num);
};
goog.math.safeFloor = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.floor(num + (opt_epsilon || 2E-15));
};
goog.math.safeCeil = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.ceil(num - (opt_epsilon || 2E-15));
};
goog.provide("goog.math.Coordinate");
goog.require("goog.math");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0;
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y);
};
if (goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return "(" + this.x + ", " + this.y + ")";
  };
}
goog.math.Coordinate.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.x == b.x && a.y == b.y;
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy);
};
goog.math.Coordinate.magnitude = function(a) {
  return Math.sqrt(a.x * a.x + a.y * a.y);
};
goog.math.Coordinate.azimuth = function(a) {
  return goog.math.angle(0, 0, a.x, a.y);
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy;
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y);
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y);
};
goog.math.Coordinate.prototype.ceil = function() {
  this.x = Math.ceil(this.x);
  this.y = Math.ceil(this.y);
  return this;
};
goog.math.Coordinate.prototype.floor = function() {
  this.x = Math.floor(this.x);
  this.y = Math.floor(this.y);
  return this;
};
goog.math.Coordinate.prototype.round = function() {
  this.x = Math.round(this.x);
  this.y = Math.round(this.y);
  return this;
};
goog.math.Coordinate.prototype.translate = function(tx, opt_ty) {
  if (tx instanceof goog.math.Coordinate) {
    this.x += tx.x;
    this.y += tx.y;
  } else {
    this.x += tx;
    if (goog.isNumber(opt_ty)) {
      this.y += opt_ty;
    }
  }
  return this;
};
goog.math.Coordinate.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.x *= sx;
  this.y *= sy;
  return this;
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height;
};
goog.math.Size.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.width == b.width && a.height == b.height;
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height);
};
if (goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return "(" + this.width + " x " + this.height + ")";
  };
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height);
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height);
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height;
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2;
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height;
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area();
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this;
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height;
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this;
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this;
};
goog.math.Size.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.width *= sx;
  this.height *= sy;
  return this;
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s);
};
goog.provide("goog.dom");
goog.provide("goog.dom.DomHelper");
goog.provide("goog.dom.NodeType");
goog.require("goog.array");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.TagName");
goog.require("goog.dom.classes");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.ASSUME_QUIRKS_MODE = false;
goog.dom.ASSUME_STANDARDS_MODE = false;
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper);
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document;
};
goog.dom.getElement = function(element) {
  return goog.isString(element) ? document.getElementById(element) : element;
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el);
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if (goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className);
  } else {
    if (parent.getElementsByClassName) {
      return parent.getElementsByClassName(className);
    }
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el);
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if (goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className);
  } else {
    retVal = goog.dom.getElementsByClass(className, opt_el)[0];
  }
  return retVal || null;
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return!!(parent.querySelectorAll && parent.querySelector);
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if (goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query);
  }
  if (opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if (tagName) {
      var arrayLike = {};
      var len = 0;
      for (var i = 0, el;el = els[i];i++) {
        if (tagName == el.nodeName) {
          arrayLike[len++] = el;
        }
      }
      arrayLike.length = len;
      return arrayLike;
    } else {
      return els;
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if (opt_class) {
    var arrayLike = {};
    var len = 0;
    for (var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if (typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el;
      }
    }
    arrayLike.length = len;
    return arrayLike;
  } else {
    return els;
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if (key == "style") {
      element.style.cssText = val;
    } else {
      if (key == "class") {
        element.className = val;
      } else {
        if (key == "for") {
          element.htmlFor = val;
        } else {
          if (key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val);
          } else {
            if (goog.string.startsWith(key, "aria-") || goog.string.startsWith(key, "data-")) {
              element.setAttribute(key, val);
            } else {
              element[key] = val;
            }
          }
        }
      }
    }
  });
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "frameborder":"frameBorder", "height":"height", "maxlength":"maxLength", "role":"role", "rowspan":"rowSpan", "type":"type", "usemap":"useMap", "valign":"vAlign", "width":"width"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window);
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight);
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window);
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if (doc) {
    var vh = goog.dom.getViewportSize_(win).height;
    var body = doc.body;
    var docEl = doc.documentElement;
    if (goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight;
    } else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if (docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight;
      }
      if (sh > vh) {
        height = sh > oh ? sh : oh;
      } else {
        height = sh < oh ? sh : oh;
      }
    }
  }
  return height;
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || (goog.global || window);
  return goog.dom.getDomHelper(win.document).getDocumentScroll();
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document);
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop);
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document);
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  return!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window;
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView;
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments);
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if (!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && (attributes && (attributes.name || attributes.type))) {
    var tagNameArr = ["\x3c", tagName];
    if (attributes.name) {
      tagNameArr.push(' name\x3d"', goog.string.htmlEscape(attributes.name), '"');
    }
    if (attributes.type) {
      tagNameArr.push(' type\x3d"', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      delete clone["type"];
      attributes = clone;
    }
    tagNameArr.push("\x3e");
    tagName = tagNameArr.join("");
  }
  var element = doc.createElement(tagName);
  if (attributes) {
    if (goog.isString(attributes)) {
      element.className = attributes;
    } else {
      if (goog.isArray(attributes)) {
        goog.dom.classes.add.apply(null, [element].concat(attributes));
      } else {
        goog.dom.setProperties(element, attributes);
      }
    }
  }
  if (args.length > 2) {
    goog.dom.append_(doc, element, args, 2);
  }
  return element;
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if (child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child);
    }
  }
  for (var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if (goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.toArray(arg) : arg, childHandler);
    } else {
      childHandler(arg);
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name);
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(String(content));
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["\x3ctr\x3e"];
  for (var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "\x3ctd\x3e\x26nbsp;\x3c/td\x3e" : "\x3ctd\x3e\x3c/td\x3e");
  }
  rowHtml.push("\x3c/tr\x3e");
  rowHtml = rowHtml.join("");
  var totalHtml = ["\x3ctable\x3e"];
  for (i = 0;i < rows;i++) {
    totalHtml.push(rowHtml);
  }
  totalHtml.push("\x3c/table\x3e");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return(elem.removeChild(elem.firstChild));
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString);
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if (goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "\x3cbr\x3e" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild);
  } else {
    tempDiv.innerHTML = htmlString;
  }
  if (tempDiv.childNodes.length == 1) {
    return(tempDiv.removeChild(tempDiv.firstChild));
  } else {
    var fragment = doc.createDocumentFragment();
    while (tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild);
    }
    return fragment;
  }
};
goog.dom.getCompatMode = function() {
  return goog.dom.isCss1CompatMode() ? "CSS1Compat" : "BackCompat";
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document);
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if (goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE;
  }
  return doc.compatMode == "CSS1Compat";
};
goog.dom.canHaveChildren = function(node) {
  if (node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false;
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.COMMAND:
    ;
    case goog.dom.TagName.EMBED:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.KEYGEN:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.SOURCE:
    ;
    case goog.dom.TagName.STYLE:
    ;
    case goog.dom.TagName.TRACK:
    ;
    case goog.dom.TagName.WBR:
      return false;
  }
  return true;
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child);
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1);
};
goog.dom.removeChildren = function(node) {
  var child;
  while (child = node.firstChild) {
    node.removeChild(child);
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode);
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling);
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null);
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null;
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if (parent) {
    parent.replaceChild(newNode, oldNode);
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if (parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if (element.removeNode) {
      return(element.removeNode(false));
    } else {
      while (child = element.firstChild) {
        parent.insertBefore(child, element);
      }
      return(goog.dom.removeNode(element));
    }
  }
};
goog.dom.getChildren = function(element) {
  if (goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children;
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT;
  });
};
goog.dom.getFirstElementChild = function(node) {
  if (node.firstElementChild != undefined) {
    return(node).firstElementChild;
  }
  return goog.dom.getNextElementNode_(node.firstChild, true);
};
goog.dom.getLastElementChild = function(node) {
  if (node.lastElementChild != undefined) {
    return(node).lastElementChild;
  }
  return goog.dom.getNextElementNode_(node.lastChild, false);
};
goog.dom.getNextElementSibling = function(node) {
  if (node.nextElementSibling != undefined) {
    return(node).nextElementSibling;
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true);
};
goog.dom.getPreviousElementSibling = function(node) {
  if (node.previousElementSibling != undefined) {
    return(node).previousElementSibling;
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false);
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while (node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling;
  }
  return(node);
};
goog.dom.getNextNode = function(node) {
  if (!node) {
    return null;
  }
  if (node.firstChild) {
    return node.firstChild;
  }
  while (node && !node.nextSibling) {
    node = node.parentNode;
  }
  return node ? node.nextSibling : null;
};
goog.dom.getPreviousNode = function(node) {
  if (!node) {
    return null;
  }
  if (!node.previousSibling) {
    return node.parentNode;
  }
  node = node.previousSibling;
  while (node && node.lastChild) {
    node = node.lastChild;
  }
  return node;
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0;
};
goog.dom.isElement = function(obj) {
  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT;
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj;
};
goog.dom.getParentElement = function(element) {
  if (goog.dom.BrowserFeature.CAN_USE_PARENT_ELEMENT_PROPERTY) {
    return element.parentElement;
  }
  var parent = element.parentNode;
  return goog.dom.isElement(parent) ? (parent) : null;
};
goog.dom.contains = function(parent, descendant) {
  if (parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant);
  }
  if (typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16);
  }
  while (descendant && parent != descendant) {
    descendant = descendant.parentNode;
  }
  return descendant == parent;
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if (node1 == node2) {
    return 0;
  }
  if (node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1;
  }
  if (goog.userAgent.IE && !goog.userAgent.isDocumentMode(9)) {
    if (node1.nodeType == goog.dom.NodeType.DOCUMENT) {
      return-1;
    }
    if (node2.nodeType == goog.dom.NodeType.DOCUMENT) {
      return 1;
    }
  }
  if ("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if (isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex;
    } else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if (parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2);
      }
      if (!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2);
      }
      if (!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1);
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex);
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2);
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if (parent == node) {
    return-1;
  }
  var sibling = node;
  while (sibling.parentNode != parent) {
    sibling = sibling.parentNode;
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode);
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while (s = s.previousSibling) {
    if (s == node1) {
      return-1;
    }
  }
  return 1;
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if (!count) {
    return null;
  } else {
    if (count == 1) {
      return arguments[0];
    }
  }
  var paths = [];
  var minLength = Infinity;
  for (i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while (node) {
      ancestors.unshift(node);
      node = node.parentNode;
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length);
  }
  var output = null;
  for (i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for (var j = 1;j < count;j++) {
      if (first != paths[j][i]) {
        return output;
      }
    }
    output = first;
  }
  return output;
};
goog.dom.getOwnerDocument = function(node) {
  return(node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document);
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc = frame.contentDocument || frame.contentWindow.document;
  return doc;
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow_(goog.dom.getFrameContentDocument(frame));
};
goog.dom.setTextContent = function(element, text) {
  if ("textContent" in element) {
    element.textContent = text;
  } else {
    if (element.firstChild && element.firstChild.nodeType == goog.dom.NodeType.TEXT) {
      while (element.lastChild != element.firstChild) {
        element.removeChild(element.lastChild);
      }
      element.firstChild.data = text;
    } else {
      goog.dom.removeChildren(element);
      var doc = goog.dom.getOwnerDocument(element);
      element.appendChild(doc.createTextNode(String(text)));
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if ("outerHTML" in element) {
    return element.outerHTML;
  } else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML;
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined;
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv;
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if (root != null) {
    var child = root.firstChild;
    while (child) {
      if (p(child)) {
        rv.push(child);
        if (findOne) {
          return true;
        }
      }
      if (goog.dom.findNodes_(child, p, rv, findOne)) {
        return true;
      }
      child = child.nextSibling;
    }
  }
  return false;
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  if (attrNode && attrNode.specified) {
    var index = element.tabIndex;
    return goog.isNumber(index) && (index >= 0 && index < 32768);
  }
  return false;
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if (enable) {
    element.tabIndex = 0;
  } else {
    element.tabIndex = -1;
    element.removeAttribute("tabIndex");
  }
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if (goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText);
  } else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("");
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if (!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {
    textContent = textContent.replace(/ +/g, " ");
  }
  if (textContent != " ") {
    textContent = textContent.replace(/^\s*/, "");
  }
  return textContent;
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("");
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if (node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      if (normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""));
      } else {
        buf.push(node.nodeValue);
      }
    } else {
      if (node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName]);
      } else {
        var child = node.firstChild;
        while (child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling;
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length;
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while (node && node != root) {
    var cur = node;
    while (cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur));
    }
    node = node.parentNode;
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length;
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur = null;
  while (stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if (cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    } else {
      if (cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length;
      } else {
        if (cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length;
        } else {
          for (var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i]);
          }
        }
      }
    }
  }
  if (goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur;
  }
  return cur;
};
goog.dom.isNodeList = function(val) {
  if (val && typeof val.length == "number") {
    if (goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string";
    } else {
      if (goog.isFunction(val)) {
        return typeof val.item == "function";
      }
    }
  }
  return false;
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  if (!opt_tag && !opt_class) {
    return null;
  }
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return(goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.dom.classes.has(node, opt_class));
  }, true));
};
goog.dom.getAncestorByClass = function(element, className) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, className);
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if (!opt_includeNode) {
    element = element.parentNode;
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while (element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if (matcher(element)) {
      return element;
    }
    element = element.parentNode;
    steps++;
  }
  return null;
};
goog.dom.getActiveElement = function(doc) {
  try {
    return doc && doc.activeElement;
  } catch (e) {
  }
  return null;
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || (goog.global.document || document);
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document;
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_;
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  if (goog.isString(element)) {
    return this.document_.getElementById(element);
  } else {
    return element;
  }
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el);
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc);
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc);
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow());
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow());
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments);
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name);
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(String(content));
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString);
};
goog.dom.DomHelper.prototype.getCompatMode = function() {
  return this.isCss1CompatMode() ? "CSS1Compat" : "BackCompat";
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_);
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_);
};
goog.dom.DomHelper.prototype.getActiveElement = function(opt_doc) {
  return goog.dom.getActiveElement(opt_doc || this.document_);
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.canHaveChildren = goog.dom.canHaveChildren;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.insertChildAt = goog.dom.insertChildAt;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getChildren = goog.dom.getChildren;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.isElement = goog.dom.isElement;
goog.dom.DomHelper.prototype.isWindow = goog.dom.isWindow;
goog.dom.DomHelper.prototype.getParentElement = goog.dom.getParentElement;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.compareNodeOrder = goog.dom.compareNodeOrder;
goog.dom.DomHelper.prototype.findCommonAncestor = goog.dom.findCommonAncestor;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.getOuterHtml = goog.dom.getOuterHtml;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.isFocusableTabIndex = goog.dom.isFocusableTabIndex;
goog.dom.DomHelper.prototype.setFocusableTabIndex = goog.dom.setFocusableTabIndex;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getNodeAtOffset = goog.dom.getNodeAtOffset;
goog.dom.DomHelper.prototype.isNodeList = goog.dom.isNodeList;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("goog.async.AnimationDelay");
goog.require("goog.async.Delay");
goog.require("goog.functions");
goog.async.AnimationDelay = function(listener, opt_window, opt_handler) {
  goog.base(this);
  this.listener_ = listener;
  this.handler_ = opt_handler;
  this.win_ = opt_window || window;
  this.callback_ = goog.bind(this.doAction_, this);
};
goog.inherits(goog.async.AnimationDelay, goog.Disposable);
goog.async.AnimationDelay.prototype.id_ = null;
goog.async.AnimationDelay.prototype.usingListeners_ = false;
goog.async.AnimationDelay.TIMEOUT = 20;
goog.async.AnimationDelay.MOZ_BEFORE_PAINT_EVENT_ = "MozBeforePaint";
goog.async.AnimationDelay.prototype.start = function() {
  this.stop();
  this.usingListeners_ = false;
  var raf = this.getRaf_();
  var cancelRaf = this.getCancelRaf_();
  if (raf && (!cancelRaf && this.win_.mozRequestAnimationFrame)) {
    this.id_ = goog.events.listen(this.win_, goog.async.AnimationDelay.MOZ_BEFORE_PAINT_EVENT_, this.callback_);
    this.win_.mozRequestAnimationFrame(null);
    this.usingListeners_ = true;
  } else {
    if (raf && cancelRaf) {
      this.id_ = raf.call(this.win_, this.callback_);
    } else {
      this.id_ = this.win_.setTimeout(goog.functions.lock(this.callback_), goog.async.AnimationDelay.TIMEOUT);
    }
  }
};
goog.async.AnimationDelay.prototype.stop = function() {
  if (this.isActive()) {
    var raf = this.getRaf_();
    var cancelRaf = this.getCancelRaf_();
    if (raf && (!cancelRaf && this.win_.mozRequestAnimationFrame)) {
      goog.events.unlistenByKey(this.id_);
    } else {
      if (raf && cancelRaf) {
        cancelRaf.call(this.win_, (this.id_));
      } else {
        this.win_.clearTimeout((this.id_));
      }
    }
  }
  this.id_ = null;
};
goog.async.AnimationDelay.prototype.fire = function() {
  this.stop();
  this.doAction_();
};
goog.async.AnimationDelay.prototype.fireIfActive = function() {
  if (this.isActive()) {
    this.fire();
  }
};
goog.async.AnimationDelay.prototype.isActive = function() {
  return this.id_ != null;
};
goog.async.AnimationDelay.prototype.doAction_ = function() {
  if (this.usingListeners_ && this.id_) {
    goog.events.unlistenByKey(this.id_);
  }
  this.id_ = null;
  this.listener_.call(this.handler_, goog.now());
};
goog.async.AnimationDelay.prototype.disposeInternal = function() {
  this.stop();
  goog.base(this, "disposeInternal");
};
goog.async.AnimationDelay.prototype.getRaf_ = function() {
  var win = this.win_;
  return win.requestAnimationFrame || (win.webkitRequestAnimationFrame || (win.mozRequestAnimationFrame || (win.oRequestAnimationFrame || (win.msRequestAnimationFrame || null))));
};
goog.async.AnimationDelay.prototype.getCancelRaf_ = function() {
  var win = this.win_;
  return win.cancelRequestAnimationFrame || (win.webkitCancelRequestAnimationFrame || (win.mozCancelRequestAnimationFrame || (win.oCancelRequestAnimationFrame || (win.msCancelRequestAnimationFrame || null))));
};
goog.provide("todomvc.render");
goog.require("cljs.core");
goog.require("todomvc.transact");
goog.require("datascript");
goog.require("quiescent");
goog.require("goog.dom");
goog.require("quiescent.dom");
goog.require("quiescent.dom");
goog.require("goog.dom");
goog.require("todomvc.transact");
goog.require("quiescent");
goog.require("datascript");
goog.require("goog.async.AnimationDelay");
todomvc.render.enter_key_QMARK_ = function enter_key_QMARK_(evt) {
  return cljs.core._EQ_.call(null, 13, evt.keyCode);
};
todomvc.render.Header = quiescent.component.call(null, function(_, conn) {
  return quiescent.dom.header.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "id", "id", 1013907597), "header"], null), quiescent.dom.h1.call(null, cljs.core.PersistentArrayMap.EMPTY, "todos"), quiescent.dom.input.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", 1013907597), "new-todo", new cljs.core.Keyword(null, "placeholder", "placeholder", 1612151013), "What needs to be done?", new cljs.core.Keyword(null, "onKeyDown", 
  "onKeyDown", 1534256180), function(evt) {
    if (todomvc.render.enter_key_QMARK_.call(null, evt)) {
      var text = evt.target.value;
      datascript.transact_BANG_.call(null, conn, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db.fn", "call", "db.fn/call", 2901959894), todomvc.transact.create_item, text], null)], null));
      return evt.target.value = "";
    } else {
      return null;
    }
  }, new cljs.core.Keyword(null, "autoFocus", "autoFocus", 2651959259), true], null)));
});
todomvc.render.ItemFilter = quiescent.component.call(null, function(current_filter, this_filter, label, href, conn) {
  return quiescent.dom.li.call(null, cljs.core.PersistentArrayMap.EMPTY, quiescent.dom.a.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "className", "className", 1004015509), cljs.core._EQ_.call(null, current_filter, this_filter) ? "selected" : null, new cljs.core.Keyword(null, "href", "href", 1017115293), href, new cljs.core.Keyword(null, "onClick", "onClick", 3956969051), function() {
    return datascript.transact_BANG_.call(null, conn, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db.fn", "call", "db.fn/call", 2901959894), todomvc.transact.set_filter, this_filter], null)], null));
  }], null), label));
});
todomvc.render.Filters = quiescent.component.call(null, function(current_filter, conn) {
  return quiescent.dom.ul.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "id", "id", 1013907597), "filters"], null), todomvc.render.ItemFilter.call(null, current_filter, new cljs.core.Keyword(null, "all", "all", 1014000915), "All", "#/", conn), todomvc.render.ItemFilter.call(null, current_filter, new cljs.core.Keyword(null, "active", "active", 3885920888), "Active", "#/active", conn), todomvc.render.ItemFilter.call(null, current_filter, new cljs.core.Keyword(null, 
  "completed", "completed", 3905939901), "Completed", "#/completed", conn));
});
todomvc.render.Footer = quiescent.component.call(null, function(p__20019, conn) {
  var vec__20020 = p__20019;
  var current_filter = cljs.core.nth.call(null, vec__20020, 0, null);
  var items = cljs.core.nth.call(null, vec__20020, 1, null);
  var completed = cljs.core.count.call(null, cljs.core.filter.call(null, new cljs.core.Keyword(null, "completed", "completed", 3905939901), items));
  var left = cljs.core.count.call(null, items) - completed;
  return quiescent.dom.footer.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "id", "id", 1013907597), "footer"], null), quiescent.dom.span.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "id", "id", 1013907597), "todo-count"], null), quiescent.dom.strong.call(null, cljs.core.PersistentArrayMap.EMPTY, [cljs.core.str(left), cljs.core.str(" item(s) left")].join(""))), todomvc.render.Filters.call(null, current_filter, conn), 0 < completed ? 
  quiescent.dom.button.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", 1013907597), "clear-completed", new cljs.core.Keyword(null, "onClick", "onClick", 3956969051), function() {
    return datascript.transact_BANG_.call(null, conn, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db.fn", "call", "db.fn/call", 2901959894), todomvc.transact.clear_completed], null)], null));
  }], null), [cljs.core.str("Clear completed ("), cljs.core.str(completed), cljs.core.str(")")].join("")) : null);
});
todomvc.render.class_name = function class_name(classes) {
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, " ", cljs.core.map.call(null, cljs.core.identity, classes)));
};
todomvc.render.hidden_QMARK_ = function hidden_QMARK_(completed, current_filter) {
  var or__10329__auto__ = function() {
    var and__10317__auto__ = completed;
    if (cljs.core.truth_(and__10317__auto__)) {
      return cljs.core._EQ_.call(null, current_filter, new cljs.core.Keyword(null, "active", "active", 3885920888));
    } else {
      return and__10317__auto__;
    }
  }();
  if (cljs.core.truth_(or__10329__auto__)) {
    return or__10329__auto__;
  } else {
    return cljs.core.not.call(null, completed) && cljs.core._EQ_.call(null, current_filter, new cljs.core.Keyword(null, "completed", "completed", 3905939901));
  }
};
todomvc.render.Item = quiescent.component.call(null, function(p__20021, conn) {
  var vec__20022 = p__20021;
  var map__20023 = cljs.core.nth.call(null, vec__20022, 0, null);
  var map__20023__$1 = cljs.core.seq_QMARK_.call(null, map__20023) ? cljs.core.apply.call(null, cljs.core.hash_map, map__20023) : map__20023;
  var commited = cljs.core.get.call(null, map__20023__$1, new cljs.core.Keyword(null, "commited", "commited", 4706580360));
  var editing = cljs.core.get.call(null, map__20023__$1, new cljs.core.Keyword(null, "editing", "editing", 3420907786));
  var completed = cljs.core.get.call(null, map__20023__$1, new cljs.core.Keyword(null, "completed", "completed", 3905939901));
  var text = cljs.core.get.call(null, map__20023__$1, new cljs.core.Keyword(null, "text", "text", 1017460895));
  var id = cljs.core.get.call(null, map__20023__$1, new cljs.core.Keyword(null, "id", "id", 1013907597));
  var current_filter = cljs.core.nth.call(null, vec__20022, 1, null);
  var completed__$1 = cljs.core.boolean$.call(null, completed);
  return quiescent.dom.li.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "key", "key", 1014010321), id, new cljs.core.Keyword(null, "className", "className", 1004015509), todomvc.render.class_name.call(null, cljs.core.PersistentHashSet.fromArray([completed__$1 ? "completed" : null, cljs.core.truth_(todomvc.render.hidden_QMARK_.call(null, completed__$1, current_filter)) ? "hidden" : null, cljs.core.truth_(editing) ? "editing" : null], true)), new cljs.core.Keyword(null, 
  "onDoubleClick", "onDoubleClick", 4144140362), function(_) {
    if (cljs.core.truth_(commited)) {
      return datascript.transact_BANG_.call(null, conn, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db.fn", "call", "db.fn/call", 2901959894), todomvc.transact.start_edit, id], null)], null));
    } else {
      return null;
    }
  }], null), quiescent.dom.div.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", 1004015509), "view"], null), quiescent.dom.input.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "className", "className", 1004015509), "toggle", new cljs.core.Keyword(null, "type", "type", 1017479852), "checkbox", new cljs.core.Keyword(null, "checked", "checked", 1756218137), completed__$1, new cljs.core.Keyword(null, "onChange", 
  "onChange", 2050678241), cljs.core.truth_(commited) ? function(_) {
    return datascript.transact_BANG_.call(null, conn, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db.fn", "call", "db.fn/call", 2901959894), todomvc.transact.toggle_item, id], null)], null));
  } : null], null)), quiescent.dom.label.call(null, cljs.core.PersistentArrayMap.EMPTY, text), cljs.core.not.call(null, commited) ? quiescent.dom.span.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", 1004015509), "sync glyphicon glyphicon-transfer"], null), "") : quiescent.dom.button.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "className", "className", 1004015509), "destroy", new cljs.core.Keyword(null, 
  "onClick", "onClick", 3956969051), function(_) {
    return datascript.transact_BANG_.call(null, conn, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db.fn", "call", "db.fn/call", 2901959894), todomvc.transact.remove_item, id], null)], null));
  }], null))), quiescent.dom.input.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "className", "className", 1004015509), "edit", new cljs.core.Keyword(null, "defaultValue", "defaultValue", 4649746210), text, new cljs.core.Keyword(null, "onKeyDown", "onKeyDown", 1534256180), function(evt) {
    if (todomvc.render.enter_key_QMARK_.call(null, evt)) {
      return evt.target.blur();
    } else {
      return null;
    }
  }, new cljs.core.Keyword(null, "onBlur", "onBlur", 4295401048), function(evt) {
    var text__$1 = evt.target.value;
    return datascript.transact_BANG_.call(null, conn, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db.fn", "call", "db.fn/call", 2901959894), todomvc.transact.complete_edit, id, text__$1], null)], null));
  }], null), cljs.core.truth_(editing) ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "autoFocus", "autoFocus", 2651959259), true], null) : cljs.core.PersistentArrayMap.EMPTY)));
});
todomvc.render.TodoList = quiescent.component.call(null, function(p__20025, conn) {
  var vec__20026 = p__20025;
  var current_filter = cljs.core.nth.call(null, vec__20026, 0, null);
  var items = cljs.core.nth.call(null, vec__20026, 1, null);
  return cljs.core.apply.call(null, quiescent.dom.ul, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "id", "id", 1013907597), "todo-list"], null), cljs.core.map.call(null, function(p1__20024_SHARP_) {
    return todomvc.render.Item.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__20024_SHARP_, current_filter], null), conn);
  }, items));
});
todomvc.render.App = quiescent.component.call(null, function(p__20027, conn) {
  var map__20028 = p__20027;
  var map__20028__$1 = cljs.core.seq_QMARK_.call(null, map__20028) ? cljs.core.apply.call(null, cljs.core.hash_map, map__20028) : map__20028;
  var error = cljs.core.get.call(null, map__20028__$1, new cljs.core.Keyword(null, "error", "error", 1110689146));
  var items = cljs.core.get.call(null, map__20028__$1, new cljs.core.Keyword(null, "items", "items", 1114430258));
  var current_filter = cljs.core.get.call(null, map__20028__$1, new cljs.core.Keyword(null, "current-filter", "current-filter", 2062811582));
  var all_done_QMARK_ = cljs.core.get.call(null, map__20028__$1, new cljs.core.Keyword(null, "all-done?", "all-done?", 3774632259));
  return quiescent.dom.div.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.truth_(error) ? quiescent.dom.div.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", 1013907597), "todo-error", new cljs.core.Keyword(null, "className", "className", 1004015509), "alert alert-info"], null), "Error occured, reloading page recommended.") : null, quiescent.dom.section.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "id", "id", 
  1013907597), "todoapp"], null), quiescent.dom.div.call(null, cljs.core.PersistentArrayMap.EMPTY, todomvc.render.Header.call(null, null, conn), quiescent.dom.section.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "id", "id", 1013907597), "main"], null), quiescent.dom.input.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", 1013907597), "toggle-all", new cljs.core.Keyword(null, "type", "type", 1017479852), "checkbox", new cljs.core.Keyword(null, 
  "checked", "checked", 1756218137), all_done_QMARK_, new cljs.core.Keyword(null, "onChange", "onChange", 2050678241), function() {
    return datascript.transact_BANG_.call(null, conn, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db.fn", "call", "db.fn/call", 2901959894), todomvc.transact.toggle_all], null)], null));
  }], null)), quiescent.dom.label.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "htmlFor", "htmlFor", 2249940112), "toggle-all"], null), "Mark all as complete"), todomvc.render.TodoList.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [current_filter, items], null), conn)), todomvc.render.Footer.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [current_filter, items], null), 
  conn))));
});
todomvc.render.main = function main(db, conn) {
  return(new goog.async.AnimationDelay(function(ms) {
    var items = cljs.core.sort_by.call(null, new cljs.core.Keyword("db", "id", "db/id", 1014111942), cljs.core.map.call(null, function(p1__20029_SHARP_) {
      return datascript.entity.call(null, db, cljs.core.first.call(null, p1__20029_SHARP_));
    }, datascript.q.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "find", "find", 1017047339), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?e", "?e", -1640529473, null), new cljs.core.Symbol(null, "?id", "?id", -1640467629, null)], null), new cljs.core.Keyword(null, "where", "where", 1127002201), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 
    3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?e", "?e", -1640529473, null), new cljs.core.Keyword(null, "id", "id", 1013907597), new cljs.core.Symbol(null, "?id", "?id", -1640467629, null)], null)], null)], null), db)));
    var state = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "all-done?", "all-done?", 3774632259), cljs.core.seq.call(null, items) && cljs.core.every_QMARK_.call(null, new cljs.core.Keyword(null, "completed", "completed", 3905939901), items), new cljs.core.Keyword(null, "current-filter", "current-filter", 2062811582), cljs.core.ffirst.call(null, datascript.q.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "find", "find", 1017047339), new cljs.core.PersistentVector(null, 
    1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?filter", "?filter", 1458100784, null)], null), new cljs.core.Keyword(null, "where", "where", 1127002201), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "_", "_", -1640531432, null), new cljs.core.Keyword(null, "filter", "filter", 4034379498), new cljs.core.Symbol(null, "?filter", 
    "?filter", 1458100784, null)], null)], null)], null), db)), new cljs.core.Keyword(null, "items", "items", 1114430258), items, new cljs.core.Keyword(null, "error", "error", 1110689146), cljs.core.ffirst.call(null, datascript.q.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "find", "find", 1017047339), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?e", "?e", -1640529473, null)], null), new cljs.core.Keyword(null, 
    "where", "where", 1127002201), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?e", "?e", -1640529473, null), new cljs.core.Keyword(null, "error", "error", 1110689146)], null)], null)], null), db))], null);
    return quiescent.render.call(null, todomvc.render.App.call(null, state, conn), goog.dom.getElement("todopane"));
  })).start();
};
goog.provide("todomvc.services");
goog.require("cljs.core");
goog.require("ajax.core");
goog.require("datascript");
goog.require("datascript");
goog.require("goog.dom");
goog.require("goog.dom");
goog.require("ajax.core");
goog.require("ajax.core");
goog.require("todomvc.transact");
goog.require("todomvc.transact");
todomvc.services.DELETE = function() {
  var DELETE__delegate = function(uri, p__20212) {
    var vec__20214 = p__20212;
    var opts = cljs.core.nth.call(null, vec__20214, 0, null);
    return ajax.core.ajax_request.call(null, uri, "DELETE", ajax.core.transform_opts.call(null, opts));
  };
  var DELETE = function(uri, var_args) {
    var p__20212 = null;
    if (arguments.length > 1) {
      p__20212 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return DELETE__delegate.call(this, uri, p__20212);
  };
  DELETE.cljs$lang$maxFixedArity = 1;
  DELETE.cljs$lang$applyTo = function(arglist__20215) {
    var uri = cljs.core.first(arglist__20215);
    var p__20212 = cljs.core.rest(arglist__20215);
    return DELETE__delegate(uri, p__20212);
  };
  DELETE.cljs$core$IFn$_invoke$arity$variadic = DELETE__delegate;
  return DELETE;
}();
todomvc.services.todos_url = function todos_url() {
  return[cljs.core.str(window.location.pathname), cljs.core.str("/todos")].join("");
};
todomvc.services.csrf_token = function csrf_token() {
  return goog.dom.getElement("csrf-token").getAttribute("value");
};
todomvc.services.error_handler = function error_handler(conn) {
  return datascript.transact_BANG_.call(null, conn, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db.fn", "call", "db.fn/call", 2901959894), todomvc.transact.error, "fail"], null)], null));
};
todomvc.services.handle = function() {
  var method_table__11187__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var prefer_table__11188__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var method_cache__11189__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var cached_hierarchy__11190__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var hierarchy__11191__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", 3129050535), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn("handle", function(event, args, db, conn) {
    return event;
  }, new cljs.core.Keyword(null, "default", "default", 2558708147), hierarchy__11191__auto__, method_table__11187__auto__, prefer_table__11188__auto__, method_cache__11189__auto__, cached_hierarchy__11190__auto__);
}();
cljs.core._add_method.call(null, todomvc.services.handle, new cljs.core.Keyword(null, "create-item", "create-item", 4768804022), function(_, p__20216, db, conn) {
  var vec__20217 = p__20216;
  var temp_id = cljs.core.nth.call(null, vec__20217, 0, null);
  var text = cljs.core.nth.call(null, vec__20217, 1, null);
  return ajax.core.POST.call(null, todomvc.services.todos_url.call(null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "params", "params", 4313443576), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", 1013907597), temp_id, new cljs.core.Keyword(null, "text", "text", 1017460895), text], null), new cljs.core.Keyword(null, "handler", "handler", 1706707644), function(res) {
    console.log([cljs.core.str("Succesful res: "), cljs.core.str(res)].join(""));
    var id = (new cljs.core.Keyword(null, "id", "id", 1013907597)).cljs$core$IFn$_invoke$arity$1(res);
    return datascript.transact_BANG_.call(null, conn, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db.fn", "call", "db.fn/call", 2901959894), todomvc.transact.commit_item, temp_id, id], null)], null));
  }, new cljs.core.Keyword(null, "error-handler", "error-handler", 1866823671), function(res) {
    console.log([cljs.core.str("FAil res: "), cljs.core.str(res)].join(""));
    return todomvc.services.error_handler.call(null, conn);
  }, new cljs.core.Keyword(null, "headers", "headers", 1809212152), new cljs.core.PersistentArrayMap(null, 1, ["X-CSRF-Token", todomvc.services.csrf_token.call(null)], null)], null));
});
cljs.core._add_method.call(null, todomvc.services.handle, new cljs.core.Keyword(null, "complete-edit", "complete-edit", 1152265616), function(event, p__20218, db, conn) {
  var vec__20219 = p__20218;
  var id = cljs.core.nth.call(null, vec__20219, 0, null);
  var text = cljs.core.nth.call(null, vec__20219, 1, null);
  return ajax.core.PUT.call(null, todomvc.services.todos_url.call(null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "params", "params", 4313443576), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", 1013907597), id, new cljs.core.Keyword(null, "text", "text", 1017460895), text], null), new cljs.core.Keyword(null, "handler", "handler", 1706707644), function(res) {
    console.log([cljs.core.str("Succesful res for complete-edit: "), cljs.core.str(res), cljs.core.str(" id is "), cljs.core.str(id), cljs.core.str(" text is "), cljs.core.str(text)].join(""));
    return datascript.transact_BANG_.call(null, conn, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db.fn", "call", "db.fn/call", 2901959894), todomvc.transact.commit_edit, id], null)], null));
  }, new cljs.core.Keyword(null, "error-handler", "error-handler", 1866823671), function(res) {
    console.log([cljs.core.str("Fail res: "), cljs.core.str(res)].join(""));
    return todomvc.services.error_handler.call(null, conn);
  }, new cljs.core.Keyword(null, "format", "format", 4040092521), cljs.core.merge.call(null, ajax.core.edn_request_format.call(null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "read", "read", 1017400584), function(res) {
    var res_text = res.getResponseText();
    if (cljs.core.count.call(null, res_text) > 0) {
      throw new Error([cljs.core.str("Assumed no content response has content: "), cljs.core.str(res_text)].join(""));
    } else {
      return null;
    }
  }, new cljs.core.Keyword(null, "description", "description", 3584325486), "EDN (CUSTOM)"], null)), new cljs.core.Keyword(null, "headers", "headers", 1809212152), new cljs.core.PersistentArrayMap(null, 1, ["X-CSRF-Token", todomvc.services.csrf_token.call(null)], null)], null));
});
cljs.core._add_method.call(null, todomvc.services.handle, new cljs.core.Keyword(null, "toggle-item", "toggle-item", 4616866142), function(event, p__20220, db, conn) {
  var vec__20221 = p__20220;
  var id = cljs.core.nth.call(null, vec__20221, 0, null);
  var completed = cljs.core.nth.call(null, vec__20221, 1, null);
  return ajax.core.PUT.call(null, todomvc.services.todos_url.call(null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "params", "params", 4313443576), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", 1013907597), id, new cljs.core.Keyword(null, "completed", "completed", 3905939901), completed], null), new cljs.core.Keyword(null, "handler", "handler", 1706707644), function(res) {
    return console.log([cljs.core.str("Succesful res: "), cljs.core.str(res)].join(""));
  }, new cljs.core.Keyword(null, "error-handler", "error-handler", 1866823671), function(res) {
    console.log([cljs.core.str("Fail res: "), cljs.core.str(res)].join(""));
    return todomvc.services.error_handler.call(null, conn);
  }, new cljs.core.Keyword(null, "format", "format", 4040092521), cljs.core.merge.call(null, ajax.core.edn_request_format.call(null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "read", "read", 1017400584), function(res) {
    var res_text = res.getResponseText();
    if (cljs.core.count.call(null, res_text) > 0) {
      throw new Error([cljs.core.str("Assumed no content response has content: "), cljs.core.str(res_text)].join(""));
    } else {
      return null;
    }
  }, new cljs.core.Keyword(null, "description", "description", 3584325486), "EDN (CUSTOM)"], null)), new cljs.core.Keyword(null, "headers", "headers", 1809212152), new cljs.core.PersistentArrayMap(null, 1, ["X-CSRF-Token", todomvc.services.csrf_token.call(null)], null)], null));
});
cljs.core._add_method.call(null, todomvc.services.handle, new cljs.core.Keyword(null, "remove-item", "remove-item", 673860142), function(event, p__20222, db, conn) {
  var vec__20223 = p__20222;
  var id = cljs.core.nth.call(null, vec__20223, 0, null);
  return todomvc.services.DELETE.call(null, todomvc.services.todos_url.call(null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "params", "params", 4313443576), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "id", "id", 1013907597), id], null), new cljs.core.Keyword(null, "handler", "handler", 1706707644), function(res) {
    return console.log([cljs.core.str("Succesful res: "), cljs.core.str(res)].join(""));
  }, new cljs.core.Keyword(null, "error-handler", "error-handler", 1866823671), function(res) {
    console.log([cljs.core.str("Fail res: "), cljs.core.str(res)].join(""));
    return todomvc.services.error_handler.call(null, conn);
  }, new cljs.core.Keyword(null, "format", "format", 4040092521), cljs.core.merge.call(null, ajax.core.edn_request_format.call(null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "read", "read", 1017400584), function(res) {
    var res_text = res.getResponseText();
    if (cljs.core.count.call(null, res_text) > 0) {
      throw new Error([cljs.core.str("Assumed no content response has content: "), cljs.core.str(res_text)].join(""));
    } else {
      return null;
    }
  }, new cljs.core.Keyword(null, "description", "description", 3584325486), "EDN (CUSTOM)"], null)), new cljs.core.Keyword(null, "headers", "headers", 1809212152), new cljs.core.PersistentArrayMap(null, 1, ["X-CSRF-Token", todomvc.services.csrf_token.call(null)], null)], null));
});
cljs.core._add_method.call(null, todomvc.services.handle, new cljs.core.Keyword(null, "clear-completed", "clear-completed", 888981053), function(event, p__20224, db, conn) {
  var vec__20225 = p__20224;
  var ids = cljs.core.nth.call(null, vec__20225, 0, null);
  var seq__20226 = cljs.core.seq.call(null, ids);
  var chunk__20227 = null;
  var count__20228 = 0;
  var i__20229 = 0;
  while (true) {
    if (i__20229 < count__20228) {
      var id = cljs.core._nth.call(null, chunk__20227, i__20229);
      todomvc.services.DELETE.call(null, todomvc.services.todos_url.call(null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "params", "params", 4313443576), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "id", "id", 1013907597), id], null), new cljs.core.Keyword(null, "handler", "handler", 1706707644), function(seq__20226, chunk__20227, count__20228, i__20229, id) {
        return function(res) {
          return console.log([cljs.core.str("Succesful res: "), cljs.core.str(res)].join(""));
        };
      }(seq__20226, chunk__20227, count__20228, i__20229, id), new cljs.core.Keyword(null, "error-handler", "error-handler", 1866823671), function(seq__20226, chunk__20227, count__20228, i__20229, id) {
        return function(res) {
          console.log([cljs.core.str("Fail res: "), cljs.core.str(res)].join(""));
          return todomvc.services.error_handler.call(null, conn);
        };
      }(seq__20226, chunk__20227, count__20228, i__20229, id), new cljs.core.Keyword(null, "format", "format", 4040092521), cljs.core.merge.call(null, ajax.core.edn_request_format.call(null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "read", "read", 1017400584), function(seq__20226, chunk__20227, count__20228, i__20229, id) {
        return function(res) {
          var res_text = res.getResponseText();
          if (cljs.core.count.call(null, res_text) > 0) {
            throw new Error([cljs.core.str("Assumed no content response has content: "), cljs.core.str(res_text)].join(""));
          } else {
            return null;
          }
        };
      }(seq__20226, chunk__20227, count__20228, i__20229, id), new cljs.core.Keyword(null, "description", "description", 3584325486), "EDN (CUSTOM)"], null)), new cljs.core.Keyword(null, "headers", "headers", 1809212152), new cljs.core.PersistentArrayMap(null, 1, ["X-CSRF-Token", todomvc.services.csrf_token.call(null)], null)], null));
      var G__20230 = seq__20226;
      var G__20231 = chunk__20227;
      var G__20232 = count__20228;
      var G__20233 = i__20229 + 1;
      seq__20226 = G__20230;
      chunk__20227 = G__20231;
      count__20228 = G__20232;
      i__20229 = G__20233;
      continue;
    } else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__20226);
      if (temp__4092__auto__) {
        var seq__20226__$1 = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__20226__$1)) {
          var c__11077__auto__ = cljs.core.chunk_first.call(null, seq__20226__$1);
          var G__20234 = cljs.core.chunk_rest.call(null, seq__20226__$1);
          var G__20235 = c__11077__auto__;
          var G__20236 = cljs.core.count.call(null, c__11077__auto__);
          var G__20237 = 0;
          seq__20226 = G__20234;
          chunk__20227 = G__20235;
          count__20228 = G__20236;
          i__20229 = G__20237;
          continue;
        } else {
          var id = cljs.core.first.call(null, seq__20226__$1);
          todomvc.services.DELETE.call(null, todomvc.services.todos_url.call(null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "params", "params", 4313443576), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "id", "id", 1013907597), id], null), new cljs.core.Keyword(null, "handler", "handler", 1706707644), function(seq__20226, chunk__20227, count__20228, i__20229, id, seq__20226__$1, temp__4092__auto__) {
            return function(res) {
              return console.log([cljs.core.str("Succesful res: "), cljs.core.str(res)].join(""));
            };
          }(seq__20226, chunk__20227, count__20228, i__20229, id, seq__20226__$1, temp__4092__auto__), new cljs.core.Keyword(null, "error-handler", "error-handler", 1866823671), function(seq__20226, chunk__20227, count__20228, i__20229, id, seq__20226__$1, temp__4092__auto__) {
            return function(res) {
              console.log([cljs.core.str("Fail res: "), cljs.core.str(res)].join(""));
              return todomvc.services.error_handler.call(null, conn);
            };
          }(seq__20226, chunk__20227, count__20228, i__20229, id, seq__20226__$1, temp__4092__auto__), new cljs.core.Keyword(null, "format", "format", 4040092521), cljs.core.merge.call(null, ajax.core.edn_request_format.call(null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "read", "read", 1017400584), function(seq__20226, chunk__20227, count__20228, i__20229, id, seq__20226__$1, temp__4092__auto__) {
            return function(res) {
              var res_text = res.getResponseText();
              if (cljs.core.count.call(null, res_text) > 0) {
                throw new Error([cljs.core.str("Assumed no content response has content: "), cljs.core.str(res_text)].join(""));
              } else {
                return null;
              }
            };
          }(seq__20226, chunk__20227, count__20228, i__20229, id, seq__20226__$1, temp__4092__auto__), new cljs.core.Keyword(null, "description", "description", 3584325486), "EDN (CUSTOM)"], null)), new cljs.core.Keyword(null, "headers", "headers", 1809212152), new cljs.core.PersistentArrayMap(null, 1, ["X-CSRF-Token", todomvc.services.csrf_token.call(null)], null)], null));
          var G__20238 = cljs.core.next.call(null, seq__20226__$1);
          var G__20239 = null;
          var G__20240 = 0;
          var G__20241 = 0;
          seq__20226 = G__20238;
          chunk__20227 = G__20239;
          count__20228 = G__20240;
          i__20229 = G__20241;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
});
cljs.core._add_method.call(null, todomvc.services.handle, new cljs.core.Keyword(null, "toggle-all", "toggle-all", 4455256858), function(event, _, db, conn) {
  var seq__20242 = cljs.core.seq.call(null, datascript.q.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "find", "find", 1017047339), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?id", "?id", -1640467629, null), new cljs.core.Symbol(null, "?completed", "?completed", 1756055205, null)], null), new cljs.core.Keyword(null, "in", "in", 1013907607), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Symbol(null, "$", "$", -1640531491, null), new cljs.core.Symbol(null, "?tx", "?tx", -1640467268, null)], null), new cljs.core.Keyword(null, "where", "where", 1127002201), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?e", "?e", -1640529473, null), new cljs.core.Keyword(null, "id", "id", 1013907597), new cljs.core.Symbol(null, "?id", "?id", 
  -1640467629, null)], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?e", "?e", -1640529473, null), new cljs.core.Keyword(null, "completed", "completed", 3905939901), new cljs.core.Symbol(null, "?completed", "?completed", 1756055205, null), new cljs.core.Symbol(null, "?tx", "?tx", -1640467268, null)], null)], null)], null), db, (new cljs.core.Keyword(null, "max-tx", "max-tx", 4227685119)).cljs$core$IFn$_invoke$arity$1(db)));
  var chunk__20243 = null;
  var count__20244 = 0;
  var i__20245 = 0;
  while (true) {
    if (i__20245 < count__20244) {
      var vec__20246 = cljs.core._nth.call(null, chunk__20243, i__20245);
      var id = cljs.core.nth.call(null, vec__20246, 0, null);
      var completed = cljs.core.nth.call(null, vec__20246, 1, null);
      todomvc.services.handle.call(null, new cljs.core.Keyword(null, "toggle-item", "toggle-item", 4616866142), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [id, completed], null), db, conn);
      var G__20248 = seq__20242;
      var G__20249 = chunk__20243;
      var G__20250 = count__20244;
      var G__20251 = i__20245 + 1;
      seq__20242 = G__20248;
      chunk__20243 = G__20249;
      count__20244 = G__20250;
      i__20245 = G__20251;
      continue;
    } else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__20242);
      if (temp__4092__auto__) {
        var seq__20242__$1 = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__20242__$1)) {
          var c__11077__auto__ = cljs.core.chunk_first.call(null, seq__20242__$1);
          var G__20252 = cljs.core.chunk_rest.call(null, seq__20242__$1);
          var G__20253 = c__11077__auto__;
          var G__20254 = cljs.core.count.call(null, c__11077__auto__);
          var G__20255 = 0;
          seq__20242 = G__20252;
          chunk__20243 = G__20253;
          count__20244 = G__20254;
          i__20245 = G__20255;
          continue;
        } else {
          var vec__20247 = cljs.core.first.call(null, seq__20242__$1);
          var id = cljs.core.nth.call(null, vec__20247, 0, null);
          var completed = cljs.core.nth.call(null, vec__20247, 1, null);
          todomvc.services.handle.call(null, new cljs.core.Keyword(null, "toggle-item", "toggle-item", 4616866142), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [id, completed], null), db, conn);
          var G__20256 = cljs.core.next.call(null, seq__20242__$1);
          var G__20257 = null;
          var G__20258 = 0;
          var G__20259 = 0;
          seq__20242 = G__20256;
          chunk__20243 = G__20257;
          count__20244 = G__20258;
          i__20245 = G__20259;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
});
cljs.core._add_method.call(null, todomvc.services.handle, new cljs.core.Keyword(null, "default", "default", 2558708147), function(_, ___$1) {
  return null;
});
todomvc.services.start_services = function start_services(app) {
  var map__20270 = app;
  var map__20270__$1 = cljs.core.seq_QMARK_.call(null, map__20270) ? cljs.core.apply.call(null, cljs.core.hash_map, map__20270) : map__20270;
  var conn = cljs.core.get.call(null, map__20270__$1, new cljs.core.Keyword(null, "conn", "conn", 1016963742));
  datascript.listen_BANG_.call(null, conn, function(p__20271) {
    var map__20272 = p__20271;
    var map__20272__$1 = cljs.core.seq_QMARK_.call(null, map__20272) ? cljs.core.apply.call(null, cljs.core.hash_map, map__20272) : map__20272;
    var report = map__20272__$1;
    var db_after = cljs.core.get.call(null, map__20272__$1, new cljs.core.Keyword(null, "db-after", "db-after", 1658340159));
    var vec__20273 = cljs.core.first.call(null, datascript.q.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "find", "find", 1017047339), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?event", "?event", 259996532, null), new cljs.core.Symbol(null, "?args", "?args", -1579347115, null)], null), new cljs.core.Keyword(null, "in", "in", 1013907607), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
    [new cljs.core.Symbol(null, "$", "$", -1640531491, null), new cljs.core.Symbol(null, "?tx", "?tx", -1640467268, null)], null), new cljs.core.Keyword(null, "where", "where", 1127002201), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?e", "?e", -1640529473, null), new cljs.core.Keyword(null, "event", "event", 1110795788), new cljs.core.Symbol(null, 
    "?event", "?event", 259996532, null), new cljs.core.Symbol(null, "?tx", "?tx", -1640467268, null)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?e", "?e", -1640529473, null), new cljs.core.Keyword(null, "args", "args", 1016906831), new cljs.core.Symbol(null, "?args", "?args", -1579347115, null)], null)], null)], null), db_after, (new cljs.core.Keyword(null, "max-tx", "max-tx", 4227685119)).cljs$core$IFn$_invoke$arity$1(db_after)));
    var event = cljs.core.nth.call(null, vec__20273, 0, null);
    var args = cljs.core.nth.call(null, vec__20273, 1, null);
    return todomvc.services.handle.call(null, event, args, db_after, conn);
  });
  return ajax.core.GET.call(null, todomvc.services.todos_url.call(null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "handler", "handler", 1706707644), function(res) {
    var seq__20274 = cljs.core.seq.call(null, (new cljs.core.Keyword(null, "todos", "todos", 1124439135)).cljs$core$IFn$_invoke$arity$1(res));
    var chunk__20275 = null;
    var count__20276 = 0;
    var i__20277 = 0;
    while (true) {
      if (i__20277 < count__20276) {
        var map__20278 = cljs.core._nth.call(null, chunk__20275, i__20277);
        var map__20278__$1 = cljs.core.seq_QMARK_.call(null, map__20278) ? cljs.core.apply.call(null, cljs.core.hash_map, map__20278) : map__20278;
        var todo = map__20278__$1;
        var completed = cljs.core.get.call(null, map__20278__$1, new cljs.core.Keyword(null, "completed", "completed", 3905939901));
        var text = cljs.core.get.call(null, map__20278__$1, new cljs.core.Keyword(null, "text", "text", 1017460895));
        var id = cljs.core.get.call(null, map__20278__$1, new cljs.core.Keyword(null, "id", "id", 1013907597));
        datascript.transact_BANG_.call(null, conn, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db.fn", "call", "db.fn/call", 2901959894), todomvc.transact.seed_item, id, text, completed], null)], null));
        var G__20280 = seq__20274;
        var G__20281 = chunk__20275;
        var G__20282 = count__20276;
        var G__20283 = i__20277 + 1;
        seq__20274 = G__20280;
        chunk__20275 = G__20281;
        count__20276 = G__20282;
        i__20277 = G__20283;
        continue;
      } else {
        var temp__4092__auto__ = cljs.core.seq.call(null, seq__20274);
        if (temp__4092__auto__) {
          var seq__20274__$1 = temp__4092__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__20274__$1)) {
            var c__11077__auto__ = cljs.core.chunk_first.call(null, seq__20274__$1);
            var G__20284 = cljs.core.chunk_rest.call(null, seq__20274__$1);
            var G__20285 = c__11077__auto__;
            var G__20286 = cljs.core.count.call(null, c__11077__auto__);
            var G__20287 = 0;
            seq__20274 = G__20284;
            chunk__20275 = G__20285;
            count__20276 = G__20286;
            i__20277 = G__20287;
            continue;
          } else {
            var map__20279 = cljs.core.first.call(null, seq__20274__$1);
            var map__20279__$1 = cljs.core.seq_QMARK_.call(null, map__20279) ? cljs.core.apply.call(null, cljs.core.hash_map, map__20279) : map__20279;
            var todo = map__20279__$1;
            var completed = cljs.core.get.call(null, map__20279__$1, new cljs.core.Keyword(null, "completed", "completed", 3905939901));
            var text = cljs.core.get.call(null, map__20279__$1, new cljs.core.Keyword(null, "text", "text", 1017460895));
            var id = cljs.core.get.call(null, map__20279__$1, new cljs.core.Keyword(null, "id", "id", 1013907597));
            datascript.transact_BANG_.call(null, conn, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db.fn", "call", "db.fn/call", 2901959894), todomvc.transact.seed_item, id, text, completed], null)], null));
            var G__20288 = cljs.core.next.call(null, seq__20274__$1);
            var G__20289 = null;
            var G__20290 = 0;
            var G__20291 = 0;
            seq__20274 = G__20288;
            chunk__20275 = G__20289;
            count__20276 = G__20290;
            i__20277 = G__20291;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  }, new cljs.core.Keyword(null, "error-handler", "error-handler", 1866823671), function(res) {
    return todomvc.services.error_handler.call(null, conn);
  }], null));
};
goog.provide("todomvc.application");
goog.require("cljs.core");
goog.require("todomvc.client_services");
goog.require("datascript");
goog.require("todomvc.render");
goog.require("todomvc.render");
goog.require("todomvc.transact");
goog.require("todomvc.services");
goog.require("datascript");
goog.require("goog.events");
goog.require("todomvc.transact");
goog.require("todomvc.client_services");
goog.require("goog.events");
goog.require("todomvc.services");
todomvc.application.load_app = function load_app() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "conn", "conn", 1016963742), datascript.create_conn.call(null, cljs.core.PersistentArrayMap.EMPTY), new cljs.core.Keyword(null, "render", "render", 4374279432), todomvc.render.main, new cljs.core.Keyword(null, "service", "service", 2998057511), todomvc.services.start_services], null);
};
todomvc.application.start_app = function start_app(app_config) {
  var map__20170 = app_config;
  var map__20170__$1 = cljs.core.seq_QMARK_.call(null, map__20170) ? cljs.core.apply.call(null, cljs.core.hash_map, map__20170) : map__20170;
  var app = map__20170__$1;
  var service = cljs.core.get.call(null, map__20170__$1, new cljs.core.Keyword(null, "service", "service", 2998057511));
  var render = cljs.core.get.call(null, map__20170__$1, new cljs.core.Keyword(null, "render", "render", 4374279432));
  var conn = cljs.core.get.call(null, map__20170__$1, new cljs.core.Keyword(null, "conn", "conn", 1016963742));
  var current_filter = cljs.core.get.call(null, new cljs.core.PersistentArrayMap(null, 4, ["", new cljs.core.Keyword(null, "all", "all", 1014000915), "#/", new cljs.core.Keyword(null, "all", "all", 1014000915), "#/active", new cljs.core.Keyword(null, "active", "active", 3885920888), "#/completed", new cljs.core.Keyword(null, "completed", "completed", 3905939901)], null), window.location.hash);
  datascript.transact_BANG_.call(null, conn, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword("db", "id", "db/id", 1014111942), -1, new cljs.core.Keyword(null, "filter", "filter", 4034379498), current_filter], null)], null));
  datascript.listen_BANG_.call(null, conn, function(report) {
    return render.call(null, (new cljs.core.Keyword(null, "db-after", "db-after", 1658340159)).cljs$core$IFn$_invoke$arity$1(report), conn);
  });
  service.call(null, app);
  render.call(null, cljs.core.deref.call(null, conn), conn);
  todomvc.application.app = app;
};
todomvc.application.main = function main() {
  return todomvc.application.start_app.call(null, todomvc.application.load_app.call(null));
};
goog.exportSymbol("todomvc.application.main", todomvc.application.main);
todomvc.application.load_local_app = function load_local_app() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "conn", "conn", 1016963742), datascript.create_conn.call(null, cljs.core.PersistentArrayMap.EMPTY), new cljs.core.Keyword(null, "render", "render", 4374279432), todomvc.render.main, new cljs.core.Keyword(null, "service", "service", 2998057511), todomvc.client_services.start_services], null);
};
todomvc.application.client_local = function client_local() {
  return todomvc.application.start_app.call(null, todomvc.application.load_local_app.call(null));
};
goog.exportSymbol("todomvc.application.client_local", todomvc.application.client_local);
